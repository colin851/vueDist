{"version":3,"sources":["webpack:///./src/views/Home/index.vue?3156","webpack:///./node_modules/ssr-window/dist/ssr-window.esm.js","webpack:///./node_modules/dom7/dist/dom7.modular.js","webpack:///./node_modules/swiper/dist/js/swiper.esm.bundle.js","webpack:///./node_modules/better-scroll/dist/bscroll.esm.js","webpack:///src/views/Home/index.vue","webpack:///./src/views/Home/index.vue?c7c2","webpack:///./src/views/Home/index.vue?b046","webpack:///./src/assets/img/banner1.png","webpack:///./src/views/Home/index.vue?3152","webpack:///./src/assets/img/banner2.png"],"names":["Homevue_type_template_id_579782ef_render","_vm","this","_h","$createElement","_c","_self","_m","staticClass","style","attrs","src","__webpack_require__","staticRenderFns","doc","document","body","addEventListener","removeEventListener","activeElement","blur","nodeName","querySelector","querySelectorAll","getElementById","createEvent","initEvent","createElement","children","childNodes","setAttribute","getElementsByTagName","location","hash","win","window","navigator","userAgent","history","CustomEvent","getComputedStyle","getPropertyValue","Image","Date","screen","setTimeout","clearTimeout","Dom7","[object Object]","arr","self","i","length","$","selector","context","els","tempParent","html","trim","indexOf","toCreate","innerHTML","push","match","split","nodeType","unique","uniqueArray","addClass","className","classes","j","classList","add","removeClass","remove","hasClass","contains","toggleClass","toggle","attr","value","arguments","getAttribute","attrName","removeAttr","removeAttribute","data","key","el","dom7ElementDataStorage","dataKey","transform","elStyle","webkitTransform","transition","duration","webkitTransitionDuration","transitionDuration","on","args","eventType","targetSelector","listener","capture","handleLiveEvent","e","target","eventData","dom7EventData","unshift","is","apply","parents","k","handleEvent","undefined","events","event","dom7LiveListeners","proxyListener","dom7Listeners","off","handlers","handler","splice","trigger","evt","detail","bubbles","cancelable","filter","dataIndex","dispatchEvent","transitionEnd","callback","dom","fireCallBack","call","dom7_modular_outerWidth","includeMargins","styles","offsetWidth","parseFloat","dom7_modular_outerHeight","offsetHeight","offset","box","getBoundingClientRect","clientTop","clientLeft","scrollTop","scrollY","scrollLeft","scrollX","top","left","css","props","prop","each","dom7_modular_html","dom7_modular_text","text","textContent","compareWith","matches","webkitMatchesSelector","msMatchesSelector","dom7_modular_index","child","previousSibling","eq","index","returnIndex","append","newChild","tempDiv","firstChild","appendChild","prepend","insertBefore","next","nextElementSibling","nextAll","nextEls","prev","previousElementSibling","prevAll","prevEls","dom7_modular_parent","parentNode","parent","closest","find","foundElements","found","removeChild","toAdd","fn","prototype","Class","Methods","outerWidth","outerHeight","Object","keys","forEach","methodName","Utils","obj","object","delay","now","axis","matrix","curTransform","transformMatrix","curStyle","WebKitCSSMatrix","map","a","replace","join","MozTransform","OTransform","MsTransform","msTransform","toString","m41","m42","url","query","params","param","urlToParse","href","paramsPart","decodeURIComponent","o","constructor","to","nextSource","keysArray","nextIndex","len","nextKey","desc","getOwnPropertyDescriptor","enumerable","isObject","extend","swiper_esm_bundle_Support","testDiv","touch","Modernizr","DocumentTouch","pointerEvents","pointerEnabled","PointerEvent","prefixedPointerEvents","msPointerEnabled","transforms3d","csstransforms3d","flexbox","styles$$1","observer","passiveListener","supportsPassive","opts","defineProperty","gestures","SwiperClass","eventsListeners","eventName","priority","method","onceHandler","eventHandler","index$$1","data$$1","Array","isArray","slice","eventsArray","instanceParams","instance","modules","moduleName","module","modulesParams","moduleParams","modulePropName","moduleProp","bind","moduleEventName","create","components","use","name","proto","static","install","m","installModule","updateSize","swiper","width","height","$el","clientWidth","clientHeight","isHorizontal","isVertical","parseInt","size","updateSlides","$wrapperEl","swiperSize","rtlTranslate","rtl","wrongRTL","isVirtual","virtual","enabled","previousSlidesLength","slides","slideClass","slidesLength","snapGrid","slidesGrid","slidesSizesGrid","offsetBefore","slidesOffsetBefore","offsetAfter","slidesOffsetAfter","previousSnapGridLength","previousSlidesGridLength","slidesNumberEvenToRows","slideSize","spaceBetween","slidePosition","prevSlideSize","virtualSize","marginLeft","marginTop","marginRight","marginBottom","slidesPerColumn","Math","floor","ceil","slidesPerView","slidesPerColumnFill","max","slidesPerRow","numFullColumns","slide","newSlideOrderIndex","column","row","-webkit-box-ordinal-group","-moz-box-ordinal-group","-ms-flex-order","-webkit-order","order","slideStyles","currentTransform","currentWebKitTransform","roundLengths","swiperSlideSize","centeredSlides","abs","slidesPerGroup","newSlidesGrid","effect","setWrapperSize","slidesGridItem","centerInsufficientSlides","allSlidesSize","slideSizeValue","allSlidesOffset","snap","snapIndex","emit","watchOverflow","checkOverflow","watchSlidesProgress","watchSlidesVisibility","updateSlidesOffset","updateAutoHeight","speed","activeSlides","newHeight","setTransition","activeIndex","swiperSlideOffset","offsetLeft","offsetTop","updateSlidesProgress","translate","offsetCenter","slideVisibleClass","visibleSlidesIndexes","visibleSlides","slideProgress","minTranslate","slideBefore","slideAfter","isVisible","progress","updateProgress","translatesDiff","maxTranslate","isBeginning","isEnd","wasBeginning","wasEnd","updateSlidesClasses","realIndex","activeSlide","slideActiveClass","slideNextClass","slidePrevClass","slideDuplicateActiveClass","slideDuplicateNextClass","slideDuplicatePrevClass","loop","slideDuplicateClass","nextSlide","prevSlide","updateActiveIndex","newActiveIndex","previousIndex","previousRealIndex","previousSnapIndex","normalizeSlideIndex","updateClickedSlide","slideFound","clickedSlide","clickedIndex","slideToClickedSlide","update","getTranslate","virtualTranslate","currentTranslate","setTranslate","byController","x","y","z","newProgress","previousTranslate","swiper_esm_bundle_translate","transitionStart","runCallbacks","direction","autoHeight","dir","transitionEnd$1","animating","transition$1","slideTo","internal","slideIndex","preventInteractionOnTransition","initialSlide","initialized","allowSlideNext","allowSlidePrev","onSlideToWrapperTransitionEnd","destroyed","slideToLoop","newIndex","loopedSlides","slideNext","loopFix","_clientLeft","slidePrev","normalize","val","normalizedTranslate","normalizedSnapGrid","prevSnap","prevIndex","slideReset","slideToClosest","currentSnap","nextSnap","slidesPerViewDynamic","slideToIndex","nextTick","swiper_esm_bundle_slide","loopCreate","loopFillGroupWithBlank","blankSlidesNum","blankNode","slideBlankClass","loopAdditionalSlides","prependSlides","appendSlides","cloneNode","snapTranslate","diff","slideChanged","loopDestroy","setGrabCursor","moving","simulateTouch","isLocked","cursor","unsetGrabCursor","grabCursor","appendSlide","prependSlide","addSlide","activeIndexBuffer","baseLength","slidesBuffer","currentSlide","removeSlide","slidesIndexes","indexToRemove","removeAllSlides","manipulation","swiper_esm_bundle_Device","ua","device","ios","android","androidChrome","desktop","windows","iphone","ipod","ipad","cordova","phonegap","os","osVersion","toLowerCase","webView","osVersionArr","metaViewport","minimalUi","pixelRatio","devicePixelRatio","onTouchStart","touchEventsData","touches","originalEvent","isTouchEvent","type","which","button","isTouched","isMoved","noSwiping","noSwipingSelector","noSwipingClass","allowClick","swipeHandler","currentX","targetTouches","pageX","currentY","pageY","startX","startY","edgeSwipeDetection","iOSEdgeSwipeDetection","edgeSwipeThreshold","iOSEdgeSwipeThreshold","allowTouchCallbacks","isScrolling","startMoving","touchStartTime","swipeDirection","threshold","allowThresholdMove","preventDefault","formElements","allowTouchMove","touchStartPreventDefault","onTouchMove","preventedByNestedSwiper","touchReleaseOnEdges","diffX","diffY","sqrt","touchAngle","atan2","PI","touchMoveStopPropagation","nested","stopPropagation","startTranslate","allowMomentumBounce","touchRatio","disableParentSwiper","resistanceRatio","resistance","followFinger","freeMode","velocities","position","time","onTouchEnd","touchEndTime","timeDiff","lastClickTime","clickTimeout","currentPos","freeModeMomentum","lastMoveEvent","pop","velocityEvent","distance","velocity","freeModeMinimumVelocity","freeModeMomentumVelocityRatio","momentumDuration","freeModeMomentumRatio","momentumDistance","newPosition","afterBouncePosition","doBounce","bounceAmount","freeModeMomentumBounceRatio","needsLoopFix","freeModeMomentumBounce","freeModeSticky","once","longSwipesMs","stopIndex","groupSize","ratio","longSwipes","longSwipesRatio","shortSwipes","onResize","breakpoints","setBreakpoint","newTranslate","min","swiper_esm_bundle_onClick","preventClicks","preventClicksPropagation","stopImmediatePropagation","attachEvents","touchEvents","wrapperEl","onClick","touchEventsTarget","start","passiveListeners","passive","move","end","detachEvents","swiper_esm_bundle_events","breakpoint","getBreakpoint","currentBreakpoint","breakPointsParams","originalParams","needsReLoop","points","point","sort","b","breakpointsInverse","innerWidth","swiper_esm_bundle_breakpoints","swiper_esm_bundle_Browser","isSafari","isIE","isEdge","isUiWebView","test","addClasses","classNames","suffixes","suffix","containerModifierClass","removeClasses","loadImage","imageEl","srcset","sizes","checkForComplete","image","onReady","complete","onload","onerror","preloadImages","imagesLoaded","imagesToLoad","updateOnImagesReady","currentSrc","swiper_esm_bundle_images","wasLocked","navigation","checkOverflow$1","defaults","init","uniqueNavElements","wrapperClass","runCallbacksOnInit","prototypes","images","extendedDefaults","swiper_esm_bundle_Swiper","super","prototypeGroup","protoMethod","moduleParamName","swiperParams","useModulesParams","passedParams","swipers","containerEl","newParams","touchEventsTouch","touchEventsDesktop","useModules","spv","breakLoop","translateValue","translated","deleteInstance","cleanStyles","deleteProps","newDefaults","Device$1","Support$1","support","Browser$1","browser","Resize","resize","resizeHandler","orientationChangeHandler","Observer","func","MutationObserver","WebkitMutationObserver","options","ObserverFunc","mutations","observerUpdate","requestAnimationFrame","observe","attributes","childList","characterData","observers","observeParents","containerParents","attach","disconnect","Observer$1","destroy","Virtual","force","addSlidesBefore","addSlidesAfter","from","previousFrom","previousTo","previousSlidesGrid","renderSlide","previousOffset","offsetProp","slidesAfter","slidesBefore","offset$$1","onRendered","lazy","load","renderExternal","slidesToRender","prependIndexes","appendIndexes","cache","$slideEl","newCache","cachedIndex","Virtual$1","overwriteParams","Keyboard","kc","keyCode","charCode","shiftKey","altKey","ctrlKey","metaKey","keyboard","onlyInViewport","inView","windowWidth","windowHeight","innerHeight","swiperOffset","swiperCoord","returnValue","handle","Keyboard$1","enable","disable","isEventSupported","isSupported","element","implementation","hasFeature","Mousewheel","lastScrollTime","PIXEL_STEP","LINE_HEIGHT","PAGE_HEIGHT","sX","sY","pX","pY","wheelDelta","wheelDeltaY","wheelDeltaX","HORIZONTAL_AXIS","deltaY","deltaX","deltaMode","spinX","spinY","pixelX","pixelY","mouseEntered","mousewheel","releaseOnEdges","delta","rtlFactor","forceToAxis","invert","sensitivity","timeout","autoplay","autoplayDisableOnInteraction","stop","getTime","eventsTarged","handleMouseEnter","handleMouseLeave","Mousewheel$1","Navigation","$nextEl","$prevEl","disabledClass","lockClass","nextEl","prevEl","Navigation$1","hideOnClick","hiddenClass","Pagination","pagination","current","total","paginationType","bullets","firstIndex","lastIndex","midIndex","dynamicBullets","bulletSize","dynamicMainBullets","dynamicBulletIndex","bulletActiveClass","bullet","$bullet","bulletIndex","$firstDisplayedBullet","$lastDisplayedBullet","dynamicBulletsLength","bulletsOffset","currentClass","formatFractionCurrent","totalClass","formatFractionTotal","progressbarDirection","progressbarOpposite","scale","scaleX","scaleY","progressbarFillClass","renderCustom","paginationHTML","numberOfBullets","renderBullet","bulletClass","bulletElement","renderFraction","renderProgressbar","clickable","clickableClass","modifierClass","progressbarOppositeClass","Pagination$1","number","render","Scrollbar","scrollbar","dragSize","trackSize","$dragEl","newSize","newPos","hide","opacity","divider","moveDivider","display","scrollbarHide","pointerPosition","positionRatio","clientX","clientY","setDragPosition","dragTimeout","snapOnRelease","activeListener","onDragStart","onDragMove","onDragEnd","$swiperEl","dragClass","dragEl","draggable","enableDraggable","disableDraggable","Scrollbar$1","Parallax","p","currentOpacity","currentScale","parallax","setTransform","slideEl","parallaxEl","$parallaxEl","parallaxDuration","Parallax$1","Zoom","x1","y1","x2","y2","zoom","gesture","fakeGestureTouched","fakeGestureMoved","scaleStart","getDistanceBetweenTouches","$imageEl","$imageWrapEl","containerClass","maxRatio","isScaling","scaleMove","minRatio","changedTouches","touchesStart","slideWidth","slideHeight","scaledWidth","scaledHeight","minX","maxX","minY","maxY","touchesCurrent","prevPositionX","prevPositionY","prevTime","momentumDurationX","momentumDurationY","momentumDistanceX","newPositionX","momentumDistanceY","newPositionY","out","in","touchX","touchY","offsetX","offsetY","translateX","translateY","imageWidth","imageHeight","translateMinX","translateMinY","translateMaxX","translateMaxY","zoomedSlideClass","onGestureStart","onGestureChange","onGestureEnd","Zoom$1","onTransitionEnd","Lazy","loadInDuplicate","$images","elementClass","loadedClass","loadingClass","imageIndex","background","preloaderClass","slideOriginalIndex","originalSlide","loadInSlide","duplicatedSlide","slideExist","initialImageLoaded","elIndex","loadPrevNext","loadPrevNextAmount","amount","maxIndex","minIndex","Lazy$1","loadOnTransitionStart","Controller","LinearSpline","binarySearch","guess","array","i1","i3","interpolate","c","controller","spline","controlled","control","multiplier","controlledTranslate","setControlledTranslate","by","getInterpolateFunction","inverse","setControlledTransition","Controller$1","a11y","role","label","$targetEl","notify","lastSlideMessage","nextSlideMessage","firstSlideMessage","prevSlideMessage","click","message","notification","liveRegion","disableEl","enableEl","bulletEl","$bulletEl","makeElFocusable","addElRole","addElLabel","paginationBulletMessage","onEnterKey","A11y","notificationClass","updateNavigation","updatePagination","History","pushState","hashNavigation","paths","getPathValues","scrollToSlide","replaceState","setHistoryPopState","pathArray","pathname","part","slugify","includes","currentState","state","text$$1","slideHistory","History$1","setHistory","HashNavigation","newHash","activeSlideHash","slideHash","watchState","onHashCange","HashNavigation$1","setHash","Autoplay","$activeSlideEl","reverseDirection","stopOnLastSlide","running","run","paused","waitForTransition","Autoplay$1","disableOnInteraction","pause","Fade","tx","ty","slideOpacity","fadeEffect","crossFade","eventTriggered","triggerEvents","EffectFade","Cube","swiperWidth","swiperHeight","cubeEffect","$cubeShadowEl","wrapperRotate","shadow","slideAngle","round","tz","transform$$1","slideShadows","shadowBefore","shadowAfter","-webkit-transform-origin","-moz-transform-origin","-ms-transform-origin","transform-origin","shadowOffset","shadowScale","shadowAngle","sin","cos","scale1","scale2","zFactor","EffectCube","Flip","flipEffect","limitRotation","rotate","rotateY","rotateX","zIndex","EffectFlip","Coverflow","coverflowEffect","center","depth","slideOffset","offsetMultiplier","modifier","translateZ","stretch","slideTransform","$shadowBeforeEl","$shadowAfterEl","ws","perspectiveOrigin","EffectCoverflow","Thumbs","thumbs","thumbsParams","swiperCreated","thumbsContainerClass","onThumbClick","thumbsSwiper","currentIndex","initial","newThumbsIndex","currentThumbsIndex","prevThumbsIndex","nextThumbsIndex","thumbsToActivate","thumbActiveClass","slideThumbActiveClass","Thumbs$1","swiper_esm_bundle","slicedToArray","sliceIterator","_arr","_n","_d","_e","_s","_i","Symbol","iterator","done","err","TypeError","toConsumableArray","arr2","eventMixin","BScroll","_events","magic","count","eventsCopy","concat","_event","inBrowser","bscroll_esm_ua","isWeChatDevTools","isAndroid","getNow","performance","timing","navigationStart","_len","rest","_key","source","isUndef","v","getDistance","elementStyle","vendor","transformNames","webkit","Moz","O","ms","standard","prefixStyle","charAt","toUpperCase","substr","addEvent","removeEvent","bscroll_esm_offset","offsetParent","offsetToBody","rect","pageXOffset","pageYOffset","cssVendor","bscroll_esm_transform","bscroll_esm_transition","hasPerspective","hasTouch","hasTransform","hasTransition","transitionTimingFunction","transitionDelay","transformOrigin","TOUCH_EVENT","MOUSE_EVENT","touchstart","touchmove","touchend","mousedown","mousemove","mouseup","getRect","SVGElement","preventDefaultException","exceptions","tap","ev","bscroll_esm_click","eventSource","posSrc","screenX","screenY","MouseEvent","forwardedTouchEvent","_constructed","dblclick","bscroll_esm_prepend","before","DEFAULT_OPTIONS","freeScroll","directionLockThreshold","eventPassthrough","bounce","bounceTime","momentum","momentumLimitTime","momentumLimitDistance","swipeTime","swipeBounceTime","deceleration","flickLimitTime","flickLimitDistance","resizePolling","probeType","tagName","HWCompositing","useTransition","useTransform","bindToWrapper","disableMouse","disableTouch","observeDOM","autoBlur","wheel","pullDownRefresh","pullUpLoad","mouseWheel","infinity","initMixin","_init","_handleOptions","directionX","directionY","setScale","_addDOMEvents","_initExtFeatures","_watchTransition","_initDOMObserver","_handleAutoBlur","refresh","scrollTo","lastScale","eventOperation","_handleDOMEvents","_removeDOMEvents","wrapper","scroller","_initSnap","_initScrollbar","_initPullUp","_initPullDown","_initWheel","_initMouseWheel","_initZoom","_initInfinite","me","isInTransition","get","set","newVal","pulling","_this","timer","_shouldNotRefresh","immediateRefresh","deferredRefresh","mutation","config","subtree","_checkDOMUpdate","outsideBoundaries","minScrollX","maxScrollX","minScrollY","maxScrollY","stopFromTransition","scrollerRect","oldWidth","oldHeight","check","newWidth","_this2","_start","_zoomStart","_zoom","_move","scaled","_zoomEnd","_end","_resize","_transitionEnd","_onMouseWheel","isWrapperStatic","wrapperRect","wrapperWidth","wrapperHeight","scrollerWidth","scrollerHeight","relativeX","relativeY","items","itemHeight","selectedIndex","hasHorizontalScroll","hasVerticalScroll","endTime","wrapperOffset","resetPosition","ease","swipe","t","swipeBounce","lowerMargin","upperMargin","wrapperSize","rate","destination","DEFAULT_INTERVAL","noop","bscroll_esm_requestAnimationFrame","webkitRequestAnimationFrame","mozRequestAnimationFrame","oRequestAnimationFrame","interval","bscroll_esm_cancelAnimationFrame","cancelAnimationFrame","webkitCancelAnimationFrame","mozCancelAnimationFrame","oCancelAnimationFrame","id","DIRECTION_UP","DIRECTION_DOWN","DIRECTION_LEFT","DIRECTION_RIGHT","PROBE_DEBOUNCE","PROBE_REALTIME","warn","msg","console","error","assert","condition","Error","coreMixin","_eventType","initiated","moved","distX","distY","movingDirectionX","movingDirectionY","directionLocked","_transitionTime","startTime","absStartX","absStartY","pointX","pointY","absDistX","absDistY","timestamp","newX","newY","bottom","right","_translate","documentElement","_checkPullDown","_checkClick","flick","momentumX","momentumY","adjustTime","easing","_nearestSnap","currentPage","snapSpeed","preventClick","wheelWrapperClass","_offset","scrollToElement","_dblclick","dblclickTrigged","_dblclick$delay","resizeTimeout","_startProbe","probeTimer","probe","pos","getComputedPosition","scrollerStyle","indicators","transitionTime","_transitionTimingFunction","_i2","needReset","_options$wheel$rotate","deg","_i3","updatePosition","_animate","destX","destY","easingFn","startScale","destScale","destTime","step","isAnimating","newScale","animateTimer","scrollBy","_reflow","wheelItemClass","easeing","roundX","roundY","snapMixin","pages","stepX","stepY","cx","cy","l","n","_checkSnapLoop","initPageX","_loopX","initPageY","_loopY","_goToPage","snapThreshold","snapThresholdX","snapThresholdY","listenFlick","_children","posX","posY","goToPage","getCurrentPage","wheelMixin","wheelTo","getSelectedIndex","INDICATOR_MIN_LEN","scrollbarMixin","_options$scrollbar","_options$scrollbar$fa","fade","_options$scrollbar$in","interactive","indicator","createScrollbar","_insertScrollBar","Indicator","_removeScrollBars","cssText","wrapperStyle","indicatorStyle","visible","sizeRatioX","sizeRatioY","maxPosX","maxPosY","pullDownMixin","_options$pullDownRefr","_options$pullDownRefr2","_options$pullDownRefr3","finishPullDown","openPullDown","closePullDown","pullUpMixin","pullupWatching","_watchPullUp","_checkToEnd","_options$pullUpLoad$t","finishPullUp","openPullUp","closePullUp","mouseWheelMixin","_handleMouseWheelEvent","mouseWheelTimer","mouseWheelEndTimer","firstWheelOpreation","_options$mouseWheel","_options$mouseWheel$s","_options$mouseWheel$i","_options$mouseWheel$e","easeTime","needTriggerEnd","zoomMixin","_options$zoom","_options$zoom$start","_options$zoom$min","_options$zoom$max","_zoomTo","originX","originY","zoomTo","_offsetToBody","firstFinger","secondFinger","startDistance","_offsetToBody2","_options$zoom2","_options$zoom2$min","_options$zoom2$max","pow","_options$zoom3","_options$zoom3$min","_options$zoom3$max","_shouldShow","_calculate","hold","fadeTimeout","indicatorHeight","_height","indicatorWidth","_width","lastPointX","lastPointY","_handleMoveEvents","_pos","snapOption","_snapOption$easing","RUNWAY_ITEMS","RUNWAY_ITEMS_OPPOSITE","ANIMATION_DURATION_MS","DEFAULT_SCROLL_RUNWAY","infiniteMixin","infiniteScroller","InfiniteScroller","isTombstoneNode","node","createTombstone","fetch","firstAttachedItem","lastAttachedItem","anchorScrollTop","anchorItem","tombstoneHeight","tombstoneWidth","tombstones","loadedItems","requestInProgress","hasMore","scrollerEl","onScroll","item","_calculateAnchoredItem","lastScreenItem","fill","maybeRequestContent","tombstone","attachContent","_this3","itemsNeeded","then","addContent","tombstoneLen","_removeTombstones","curPos","_fixScrollPosition","_setupAnimations","_addItem","unusedNodes","_collectUnusedNodes","tombstoneAnimations","_createDOMNodes","_cleanupUnusedNodes","_cacheNodeSize","resetMore","markIndex","itemLen","currentNode","currentData","_getTombStone","isTombstone","_this4","animation","_animation","tombstoneNode","_animation2","initialAnchor","Version","Homevue_type_script_lang_js_","mainslider","isLoaded","myswiper","styleObj","background-image","styleObj1","created","mounted","that","jquery_default","imgLoad","views_Homevue_type_script_lang_js_","component","componentNormalizer","__file","__webpack_exports__","exports","_node_modules_mini_css_extract_plugin_dist_loader_js_ref_6_oneOf_1_0_node_modules_css_loader_index_js_ref_6_oneOf_1_1_node_modules_vue_loader_lib_loaders_stylePostLoader_js_node_modules_postcss_loader_lib_index_js_ref_6_oneOf_1_2_node_modules_cache_loader_dist_cjs_js_ref_0_0_node_modules_vue_loader_lib_index_js_vue_loader_options_index_vue_vue_type_style_index_0_lang_css___WEBPACK_IMPORTED_MODULE_0__","_node_modules_mini_css_extract_plugin_dist_loader_js_ref_6_oneOf_1_0_node_modules_css_loader_index_js_ref_6_oneOf_1_1_node_modules_vue_loader_lib_loaders_stylePostLoader_js_node_modules_postcss_loader_lib_index_js_ref_6_oneOf_1_2_node_modules_cache_loader_dist_cjs_js_ref_0_0_node_modules_vue_loader_lib_index_js_vue_loader_options_index_vue_vue_type_style_index_0_lang_css___WEBPACK_IMPORTED_MODULE_0___default"],"mappings":"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","file":"js/chunk-f0c5efa4.073f317c.js","sourcesContent":["var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',[_vm._m(0),_c('div',{staticClass:\"contaniner\"},[_c('div',{staticClass:\"swiper-container\"},[_c('div',{staticClass:\"swiper-wrapper\"},[_c('div',{staticClass:\"swiper-slide\"},[_c('a',{staticClass:\"slidecontent banner1\",style:(_vm.styleObj)},[_c('img',{attrs:{\"src\":require('../../assets/img/banner1.png')}})])]),_c('div',{staticClass:\"swiper-slide\"},[_c('a',{staticClass:\"slidecontent banner2\",style:(_vm.styleObj1)},[_c('img',{attrs:{\"src\":require('../../assets/img/banner2.png')}})])])]),_c('div',{staticClass:\"swiper-pagination\"})])])])}\nvar staticRenderFns = [function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:\"loading-block\"},[_c('span',{staticClass:\"span1\"},[_c('i',{staticClass:\"slider loading1\"})]),_c('span',{staticClass:\"span2\"},[_c('i',{staticClass:\"slider loading2\"})]),_c('span',{staticClass:\"span3\"},[_c('i',{staticClass:\"slider loading2\"})]),_c('span',{staticClass:\"span4\"},[_c('i',{staticClass:\"slider loading2\"})]),_c('span',{staticClass:\"span5\"},[_c('i',{staticClass:\"slider\"})])])}]\n\nexport { render, staticRenderFns }","/**\n * SSR Window 1.0.1\n * Better handling for window object in SSR environment\n * https://github.com/nolimits4web/ssr-window\n *\n * Copyright 2018, Vladimir Kharlampidi\n *\n * Licensed under MIT\n *\n * Released on: July 18, 2018\n */\nvar doc = (typeof document === 'undefined') ? {\n  body: {},\n  addEventListener: function addEventListener() {},\n  removeEventListener: function removeEventListener() {},\n  activeElement: {\n    blur: function blur() {},\n    nodeName: '',\n  },\n  querySelector: function querySelector() {\n    return null;\n  },\n  querySelectorAll: function querySelectorAll() {\n    return [];\n  },\n  getElementById: function getElementById() {\n    return null;\n  },\n  createEvent: function createEvent() {\n    return {\n      initEvent: function initEvent() {},\n    };\n  },\n  createElement: function createElement() {\n    return {\n      children: [],\n      childNodes: [],\n      style: {},\n      setAttribute: function setAttribute() {},\n      getElementsByTagName: function getElementsByTagName() {\n        return [];\n      },\n    };\n  },\n  location: { hash: '' },\n} : document; // eslint-disable-line\n\nvar win = (typeof window === 'undefined') ? {\n  document: doc,\n  navigator: {\n    userAgent: '',\n  },\n  location: {},\n  history: {},\n  CustomEvent: function CustomEvent() {\n    return this;\n  },\n  addEventListener: function addEventListener() {},\n  removeEventListener: function removeEventListener() {},\n  getComputedStyle: function getComputedStyle() {\n    return {\n      getPropertyValue: function getPropertyValue() {\n        return '';\n      },\n    };\n  },\n  Image: function Image() {},\n  Date: function Date() {},\n  screen: {},\n  setTimeout: function setTimeout() {},\n  clearTimeout: function clearTimeout() {},\n} : window; // eslint-disable-line\n\nexport { win as window, doc as document };\n","/**\n * Dom7 2.1.2\n * Minimalistic JavaScript library for DOM manipulation, with a jQuery-compatible API\n * http://framework7.io/docs/dom.html\n *\n * Copyright 2018, Vladimir Kharlampidi\n * The iDangero.us\n * http://www.idangero.us/\n *\n * Licensed under MIT\n *\n * Released on: September 13, 2018\n */\nimport { window, document } from 'ssr-window';\n\nclass Dom7 {\n  constructor(arr) {\n    const self = this;\n    // Create array-like object\n    for (let i = 0; i < arr.length; i += 1) {\n      self[i] = arr[i];\n    }\n    self.length = arr.length;\n    // Return collection with methods\n    return this;\n  }\n}\n\nfunction $(selector, context) {\n  const arr = [];\n  let i = 0;\n  if (selector && !context) {\n    if (selector instanceof Dom7) {\n      return selector;\n    }\n  }\n  if (selector) {\n      // String\n    if (typeof selector === 'string') {\n      let els;\n      let tempParent;\n      const html = selector.trim();\n      if (html.indexOf('<') >= 0 && html.indexOf('>') >= 0) {\n        let toCreate = 'div';\n        if (html.indexOf('<li') === 0) toCreate = 'ul';\n        if (html.indexOf('<tr') === 0) toCreate = 'tbody';\n        if (html.indexOf('<td') === 0 || html.indexOf('<th') === 0) toCreate = 'tr';\n        if (html.indexOf('<tbody') === 0) toCreate = 'table';\n        if (html.indexOf('<option') === 0) toCreate = 'select';\n        tempParent = document.createElement(toCreate);\n        tempParent.innerHTML = html;\n        for (i = 0; i < tempParent.childNodes.length; i += 1) {\n          arr.push(tempParent.childNodes[i]);\n        }\n      } else {\n        if (!context && selector[0] === '#' && !selector.match(/[ .<>:~]/)) {\n          // Pure ID selector\n          els = [document.getElementById(selector.trim().split('#')[1])];\n        } else {\n          // Other selectors\n          els = (context || document).querySelectorAll(selector.trim());\n        }\n        for (i = 0; i < els.length; i += 1) {\n          if (els[i]) arr.push(els[i]);\n        }\n      }\n    } else if (selector.nodeType || selector === window || selector === document) {\n      // Node/element\n      arr.push(selector);\n    } else if (selector.length > 0 && selector[0].nodeType) {\n      // Array of elements or instance of Dom\n      for (i = 0; i < selector.length; i += 1) {\n        arr.push(selector[i]);\n      }\n    }\n  }\n  return new Dom7(arr);\n}\n\n$.fn = Dom7.prototype;\n$.Class = Dom7;\n$.Dom7 = Dom7;\n\nfunction unique(arr) {\n  const uniqueArray = [];\n  for (let i = 0; i < arr.length; i += 1) {\n    if (uniqueArray.indexOf(arr[i]) === -1) uniqueArray.push(arr[i]);\n  }\n  return uniqueArray;\n}\nfunction toCamelCase(string) {\n  return string.toLowerCase().replace(/-(.)/g, (match, group1) => group1.toUpperCase());\n}\n\nfunction requestAnimationFrame(callback) {\n  if (window.requestAnimationFrame) return window.requestAnimationFrame(callback);\n  else if (window.webkitRequestAnimationFrame) return window.webkitRequestAnimationFrame(callback);\n  return window.setTimeout(callback, 1000 / 60);\n}\nfunction cancelAnimationFrame(id) {\n  if (window.cancelAnimationFrame) return window.cancelAnimationFrame(id);\n  else if (window.webkitCancelAnimationFrame) return window.webkitCancelAnimationFrame(id);\n  return window.clearTimeout(id);\n}\n\n// Classes and attributes\nfunction addClass(className) {\n  if (typeof className === 'undefined') {\n    return this;\n  }\n  const classes = className.split(' ');\n  for (let i = 0; i < classes.length; i += 1) {\n    for (let j = 0; j < this.length; j += 1) {\n      if (typeof this[j] !== 'undefined' && typeof this[j].classList !== 'undefined') this[j].classList.add(classes[i]);\n    }\n  }\n  return this;\n}\nfunction removeClass(className) {\n  const classes = className.split(' ');\n  for (let i = 0; i < classes.length; i += 1) {\n    for (let j = 0; j < this.length; j += 1) {\n      if (typeof this[j] !== 'undefined' && typeof this[j].classList !== 'undefined') this[j].classList.remove(classes[i]);\n    }\n  }\n  return this;\n}\nfunction hasClass(className) {\n  if (!this[0]) return false;\n  return this[0].classList.contains(className);\n}\nfunction toggleClass(className) {\n  const classes = className.split(' ');\n  for (let i = 0; i < classes.length; i += 1) {\n    for (let j = 0; j < this.length; j += 1) {\n      if (typeof this[j] !== 'undefined' && typeof this[j].classList !== 'undefined') this[j].classList.toggle(classes[i]);\n    }\n  }\n  return this;\n}\nfunction attr(attrs, value) {\n  if (arguments.length === 1 && typeof attrs === 'string') {\n    // Get attr\n    if (this[0]) return this[0].getAttribute(attrs);\n    return undefined;\n  }\n\n  // Set attrs\n  for (let i = 0; i < this.length; i += 1) {\n    if (arguments.length === 2) {\n      // String\n      this[i].setAttribute(attrs, value);\n    } else {\n      // Object\n      // eslint-disable-next-line\n      for (const attrName in attrs) {\n        this[i][attrName] = attrs[attrName];\n        this[i].setAttribute(attrName, attrs[attrName]);\n      }\n    }\n  }\n  return this;\n}\n// eslint-disable-next-line\nfunction removeAttr(attr) {\n  for (let i = 0; i < this.length; i += 1) {\n    this[i].removeAttribute(attr);\n  }\n  return this;\n}\n// eslint-disable-next-line\nfunction prop(props, value) {\n  if (arguments.length === 1 && typeof props === 'string') {\n    // Get prop\n    if (this[0]) return this[0][props];\n  } else {\n    // Set props\n    for (let i = 0; i < this.length; i += 1) {\n      if (arguments.length === 2) {\n        // String\n        this[i][props] = value;\n      } else {\n        // Object\n        // eslint-disable-next-line\n        for (const propName in props) {\n          this[i][propName] = props[propName];\n        }\n      }\n    }\n    return this;\n  }\n}\nfunction data(key, value) {\n  let el;\n  if (typeof value === 'undefined') {\n    el = this[0];\n    // Get value\n    if (el) {\n      if (el.dom7ElementDataStorage && (key in el.dom7ElementDataStorage)) {\n        return el.dom7ElementDataStorage[key];\n      }\n\n      const dataKey = el.getAttribute(`data-${key}`);\n      if (dataKey) {\n        return dataKey;\n      }\n      return undefined;\n    }\n    return undefined;\n  }\n\n  // Set value\n  for (let i = 0; i < this.length; i += 1) {\n    el = this[i];\n    if (!el.dom7ElementDataStorage) el.dom7ElementDataStorage = {};\n    el.dom7ElementDataStorage[key] = value;\n  }\n  return this;\n}\nfunction removeData(key) {\n  for (let i = 0; i < this.length; i += 1) {\n    const el = this[i];\n    if (el.dom7ElementDataStorage && el.dom7ElementDataStorage[key]) {\n      el.dom7ElementDataStorage[key] = null;\n      delete el.dom7ElementDataStorage[key];\n    }\n  }\n}\nfunction dataset() {\n  const el = this[0];\n  if (!el) return undefined;\n  const dataset = {}; // eslint-disable-line\n  if (el.dataset) {\n    // eslint-disable-next-line\n    for (const dataKey in el.dataset) {\n      dataset[dataKey] = el.dataset[dataKey];\n    }\n  } else {\n    for (let i = 0; i < el.attributes.length; i += 1) {\n      // eslint-disable-next-line\n      const attr = el.attributes[i];\n      if (attr.name.indexOf('data-') >= 0) {\n        dataset[toCamelCase(attr.name.split('data-')[1])] = attr.value;\n      }\n    }\n  }\n  // eslint-disable-next-line\n  for (const key in dataset) {\n    if (dataset[key] === 'false') dataset[key] = false;\n    else if (dataset[key] === 'true') dataset[key] = true;\n    else if (parseFloat(dataset[key]) === dataset[key] * 1) dataset[key] *= 1;\n  }\n  return dataset;\n}\nfunction val(value) {\n  const dom = this;\n  if (typeof value === 'undefined') {\n    if (dom[0]) {\n      if (dom[0].multiple && dom[0].nodeName.toLowerCase() === 'select') {\n        const values = [];\n        for (let i = 0; i < dom[0].selectedOptions.length; i += 1) {\n          values.push(dom[0].selectedOptions[i].value);\n        }\n        return values;\n      }\n      return dom[0].value;\n    }\n    return undefined;\n  }\n\n  for (let i = 0; i < dom.length; i += 1) {\n    const el = dom[i];\n    if (Array.isArray(value) && el.multiple && el.nodeName.toLowerCase() === 'select') {\n      for (let j = 0; j < el.options.length; j += 1) {\n        el.options[j].selected = value.indexOf(el.options[j].value) >= 0;\n      }\n    } else {\n      el.value = value;\n    }\n  }\n  return dom;\n}\n// Transforms\n// eslint-disable-next-line\nfunction transform(transform) {\n  for (let i = 0; i < this.length; i += 1) {\n    const elStyle = this[i].style;\n    elStyle.webkitTransform = transform;\n    elStyle.transform = transform;\n  }\n  return this;\n}\nfunction transition(duration) {\n  if (typeof duration !== 'string') {\n    duration = `${duration}ms`; // eslint-disable-line\n  }\n  for (let i = 0; i < this.length; i += 1) {\n    const elStyle = this[i].style;\n    elStyle.webkitTransitionDuration = duration;\n    elStyle.transitionDuration = duration;\n  }\n  return this;\n}\n// Events\nfunction on(...args) {\n  let [eventType, targetSelector, listener, capture] = args;\n  if (typeof args[1] === 'function') {\n    [eventType, listener, capture] = args;\n    targetSelector = undefined;\n  }\n  if (!capture) capture = false;\n\n  function handleLiveEvent(e) {\n    const target = e.target;\n    if (!target) return;\n    const eventData = e.target.dom7EventData || [];\n    if (eventData.indexOf(e) < 0) {\n      eventData.unshift(e);\n    }\n    if ($(target).is(targetSelector)) listener.apply(target, eventData);\n    else {\n      const parents = $(target).parents(); // eslint-disable-line\n      for (let k = 0; k < parents.length; k += 1) {\n        if ($(parents[k]).is(targetSelector)) listener.apply(parents[k], eventData);\n      }\n    }\n  }\n  function handleEvent(e) {\n    const eventData = e && e.target ? e.target.dom7EventData || [] : [];\n    if (eventData.indexOf(e) < 0) {\n      eventData.unshift(e);\n    }\n    listener.apply(this, eventData);\n  }\n  const events = eventType.split(' ');\n  let j;\n  for (let i = 0; i < this.length; i += 1) {\n    const el = this[i];\n    if (!targetSelector) {\n      for (j = 0; j < events.length; j += 1) {\n        const event = events[j];\n        if (!el.dom7Listeners) el.dom7Listeners = {};\n        if (!el.dom7Listeners[event]) el.dom7Listeners[event] = [];\n        el.dom7Listeners[event].push({\n          listener,\n          proxyListener: handleEvent,\n        });\n        el.addEventListener(event, handleEvent, capture);\n      }\n    } else {\n      // Live events\n      for (j = 0; j < events.length; j += 1) {\n        const event = events[j];\n        if (!el.dom7LiveListeners) el.dom7LiveListeners = {};\n        if (!el.dom7LiveListeners[event]) el.dom7LiveListeners[event] = [];\n        el.dom7LiveListeners[event].push({\n          listener,\n          proxyListener: handleLiveEvent,\n        });\n        el.addEventListener(event, handleLiveEvent, capture);\n      }\n    }\n  }\n  return this;\n}\nfunction off(...args) {\n  let [eventType, targetSelector, listener, capture] = args;\n  if (typeof args[1] === 'function') {\n    [eventType, listener, capture] = args;\n    targetSelector = undefined;\n  }\n  if (!capture) capture = false;\n\n  const events = eventType.split(' ');\n  for (let i = 0; i < events.length; i += 1) {\n    const event = events[i];\n    for (let j = 0; j < this.length; j += 1) {\n      const el = this[j];\n      let handlers;\n      if (!targetSelector && el.dom7Listeners) {\n        handlers = el.dom7Listeners[event];\n      } else if (targetSelector && el.dom7LiveListeners) {\n        handlers = el.dom7LiveListeners[event];\n      }\n      if (handlers && handlers.length) {\n        for (let k = handlers.length - 1; k >= 0; k -= 1) {\n          const handler = handlers[k];\n          if (listener && handler.listener === listener) {\n            el.removeEventListener(event, handler.proxyListener, capture);\n            handlers.splice(k, 1);\n          } else if (!listener) {\n            el.removeEventListener(event, handler.proxyListener, capture);\n            handlers.splice(k, 1);\n          }\n        }\n      }\n    }\n  }\n  return this;\n}\nfunction once(...args) {\n  const dom = this;\n  let [eventName, targetSelector, listener, capture] = args;\n  if (typeof args[1] === 'function') {\n    [eventName, listener, capture] = args;\n    targetSelector = undefined;\n  }\n  function proxy(...eventArgs) {\n    listener.apply(this, eventArgs);\n    dom.off(eventName, targetSelector, proxy, capture);\n  }\n  return dom.on(eventName, targetSelector, proxy, capture);\n}\nfunction trigger(...args) {\n  const events = args[0].split(' ');\n  const eventData = args[1];\n  for (let i = 0; i < events.length; i += 1) {\n    const event = events[i];\n    for (let j = 0; j < this.length; j += 1) {\n      const el = this[j];\n      let evt;\n      try {\n        evt = new window.CustomEvent(event, {\n          detail: eventData,\n          bubbles: true,\n          cancelable: true,\n        });\n      } catch (e) {\n        evt = document.createEvent('Event');\n        evt.initEvent(event, true, true);\n        evt.detail = eventData;\n      }\n      // eslint-disable-next-line\n      el.dom7EventData = args.filter((data, dataIndex) => dataIndex > 0);\n      el.dispatchEvent(evt);\n      el.dom7EventData = [];\n      delete el.dom7EventData;\n    }\n  }\n  return this;\n}\nfunction transitionEnd(callback) {\n  const events = ['webkitTransitionEnd', 'transitionend'];\n  const dom = this;\n  let i;\n  function fireCallBack(e) {\n    /* jshint validthis:true */\n    if (e.target !== this) return;\n    callback.call(this, e);\n    for (i = 0; i < events.length; i += 1) {\n      dom.off(events[i], fireCallBack);\n    }\n  }\n  if (callback) {\n    for (i = 0; i < events.length; i += 1) {\n      dom.on(events[i], fireCallBack);\n    }\n  }\n  return this;\n}\nfunction animationEnd(callback) {\n  const events = ['webkitAnimationEnd', 'animationend'];\n  const dom = this;\n  let i;\n  function fireCallBack(e) {\n    if (e.target !== this) return;\n    callback.call(this, e);\n    for (i = 0; i < events.length; i += 1) {\n      dom.off(events[i], fireCallBack);\n    }\n  }\n  if (callback) {\n    for (i = 0; i < events.length; i += 1) {\n      dom.on(events[i], fireCallBack);\n    }\n  }\n  return this;\n}\n// Sizing/Styles\nfunction width() {\n  if (this[0] === window) {\n    return window.innerWidth;\n  }\n\n  if (this.length > 0) {\n    return parseFloat(this.css('width'));\n  }\n\n  return null;\n}\nfunction outerWidth(includeMargins) {\n  if (this.length > 0) {\n    if (includeMargins) {\n      // eslint-disable-next-line\n      const styles = this.styles();\n      return this[0].offsetWidth + parseFloat(styles.getPropertyValue('margin-right')) + parseFloat(styles.getPropertyValue('margin-left'));\n    }\n    return this[0].offsetWidth;\n  }\n  return null;\n}\nfunction height() {\n  if (this[0] === window) {\n    return window.innerHeight;\n  }\n\n  if (this.length > 0) {\n    return parseFloat(this.css('height'));\n  }\n\n  return null;\n}\nfunction outerHeight(includeMargins) {\n  if (this.length > 0) {\n    if (includeMargins) {\n      // eslint-disable-next-line\n      const styles = this.styles();\n      return this[0].offsetHeight + parseFloat(styles.getPropertyValue('margin-top')) + parseFloat(styles.getPropertyValue('margin-bottom'));\n    }\n    return this[0].offsetHeight;\n  }\n  return null;\n}\nfunction offset() {\n  if (this.length > 0) {\n    const el = this[0];\n    const box = el.getBoundingClientRect();\n    const body = document.body;\n    const clientTop = el.clientTop || body.clientTop || 0;\n    const clientLeft = el.clientLeft || body.clientLeft || 0;\n    const scrollTop = el === window ? window.scrollY : el.scrollTop;\n    const scrollLeft = el === window ? window.scrollX : el.scrollLeft;\n    return {\n      top: (box.top + scrollTop) - clientTop,\n      left: (box.left + scrollLeft) - clientLeft,\n    };\n  }\n\n  return null;\n}\nfunction hide() {\n  for (let i = 0; i < this.length; i += 1) {\n    this[i].style.display = 'none';\n  }\n  return this;\n}\nfunction show() {\n  for (let i = 0; i < this.length; i += 1) {\n    const el = this[i];\n    if (el.style.display === 'none') {\n      el.style.display = '';\n    }\n    if (window.getComputedStyle(el, null).getPropertyValue('display') === 'none') {\n      // Still not visible\n      el.style.display = 'block';\n    }\n  }\n  return this;\n}\nfunction styles() {\n  if (this[0]) return window.getComputedStyle(this[0], null);\n  return {};\n}\nfunction css(props, value) {\n  let i;\n  if (arguments.length === 1) {\n    if (typeof props === 'string') {\n      if (this[0]) return window.getComputedStyle(this[0], null).getPropertyValue(props);\n    } else {\n      for (i = 0; i < this.length; i += 1) {\n        // eslint-disable-next-line\n        for (let prop in props) {\n          this[i].style[prop] = props[prop];\n        }\n      }\n      return this;\n    }\n  }\n  if (arguments.length === 2 && typeof props === 'string') {\n    for (i = 0; i < this.length; i += 1) {\n      this[i].style[props] = value;\n    }\n    return this;\n  }\n  return this;\n}\n\n// Dom manipulation\nfunction toArray() {\n  const arr = [];\n  for (let i = 0; i < this.length; i += 1) {\n    arr.push(this[i]);\n  }\n  return arr;\n}\n// Iterate over the collection passing elements to `callback`\nfunction each(callback) {\n  // Don't bother continuing without a callback\n  if (!callback) return this;\n  // Iterate over the current collection\n  for (let i = 0; i < this.length; i += 1) {\n    // If the callback returns false\n    if (callback.call(this[i], i, this[i]) === false) {\n      // End the loop early\n      return this;\n    }\n  }\n  // Return `this` to allow chained DOM operations\n  return this;\n}\nfunction forEach(callback) {\n  // Don't bother continuing without a callback\n  if (!callback) return this;\n  // Iterate over the current collection\n  for (let i = 0; i < this.length; i += 1) {\n    // If the callback returns false\n    if (callback.call(this[i], this[i], i) === false) {\n      // End the loop early\n      return this;\n    }\n  }\n  // Return `this` to allow chained DOM operations\n  return this;\n}\nfunction filter(callback) {\n  const matchedItems = [];\n  const dom = this;\n  for (let i = 0; i < dom.length; i += 1) {\n    if (callback.call(dom[i], i, dom[i])) matchedItems.push(dom[i]);\n  }\n  return new Dom7(matchedItems);\n}\nfunction map(callback) {\n  const modifiedItems = [];\n  const dom = this;\n  for (let i = 0; i < dom.length; i += 1) {\n    modifiedItems.push(callback.call(dom[i], i, dom[i]));\n  }\n  return new Dom7(modifiedItems);\n}\n// eslint-disable-next-line\nfunction html(html) {\n  if (typeof html === 'undefined') {\n    return this[0] ? this[0].innerHTML : undefined;\n  }\n\n  for (let i = 0; i < this.length; i += 1) {\n    this[i].innerHTML = html;\n  }\n  return this;\n}\n// eslint-disable-next-line\nfunction text(text) {\n  if (typeof text === 'undefined') {\n    if (this[0]) {\n      return this[0].textContent.trim();\n    }\n    return null;\n  }\n\n  for (let i = 0; i < this.length; i += 1) {\n    this[i].textContent = text;\n  }\n  return this;\n}\nfunction is(selector) {\n  const el = this[0];\n  let compareWith;\n  let i;\n  if (!el || typeof selector === 'undefined') return false;\n  if (typeof selector === 'string') {\n    if (el.matches) return el.matches(selector);\n    else if (el.webkitMatchesSelector) return el.webkitMatchesSelector(selector);\n    else if (el.msMatchesSelector) return el.msMatchesSelector(selector);\n\n    compareWith = $(selector);\n    for (i = 0; i < compareWith.length; i += 1) {\n      if (compareWith[i] === el) return true;\n    }\n    return false;\n  } else if (selector === document) return el === document;\n  else if (selector === window) return el === window;\n\n  if (selector.nodeType || selector instanceof Dom7) {\n    compareWith = selector.nodeType ? [selector] : selector;\n    for (i = 0; i < compareWith.length; i += 1) {\n      if (compareWith[i] === el) return true;\n    }\n    return false;\n  }\n  return false;\n}\nfunction indexOf(el) {\n  for (let i = 0; i < this.length; i += 1) {\n    if (this[i] === el) return i;\n  }\n  return -1;\n}\nfunction index() {\n  let child = this[0];\n  let i;\n  if (child) {\n    i = 0;\n    // eslint-disable-next-line\n    while ((child = child.previousSibling) !== null) {\n      if (child.nodeType === 1) i += 1;\n    }\n    return i;\n  }\n  return undefined;\n}\n// eslint-disable-next-line\nfunction eq(index) {\n  if (typeof index === 'undefined') return this;\n  const length = this.length;\n  let returnIndex;\n  if (index > length - 1) {\n    return new Dom7([]);\n  }\n  if (index < 0) {\n    returnIndex = length + index;\n    if (returnIndex < 0) return new Dom7([]);\n    return new Dom7([this[returnIndex]]);\n  }\n  return new Dom7([this[index]]);\n}\nfunction append(...args) {\n  let newChild;\n\n  for (let k = 0; k < args.length; k += 1) {\n    newChild = args[k];\n    for (let i = 0; i < this.length; i += 1) {\n      if (typeof newChild === 'string') {\n        const tempDiv = document.createElement('div');\n        tempDiv.innerHTML = newChild;\n        while (tempDiv.firstChild) {\n          this[i].appendChild(tempDiv.firstChild);\n        }\n      } else if (newChild instanceof Dom7) {\n        for (let j = 0; j < newChild.length; j += 1) {\n          this[i].appendChild(newChild[j]);\n        }\n      } else {\n        this[i].appendChild(newChild);\n      }\n    }\n  }\n\n  return this;\n}\n // eslint-disable-next-line\nfunction appendTo(parent) {\n  $(parent).append(this);\n  return this;\n}\nfunction prepend(newChild) {\n  let i;\n  let j;\n  for (i = 0; i < this.length; i += 1) {\n    if (typeof newChild === 'string') {\n      const tempDiv = document.createElement('div');\n      tempDiv.innerHTML = newChild;\n      for (j = tempDiv.childNodes.length - 1; j >= 0; j -= 1) {\n        this[i].insertBefore(tempDiv.childNodes[j], this[i].childNodes[0]);\n      }\n    } else if (newChild instanceof Dom7) {\n      for (j = 0; j < newChild.length; j += 1) {\n        this[i].insertBefore(newChild[j], this[i].childNodes[0]);\n      }\n    } else {\n      this[i].insertBefore(newChild, this[i].childNodes[0]);\n    }\n  }\n  return this;\n}\n // eslint-disable-next-line\nfunction prependTo(parent) {\n  $(parent).prepend(this);\n  return this;\n}\nfunction insertBefore(selector) {\n  const before = $(selector);\n  for (let i = 0; i < this.length; i += 1) {\n    if (before.length === 1) {\n      before[0].parentNode.insertBefore(this[i], before[0]);\n    } else if (before.length > 1) {\n      for (let j = 0; j < before.length; j += 1) {\n        before[j].parentNode.insertBefore(this[i].cloneNode(true), before[j]);\n      }\n    }\n  }\n}\nfunction insertAfter(selector) {\n  const after = $(selector);\n  for (let i = 0; i < this.length; i += 1) {\n    if (after.length === 1) {\n      after[0].parentNode.insertBefore(this[i], after[0].nextSibling);\n    } else if (after.length > 1) {\n      for (let j = 0; j < after.length; j += 1) {\n        after[j].parentNode.insertBefore(this[i].cloneNode(true), after[j].nextSibling);\n      }\n    }\n  }\n}\nfunction next(selector) {\n  if (this.length > 0) {\n    if (selector) {\n      if (this[0].nextElementSibling && $(this[0].nextElementSibling).is(selector)) {\n        return new Dom7([this[0].nextElementSibling]);\n      }\n      return new Dom7([]);\n    }\n\n    if (this[0].nextElementSibling) return new Dom7([this[0].nextElementSibling]);\n    return new Dom7([]);\n  }\n  return new Dom7([]);\n}\nfunction nextAll(selector) {\n  const nextEls = [];\n  let el = this[0];\n  if (!el) return new Dom7([]);\n  while (el.nextElementSibling) {\n    const next = el.nextElementSibling; // eslint-disable-line\n    if (selector) {\n      if ($(next).is(selector)) nextEls.push(next);\n    } else nextEls.push(next);\n    el = next;\n  }\n  return new Dom7(nextEls);\n}\nfunction prev(selector) {\n  if (this.length > 0) {\n    const el = this[0];\n    if (selector) {\n      if (el.previousElementSibling && $(el.previousElementSibling).is(selector)) {\n        return new Dom7([el.previousElementSibling]);\n      }\n      return new Dom7([]);\n    }\n\n    if (el.previousElementSibling) return new Dom7([el.previousElementSibling]);\n    return new Dom7([]);\n  }\n  return new Dom7([]);\n}\nfunction prevAll(selector) {\n  const prevEls = [];\n  let el = this[0];\n  if (!el) return new Dom7([]);\n  while (el.previousElementSibling) {\n    const prev = el.previousElementSibling; // eslint-disable-line\n    if (selector) {\n      if ($(prev).is(selector)) prevEls.push(prev);\n    } else prevEls.push(prev);\n    el = prev;\n  }\n  return new Dom7(prevEls);\n}\nfunction siblings(selector) {\n  return this.nextAll(selector).add(this.prevAll(selector));\n}\nfunction parent(selector) {\n  const parents = []; // eslint-disable-line\n  for (let i = 0; i < this.length; i += 1) {\n    if (this[i].parentNode !== null) {\n      if (selector) {\n        if ($(this[i].parentNode).is(selector)) parents.push(this[i].parentNode);\n      } else {\n        parents.push(this[i].parentNode);\n      }\n    }\n  }\n  return $(unique(parents));\n}\nfunction parents(selector) {\n  const parents = []; // eslint-disable-line\n  for (let i = 0; i < this.length; i += 1) {\n    let parent = this[i].parentNode; // eslint-disable-line\n    while (parent) {\n      if (selector) {\n        if ($(parent).is(selector)) parents.push(parent);\n      } else {\n        parents.push(parent);\n      }\n      parent = parent.parentNode;\n    }\n  }\n  return $(unique(parents));\n}\nfunction closest(selector) {\n  let closest = this; // eslint-disable-line\n  if (typeof selector === 'undefined') {\n    return new Dom7([]);\n  }\n  if (!closest.is(selector)) {\n    closest = closest.parents(selector).eq(0);\n  }\n  return closest;\n}\nfunction find(selector) {\n  const foundElements = [];\n  for (let i = 0; i < this.length; i += 1) {\n    const found = this[i].querySelectorAll(selector);\n    for (let j = 0; j < found.length; j += 1) {\n      foundElements.push(found[j]);\n    }\n  }\n  return new Dom7(foundElements);\n}\nfunction children(selector) {\n  const children = []; // eslint-disable-line\n  for (let i = 0; i < this.length; i += 1) {\n    const childNodes = this[i].childNodes;\n\n    for (let j = 0; j < childNodes.length; j += 1) {\n      if (!selector) {\n        if (childNodes[j].nodeType === 1) children.push(childNodes[j]);\n      } else if (childNodes[j].nodeType === 1 && $(childNodes[j]).is(selector)) {\n        children.push(childNodes[j]);\n      }\n    }\n  }\n  return new Dom7(unique(children));\n}\nfunction remove() {\n  for (let i = 0; i < this.length; i += 1) {\n    if (this[i].parentNode) this[i].parentNode.removeChild(this[i]);\n  }\n  return this;\n}\nfunction detach() {\n  return this.remove();\n}\nfunction add(...args) {\n  const dom = this;\n  let i;\n  let j;\n  for (i = 0; i < args.length; i += 1) {\n    const toAdd = $(args[i]);\n    for (j = 0; j < toAdd.length; j += 1) {\n      dom[dom.length] = toAdd[j];\n      dom.length += 1;\n    }\n  }\n  return dom;\n}\nfunction empty() {\n  for (let i = 0; i < this.length; i += 1) {\n    const el = this[i];\n    if (el.nodeType === 1) {\n      for (let j = 0; j < el.childNodes.length; j += 1) {\n        if (el.childNodes[j].parentNode) {\n          el.childNodes[j].parentNode.removeChild(el.childNodes[j]);\n        }\n      }\n      el.textContent = '';\n    }\n  }\n  return this;\n}\n\nfunction scrollTo(...args) {\n  let [left, top, duration, easing, callback] = args;\n  if (args.length === 4 && typeof easing === 'function') {\n    callback = easing;\n    [left, top, duration, callback, easing] = args;\n  }\n  if (typeof easing === 'undefined') easing = 'swing';\n\n  return this.each(function animate() {\n    const el = this;\n    let currentTop;\n    let currentLeft;\n    let maxTop;\n    let maxLeft;\n    let newTop;\n    let newLeft;\n    let scrollTop; // eslint-disable-line\n    let scrollLeft; // eslint-disable-line\n    let animateTop = top > 0 || top === 0;\n    let animateLeft = left > 0 || left === 0;\n    if (typeof easing === 'undefined') {\n      easing = 'swing';\n    }\n    if (animateTop) {\n      currentTop = el.scrollTop;\n      if (!duration) {\n        el.scrollTop = top;\n      }\n    }\n    if (animateLeft) {\n      currentLeft = el.scrollLeft;\n      if (!duration) {\n        el.scrollLeft = left;\n      }\n    }\n    if (!duration) return;\n    if (animateTop) {\n      maxTop = el.scrollHeight - el.offsetHeight;\n      newTop = Math.max(Math.min(top, maxTop), 0);\n    }\n    if (animateLeft) {\n      maxLeft = el.scrollWidth - el.offsetWidth;\n      newLeft = Math.max(Math.min(left, maxLeft), 0);\n    }\n    let startTime = null;\n    if (animateTop && newTop === currentTop) animateTop = false;\n    if (animateLeft && newLeft === currentLeft) animateLeft = false;\n    function render(time = new Date().getTime()) {\n      if (startTime === null) {\n        startTime = time;\n      }\n      const progress = Math.max(Math.min((time - startTime) / duration, 1), 0);\n      const easeProgress = easing === 'linear' ? progress : (0.5 - (Math.cos(progress * Math.PI) / 2));\n      let done;\n      if (animateTop) scrollTop = currentTop + (easeProgress * (newTop - currentTop));\n      if (animateLeft) scrollLeft = currentLeft + (easeProgress * (newLeft - currentLeft));\n      if (animateTop && newTop > currentTop && scrollTop >= newTop) {\n        el.scrollTop = newTop;\n        done = true;\n      }\n      if (animateTop && newTop < currentTop && scrollTop <= newTop) {\n        el.scrollTop = newTop;\n        done = true;\n      }\n      if (animateLeft && newLeft > currentLeft && scrollLeft >= newLeft) {\n        el.scrollLeft = newLeft;\n        done = true;\n      }\n      if (animateLeft && newLeft < currentLeft && scrollLeft <= newLeft) {\n        el.scrollLeft = newLeft;\n        done = true;\n      }\n\n      if (done) {\n        if (callback) callback();\n        return;\n      }\n      if (animateTop) el.scrollTop = scrollTop;\n      if (animateLeft) el.scrollLeft = scrollLeft;\n      requestAnimationFrame(render);\n    }\n    requestAnimationFrame(render);\n  });\n}\n// scrollTop(top, duration, easing, callback) {\nfunction scrollTop(...args) {\n  let [top, duration, easing, callback] = args;\n  if (args.length === 3 && typeof easing === 'function') {\n    [top, duration, callback, easing] = args;\n  }\n  const dom = this;\n  if (typeof top === 'undefined') {\n    if (dom.length > 0) return dom[0].scrollTop;\n    return null;\n  }\n  return dom.scrollTo(undefined, top, duration, easing, callback);\n}\nfunction scrollLeft(...args) {\n  let [left, duration, easing, callback] = args;\n  if (args.length === 3 && typeof easing === 'function') {\n    [left, duration, callback, easing] = args;\n  }\n  const dom = this;\n  if (typeof left === 'undefined') {\n    if (dom.length > 0) return dom[0].scrollLeft;\n    return null;\n  }\n  return dom.scrollTo(left, undefined, duration, easing, callback);\n}\n\nfunction animate(initialProps, initialParams) {\n  const els = this;\n  const a = {\n    props: Object.assign({}, initialProps),\n    params: Object.assign({\n      duration: 300,\n      easing: 'swing', // or 'linear'\n      /* Callbacks\n      begin(elements)\n      complete(elements)\n      progress(elements, complete, remaining, start, tweenValue)\n      */\n    }, initialParams),\n\n    elements: els,\n    animating: false,\n    que: [],\n\n    easingProgress(easing, progress) {\n      if (easing === 'swing') {\n        return 0.5 - (Math.cos(progress * Math.PI) / 2);\n      }\n      if (typeof easing === 'function') {\n        return easing(progress);\n      }\n      return progress;\n    },\n    stop() {\n      if (a.frameId) {\n        cancelAnimationFrame(a.frameId);\n      }\n      a.animating = false;\n      a.elements.each((index, el) => {\n        const element = el;\n        delete element.dom7AnimateInstance;\n      });\n      a.que = [];\n    },\n    done(complete) {\n      a.animating = false;\n      a.elements.each((index, el) => {\n        const element = el;\n        delete element.dom7AnimateInstance;\n      });\n      if (complete) complete(els);\n      if (a.que.length > 0) {\n        const que = a.que.shift();\n        a.animate(que[0], que[1]);\n      }\n    },\n    animate(props, params) {\n      if (a.animating) {\n        a.que.push([props, params]);\n        return a;\n      }\n      const elements = [];\n\n      // Define & Cache Initials & Units\n      a.elements.each((index, el) => {\n        let initialFullValue;\n        let initialValue;\n        let unit;\n        let finalValue;\n        let finalFullValue;\n\n        if (!el.dom7AnimateInstance) a.elements[index].dom7AnimateInstance = a;\n\n        elements[index] = {\n          container: el,\n        };\n        Object.keys(props).forEach((prop) => {\n          initialFullValue = window.getComputedStyle(el, null).getPropertyValue(prop).replace(',', '.');\n          initialValue = parseFloat(initialFullValue);\n          unit = initialFullValue.replace(initialValue, '');\n          finalValue = parseFloat(props[prop]);\n          finalFullValue = props[prop] + unit;\n          elements[index][prop] = {\n            initialFullValue,\n            initialValue,\n            unit,\n            finalValue,\n            finalFullValue,\n            currentValue: initialValue,\n          };\n        });\n      });\n\n      let startTime = null;\n      let time;\n      let elementsDone = 0;\n      let propsDone = 0;\n      let done;\n      let began = false;\n\n      a.animating = true;\n\n      function render() {\n        time = new Date().getTime();\n        let progress;\n        let easeProgress;\n        // let el;\n        if (!began) {\n          began = true;\n          if (params.begin) params.begin(els);\n        }\n        if (startTime === null) {\n          startTime = time;\n        }\n        if (params.progress) {\n          // eslint-disable-next-line\n          params.progress(els, Math.max(Math.min((time - startTime) / params.duration, 1), 0), ((startTime + params.duration) - time < 0 ? 0 : (startTime + params.duration) - time), startTime);\n        }\n\n        elements.forEach((element) => {\n          const el = element;\n          if (done || el.done) return;\n          Object.keys(props).forEach((prop) => {\n            if (done || el.done) return;\n            progress = Math.max(Math.min((time - startTime) / params.duration, 1), 0);\n            easeProgress = a.easingProgress(params.easing, progress);\n            const { initialValue, finalValue, unit } = el[prop];\n            el[prop].currentValue = initialValue + (easeProgress * (finalValue - initialValue));\n            const currentValue = el[prop].currentValue;\n\n            if (\n              (finalValue > initialValue && currentValue >= finalValue) ||\n              (finalValue < initialValue && currentValue <= finalValue)) {\n              el.container.style[prop] = finalValue + unit;\n              propsDone += 1;\n              if (propsDone === Object.keys(props).length) {\n                el.done = true;\n                elementsDone += 1;\n              }\n              if (elementsDone === elements.length) {\n                done = true;\n              }\n            }\n            if (done) {\n              a.done(params.complete);\n              return;\n            }\n            el.container.style[prop] = currentValue + unit;\n          });\n        });\n        if (done) return;\n        // Then call\n        a.frameId = requestAnimationFrame(render);\n      }\n      a.frameId = requestAnimationFrame(render);\n      return a;\n    },\n  };\n\n  if (a.elements.length === 0) {\n    return els;\n  }\n\n  let animateInstance;\n  for (let i = 0; i < a.elements.length; i += 1) {\n    if (a.elements[i].dom7AnimateInstance) {\n      animateInstance = a.elements[i].dom7AnimateInstance;\n    } else a.elements[i].dom7AnimateInstance = a;\n  }\n  if (!animateInstance) {\n    animateInstance = a;\n  }\n\n  if (initialProps === 'stop') {\n    animateInstance.stop();\n  } else {\n    animateInstance.animate(a.props, a.params);\n  }\n\n  return els;\n}\n\nfunction stop() {\n  const els = this;\n  for (let i = 0; i < els.length; i += 1) {\n    if (els[i].dom7AnimateInstance) {\n      els[i].dom7AnimateInstance.stop();\n    }\n  }\n}\n\nconst noTrigger = ('resize scroll').split(' ');\nfunction eventShortcut(name, ...args) {\n  if (typeof args[0] === 'undefined') {\n    for (let i = 0; i < this.length; i += 1) {\n      if (noTrigger.indexOf(name) < 0) {\n        if (name in this[i]) this[i][name]();\n        else {\n          $(this[i]).trigger(name);\n        }\n      }\n    }\n    return this;\n  }\n  return this.on(name, ...args);\n}\n\nfunction click(...args) {\n  return eventShortcut.bind(this)('click', ...args);\n}\nfunction blur(...args) {\n  return eventShortcut.bind(this)('blur', ...args);\n}\nfunction focus(...args) {\n  return eventShortcut.bind(this)('focus', ...args);\n}\nfunction focusin(...args) {\n  return eventShortcut.bind(this)('focusin', ...args);\n}\nfunction focusout(...args) {\n  return eventShortcut.bind(this)('focusout', ...args);\n}\nfunction keyup(...args) {\n  return eventShortcut.bind(this)('keyup', ...args);\n}\nfunction keydown(...args) {\n  return eventShortcut.bind(this)('keydown', ...args);\n}\nfunction keypress(...args) {\n  return eventShortcut.bind(this)('keypress', ...args);\n}\nfunction submit(...args) {\n  return eventShortcut.bind(this)('submit', ...args);\n}\nfunction change(...args) {\n  return eventShortcut.bind(this)('change', ...args);\n}\nfunction mousedown(...args) {\n  return eventShortcut.bind(this)('mousedown', ...args);\n}\nfunction mousemove(...args) {\n  return eventShortcut.bind(this)('mousemove', ...args);\n}\nfunction mouseup(...args) {\n  return eventShortcut.bind(this)('mouseup', ...args);\n}\nfunction mouseenter(...args) {\n  return eventShortcut.bind(this)('mouseenter', ...args);\n}\nfunction mouseleave(...args) {\n  return eventShortcut.bind(this)('mouseleave', ...args);\n}\nfunction mouseout(...args) {\n  return eventShortcut.bind(this)('mouseout', ...args);\n}\nfunction mouseover(...args) {\n  return eventShortcut.bind(this)('mouseover', ...args);\n}\nfunction touchstart(...args) {\n  return eventShortcut.bind(this)('touchstart', ...args);\n}\nfunction touchend(...args) {\n  return eventShortcut.bind(this)('touchend', ...args);\n}\nfunction touchmove(...args) {\n  return eventShortcut.bind(this)('touchmove', ...args);\n}\nfunction resize(...args) {\n  return eventShortcut.bind(this)('resize', ...args);\n}\nfunction scroll(...args) {\n  return eventShortcut.bind(this)('scroll', ...args);\n}\n\nexport { $, addClass, removeClass, hasClass, toggleClass, attr, removeAttr, prop, data, removeData, dataset, val, transform, transition, on, off, once, trigger, transitionEnd, animationEnd, width, outerWidth, height, outerHeight, offset, hide, show, styles, css, toArray, each, forEach, filter, map, html, text, is, indexOf, index, eq, append, appendTo, prepend, prependTo, insertBefore, insertAfter, next, nextAll, prev, prevAll, siblings, parent, parents, closest, find, children, remove, detach, add, empty, scrollTo, scrollTop, scrollLeft, animate, stop, click, blur, focus, focusin, focusout, keyup, keydown, keypress, submit, change, mousedown, mousemove, mouseup, mouseenter, mouseleave, mouseout, mouseover, touchstart, touchend, touchmove, resize, scroll };\n","/**\n * Swiper 4.4.1\n * Most modern mobile touch slider and framework with hardware accelerated transitions\n * http://www.idangero.us/swiper/\n *\n * Copyright 2014-2018 Vladimir Kharlampidi\n *\n * Released under the MIT License\n *\n * Released on: September 14, 2018\n */\n\nimport { $, addClass, removeClass, hasClass, toggleClass, attr, removeAttr, data, transform, transition, on, off, trigger, transitionEnd, outerWidth, outerHeight, offset, css, each, html, text, is, index, eq, append, prepend, next, nextAll, prev, prevAll, parent, parents, closest, find, children, remove, add, styles } from 'dom7/dist/dom7.modular';\nimport { window, document } from 'ssr-window';\n\nconst Methods = {\n  addClass,\n  removeClass,\n  hasClass,\n  toggleClass,\n  attr,\n  removeAttr,\n  data,\n  transform,\n  transition,\n  on,\n  off,\n  trigger,\n  transitionEnd,\n  outerWidth,\n  outerHeight,\n  offset,\n  css,\n  each,\n  html,\n  text,\n  is,\n  index,\n  eq,\n  append,\n  prepend,\n  next,\n  nextAll,\n  prev,\n  prevAll,\n  parent,\n  parents,\n  closest,\n  find,\n  children,\n  remove,\n  add,\n  styles,\n};\n\nObject.keys(Methods).forEach((methodName) => {\n  $.fn[methodName] = Methods[methodName];\n});\n\nconst Utils = {\n  deleteProps(obj) {\n    const object = obj;\n    Object.keys(object).forEach((key) => {\n      try {\n        object[key] = null;\n      } catch (e) {\n        // no getter for object\n      }\n      try {\n        delete object[key];\n      } catch (e) {\n        // something got wrong\n      }\n    });\n  },\n  nextTick(callback, delay = 0) {\n    return setTimeout(callback, delay);\n  },\n  now() {\n    return Date.now();\n  },\n  getTranslate(el, axis = 'x') {\n    let matrix;\n    let curTransform;\n    let transformMatrix;\n\n    const curStyle = window.getComputedStyle(el, null);\n\n    if (window.WebKitCSSMatrix) {\n      curTransform = curStyle.transform || curStyle.webkitTransform;\n      if (curTransform.split(',').length > 6) {\n        curTransform = curTransform.split(', ').map(a => a.replace(',', '.')).join(', ');\n      }\n      // Some old versions of Webkit choke when 'none' is passed; pass\n      // empty string instead in this case\n      transformMatrix = new window.WebKitCSSMatrix(curTransform === 'none' ? '' : curTransform);\n    } else {\n      transformMatrix = curStyle.MozTransform || curStyle.OTransform || curStyle.MsTransform || curStyle.msTransform || curStyle.transform || curStyle.getPropertyValue('transform').replace('translate(', 'matrix(1, 0, 0, 1,');\n      matrix = transformMatrix.toString().split(',');\n    }\n\n    if (axis === 'x') {\n      // Latest Chrome and webkits Fix\n      if (window.WebKitCSSMatrix) curTransform = transformMatrix.m41;\n      // Crazy IE10 Matrix\n      else if (matrix.length === 16) curTransform = parseFloat(matrix[12]);\n      // Normal Browsers\n      else curTransform = parseFloat(matrix[4]);\n    }\n    if (axis === 'y') {\n      // Latest Chrome and webkits Fix\n      if (window.WebKitCSSMatrix) curTransform = transformMatrix.m42;\n      // Crazy IE10 Matrix\n      else if (matrix.length === 16) curTransform = parseFloat(matrix[13]);\n      // Normal Browsers\n      else curTransform = parseFloat(matrix[5]);\n    }\n    return curTransform || 0;\n  },\n  parseUrlQuery(url) {\n    const query = {};\n    let urlToParse = url || window.location.href;\n    let i;\n    let params;\n    let param;\n    let length;\n    if (typeof urlToParse === 'string' && urlToParse.length) {\n      urlToParse = urlToParse.indexOf('?') > -1 ? urlToParse.replace(/\\S*\\?/, '') : '';\n      params = urlToParse.split('&').filter(paramsPart => paramsPart !== '');\n      length = params.length;\n\n      for (i = 0; i < length; i += 1) {\n        param = params[i].replace(/#\\S+/g, '').split('=');\n        query[decodeURIComponent(param[0])] = typeof param[1] === 'undefined' ? undefined : decodeURIComponent(param[1]) || '';\n      }\n    }\n    return query;\n  },\n  isObject(o) {\n    return typeof o === 'object' && o !== null && o.constructor && o.constructor === Object;\n  },\n  extend(...args) {\n    const to = Object(args[0]);\n    for (let i = 1; i < args.length; i += 1) {\n      const nextSource = args[i];\n      if (nextSource !== undefined && nextSource !== null) {\n        const keysArray = Object.keys(Object(nextSource));\n        for (let nextIndex = 0, len = keysArray.length; nextIndex < len; nextIndex += 1) {\n          const nextKey = keysArray[nextIndex];\n          const desc = Object.getOwnPropertyDescriptor(nextSource, nextKey);\n          if (desc !== undefined && desc.enumerable) {\n            if (Utils.isObject(to[nextKey]) && Utils.isObject(nextSource[nextKey])) {\n              Utils.extend(to[nextKey], nextSource[nextKey]);\n            } else if (!Utils.isObject(to[nextKey]) && Utils.isObject(nextSource[nextKey])) {\n              to[nextKey] = {};\n              Utils.extend(to[nextKey], nextSource[nextKey]);\n            } else {\n              to[nextKey] = nextSource[nextKey];\n            }\n          }\n        }\n      }\n    }\n    return to;\n  },\n};\n\nconst Support = (function Support() {\n  const testDiv = document.createElement('div');\n  return {\n    touch: (window.Modernizr && window.Modernizr.touch === true) || (function checkTouch() {\n      return !!(('ontouchstart' in window) || (window.DocumentTouch && document instanceof window.DocumentTouch));\n    }()),\n\n    pointerEvents: !!(window.navigator.pointerEnabled || window.PointerEvent),\n    prefixedPointerEvents: !!window.navigator.msPointerEnabled,\n\n    transition: (function checkTransition() {\n      const style = testDiv.style;\n      return ('transition' in style || 'webkitTransition' in style || 'MozTransition' in style);\n    }()),\n    transforms3d: (window.Modernizr && window.Modernizr.csstransforms3d === true) || (function checkTransforms3d() {\n      const style = testDiv.style;\n      return ('webkitPerspective' in style || 'MozPerspective' in style || 'OPerspective' in style || 'MsPerspective' in style || 'perspective' in style);\n    }()),\n\n    flexbox: (function checkFlexbox() {\n      const style = testDiv.style;\n      const styles$$1 = ('alignItems webkitAlignItems webkitBoxAlign msFlexAlign mozBoxAlign webkitFlexDirection msFlexDirection mozBoxDirection mozBoxOrient webkitBoxDirection webkitBoxOrient').split(' ');\n      for (let i = 0; i < styles$$1.length; i += 1) {\n        if (styles$$1[i] in style) return true;\n      }\n      return false;\n    }()),\n\n    observer: (function checkObserver() {\n      return ('MutationObserver' in window || 'WebkitMutationObserver' in window);\n    }()),\n\n    passiveListener: (function checkPassiveListener() {\n      let supportsPassive = false;\n      try {\n        const opts = Object.defineProperty({}, 'passive', {\n          // eslint-disable-next-line\n          get() {\n            supportsPassive = true;\n          },\n        });\n        window.addEventListener('testPassiveListener', null, opts);\n      } catch (e) {\n        // No support\n      }\n      return supportsPassive;\n    }()),\n\n    gestures: (function checkGestures() {\n      return 'ongesturestart' in window;\n    }()),\n  };\n}());\n\nclass SwiperClass {\n  constructor(params = {}) {\n    const self = this;\n    self.params = params;\n\n    // Events\n    self.eventsListeners = {};\n\n    if (self.params && self.params.on) {\n      Object.keys(self.params.on).forEach((eventName) => {\n        self.on(eventName, self.params.on[eventName]);\n      });\n    }\n  }\n\n  on(events, handler, priority) {\n    const self = this;\n    if (typeof handler !== 'function') return self;\n    const method = priority ? 'unshift' : 'push';\n    events.split(' ').forEach((event) => {\n      if (!self.eventsListeners[event]) self.eventsListeners[event] = [];\n      self.eventsListeners[event][method](handler);\n    });\n    return self;\n  }\n\n  once(events, handler, priority) {\n    const self = this;\n    if (typeof handler !== 'function') return self;\n    function onceHandler(...args) {\n      handler.apply(self, args);\n      self.off(events, onceHandler);\n    }\n    return self.on(events, onceHandler, priority);\n  }\n\n  off(events, handler) {\n    const self = this;\n    if (!self.eventsListeners) return self;\n    events.split(' ').forEach((event) => {\n      if (typeof handler === 'undefined') {\n        self.eventsListeners[event] = [];\n      } else if (self.eventsListeners[event] && self.eventsListeners[event].length) {\n        self.eventsListeners[event].forEach((eventHandler, index$$1) => {\n          if (eventHandler === handler) {\n            self.eventsListeners[event].splice(index$$1, 1);\n          }\n        });\n      }\n    });\n    return self;\n  }\n\n  emit(...args) {\n    const self = this;\n    if (!self.eventsListeners) return self;\n    let events;\n    let data$$1;\n    let context;\n    if (typeof args[0] === 'string' || Array.isArray(args[0])) {\n      events = args[0];\n      data$$1 = args.slice(1, args.length);\n      context = self;\n    } else {\n      events = args[0].events;\n      data$$1 = args[0].data;\n      context = args[0].context || self;\n    }\n    const eventsArray = Array.isArray(events) ? events : events.split(' ');\n    eventsArray.forEach((event) => {\n      if (self.eventsListeners && self.eventsListeners[event]) {\n        const handlers = [];\n        self.eventsListeners[event].forEach((eventHandler) => {\n          handlers.push(eventHandler);\n        });\n        handlers.forEach((eventHandler) => {\n          eventHandler.apply(context, data$$1);\n        });\n      }\n    });\n    return self;\n  }\n\n  useModulesParams(instanceParams) {\n    const instance = this;\n    if (!instance.modules) return;\n    Object.keys(instance.modules).forEach((moduleName) => {\n      const module = instance.modules[moduleName];\n      // Extend params\n      if (module.params) {\n        Utils.extend(instanceParams, module.params);\n      }\n    });\n  }\n\n  useModules(modulesParams = {}) {\n    const instance = this;\n    if (!instance.modules) return;\n    Object.keys(instance.modules).forEach((moduleName) => {\n      const module = instance.modules[moduleName];\n      const moduleParams = modulesParams[moduleName] || {};\n      // Extend instance methods and props\n      if (module.instance) {\n        Object.keys(module.instance).forEach((modulePropName) => {\n          const moduleProp = module.instance[modulePropName];\n          if (typeof moduleProp === 'function') {\n            instance[modulePropName] = moduleProp.bind(instance);\n          } else {\n            instance[modulePropName] = moduleProp;\n          }\n        });\n      }\n      // Add event listeners\n      if (module.on && instance.on) {\n        Object.keys(module.on).forEach((moduleEventName) => {\n          instance.on(moduleEventName, module.on[moduleEventName]);\n        });\n      }\n\n      // Module create callback\n      if (module.create) {\n        module.create.bind(instance)(moduleParams);\n      }\n    });\n  }\n\n  static set components(components) {\n    const Class = this;\n    if (!Class.use) return;\n    Class.use(components);\n  }\n\n  static installModule(module, ...params) {\n    const Class = this;\n    if (!Class.prototype.modules) Class.prototype.modules = {};\n    const name = module.name || (`${Object.keys(Class.prototype.modules).length}_${Utils.now()}`);\n    Class.prototype.modules[name] = module;\n    // Prototype\n    if (module.proto) {\n      Object.keys(module.proto).forEach((key) => {\n        Class.prototype[key] = module.proto[key];\n      });\n    }\n    // Class\n    if (module.static) {\n      Object.keys(module.static).forEach((key) => {\n        Class[key] = module.static[key];\n      });\n    }\n    // Callback\n    if (module.install) {\n      module.install.apply(Class, params);\n    }\n    return Class;\n  }\n\n  static use(module, ...params) {\n    const Class = this;\n    if (Array.isArray(module)) {\n      module.forEach(m => Class.installModule(m));\n      return Class;\n    }\n    return Class.installModule(module, ...params);\n  }\n}\n\nfunction updateSize () {\n  const swiper = this;\n  let width;\n  let height;\n  const $el = swiper.$el;\n  if (typeof swiper.params.width !== 'undefined') {\n    width = swiper.params.width;\n  } else {\n    width = $el[0].clientWidth;\n  }\n  if (typeof swiper.params.height !== 'undefined') {\n    height = swiper.params.height;\n  } else {\n    height = $el[0].clientHeight;\n  }\n  if ((width === 0 && swiper.isHorizontal()) || (height === 0 && swiper.isVertical())) {\n    return;\n  }\n\n  // Subtract paddings\n  width = width - parseInt($el.css('padding-left'), 10) - parseInt($el.css('padding-right'), 10);\n  height = height - parseInt($el.css('padding-top'), 10) - parseInt($el.css('padding-bottom'), 10);\n\n  Utils.extend(swiper, {\n    width,\n    height,\n    size: swiper.isHorizontal() ? width : height,\n  });\n}\n\nfunction updateSlides () {\n  const swiper = this;\n  const params = swiper.params;\n\n  const {\n    $wrapperEl, size: swiperSize, rtlTranslate: rtl, wrongRTL,\n  } = swiper;\n  const isVirtual = swiper.virtual && params.virtual.enabled;\n  const previousSlidesLength = isVirtual ? swiper.virtual.slides.length : swiper.slides.length;\n  const slides = $wrapperEl.children(`.${swiper.params.slideClass}`);\n  const slidesLength = isVirtual ? swiper.virtual.slides.length : slides.length;\n  let snapGrid = [];\n  const slidesGrid = [];\n  const slidesSizesGrid = [];\n\n  let offsetBefore = params.slidesOffsetBefore;\n  if (typeof offsetBefore === 'function') {\n    offsetBefore = params.slidesOffsetBefore.call(swiper);\n  }\n\n  let offsetAfter = params.slidesOffsetAfter;\n  if (typeof offsetAfter === 'function') {\n    offsetAfter = params.slidesOffsetAfter.call(swiper);\n  }\n\n  const previousSnapGridLength = swiper.snapGrid.length;\n  const previousSlidesGridLength = swiper.snapGrid.length;\n\n  let spaceBetween = params.spaceBetween;\n  let slidePosition = -offsetBefore;\n  let prevSlideSize = 0;\n  let index$$1 = 0;\n  if (typeof swiperSize === 'undefined') {\n    return;\n  }\n  if (typeof spaceBetween === 'string' && spaceBetween.indexOf('%') >= 0) {\n    spaceBetween = (parseFloat(spaceBetween.replace('%', '')) / 100) * swiperSize;\n  }\n\n  swiper.virtualSize = -spaceBetween;\n\n  // reset margins\n  if (rtl) slides.css({ marginLeft: '', marginTop: '' });\n  else slides.css({ marginRight: '', marginBottom: '' });\n\n  let slidesNumberEvenToRows;\n  if (params.slidesPerColumn > 1) {\n    if (Math.floor(slidesLength / params.slidesPerColumn) === slidesLength / swiper.params.slidesPerColumn) {\n      slidesNumberEvenToRows = slidesLength;\n    } else {\n      slidesNumberEvenToRows = Math.ceil(slidesLength / params.slidesPerColumn) * params.slidesPerColumn;\n    }\n    if (params.slidesPerView !== 'auto' && params.slidesPerColumnFill === 'row') {\n      slidesNumberEvenToRows = Math.max(slidesNumberEvenToRows, params.slidesPerView * params.slidesPerColumn);\n    }\n  }\n\n  // Calc slides\n  let slideSize;\n  const slidesPerColumn = params.slidesPerColumn;\n  const slidesPerRow = slidesNumberEvenToRows / slidesPerColumn;\n  const numFullColumns = slidesPerRow - ((params.slidesPerColumn * slidesPerRow) - slidesLength);\n  for (let i = 0; i < slidesLength; i += 1) {\n    slideSize = 0;\n    const slide = slides.eq(i);\n    if (params.slidesPerColumn > 1) {\n      // Set slides order\n      let newSlideOrderIndex;\n      let column;\n      let row;\n      if (params.slidesPerColumnFill === 'column') {\n        column = Math.floor(i / slidesPerColumn);\n        row = i - (column * slidesPerColumn);\n        if (column > numFullColumns || (column === numFullColumns && row === slidesPerColumn - 1)) {\n          row += 1;\n          if (row >= slidesPerColumn) {\n            row = 0;\n            column += 1;\n          }\n        }\n        newSlideOrderIndex = column + ((row * slidesNumberEvenToRows) / slidesPerColumn);\n        slide\n          .css({\n            '-webkit-box-ordinal-group': newSlideOrderIndex,\n            '-moz-box-ordinal-group': newSlideOrderIndex,\n            '-ms-flex-order': newSlideOrderIndex,\n            '-webkit-order': newSlideOrderIndex,\n            order: newSlideOrderIndex,\n          });\n      } else {\n        row = Math.floor(i / slidesPerRow);\n        column = i - (row * slidesPerRow);\n      }\n      slide\n        .css(\n          `margin-${swiper.isHorizontal() ? 'top' : 'left'}`,\n          (row !== 0 && params.spaceBetween) && (`${params.spaceBetween}px`)\n        )\n        .attr('data-swiper-column', column)\n        .attr('data-swiper-row', row);\n    }\n    if (slide.css('display') === 'none') continue; // eslint-disable-line\n\n    if (params.slidesPerView === 'auto') {\n      const slideStyles = window.getComputedStyle(slide[0], null);\n      const currentTransform = slide[0].style.transform;\n      const currentWebKitTransform = slide[0].style.webkitTransform;\n      if (currentTransform) {\n        slide[0].style.transform = 'none';\n      }\n      if (currentWebKitTransform) {\n        slide[0].style.webkitTransform = 'none';\n      }\n      if (params.roundLengths) {\n        slideSize = swiper.isHorizontal()\n          ? slide.outerWidth(true)\n          : slide.outerHeight(true);\n      } else {\n        // eslint-disable-next-line\n        if (swiper.isHorizontal()) {\n          slideSize = slide[0].getBoundingClientRect().width\n            + parseFloat(slideStyles.getPropertyValue('margin-left'))\n            + parseFloat(slideStyles.getPropertyValue('margin-right'));\n        } else {\n          slideSize = slide[0].getBoundingClientRect().height\n            + parseFloat(slideStyles.getPropertyValue('margin-top'))\n            + parseFloat(slideStyles.getPropertyValue('margin-bottom'));\n        }\n      }\n      if (currentTransform) {\n        slide[0].style.transform = currentTransform;\n      }\n      if (currentWebKitTransform) {\n        slide[0].style.webkitTransform = currentWebKitTransform;\n      }\n      if (params.roundLengths) slideSize = Math.floor(slideSize);\n    } else {\n      slideSize = (swiperSize - ((params.slidesPerView - 1) * spaceBetween)) / params.slidesPerView;\n      if (params.roundLengths) slideSize = Math.floor(slideSize);\n\n      if (slides[i]) {\n        if (swiper.isHorizontal()) {\n          slides[i].style.width = `${slideSize}px`;\n        } else {\n          slides[i].style.height = `${slideSize}px`;\n        }\n      }\n    }\n    if (slides[i]) {\n      slides[i].swiperSlideSize = slideSize;\n    }\n    slidesSizesGrid.push(slideSize);\n\n\n    if (params.centeredSlides) {\n      slidePosition = slidePosition + (slideSize / 2) + (prevSlideSize / 2) + spaceBetween;\n      if (prevSlideSize === 0 && i !== 0) slidePosition = slidePosition - (swiperSize / 2) - spaceBetween;\n      if (i === 0) slidePosition = slidePosition - (swiperSize / 2) - spaceBetween;\n      if (Math.abs(slidePosition) < 1 / 1000) slidePosition = 0;\n      if (params.roundLengths) slidePosition = Math.floor(slidePosition);\n      if ((index$$1) % params.slidesPerGroup === 0) snapGrid.push(slidePosition);\n      slidesGrid.push(slidePosition);\n    } else {\n      if (params.roundLengths) slidePosition = Math.floor(slidePosition);\n      if ((index$$1) % params.slidesPerGroup === 0) snapGrid.push(slidePosition);\n      slidesGrid.push(slidePosition);\n      slidePosition = slidePosition + slideSize + spaceBetween;\n    }\n\n    swiper.virtualSize += slideSize + spaceBetween;\n\n    prevSlideSize = slideSize;\n\n    index$$1 += 1;\n  }\n  swiper.virtualSize = Math.max(swiper.virtualSize, swiperSize) + offsetAfter;\n  let newSlidesGrid;\n\n  if (\n    rtl && wrongRTL && (params.effect === 'slide' || params.effect === 'coverflow')) {\n    $wrapperEl.css({ width: `${swiper.virtualSize + params.spaceBetween}px` });\n  }\n  if (!Support.flexbox || params.setWrapperSize) {\n    if (swiper.isHorizontal()) $wrapperEl.css({ width: `${swiper.virtualSize + params.spaceBetween}px` });\n    else $wrapperEl.css({ height: `${swiper.virtualSize + params.spaceBetween}px` });\n  }\n\n  if (params.slidesPerColumn > 1) {\n    swiper.virtualSize = (slideSize + params.spaceBetween) * slidesNumberEvenToRows;\n    swiper.virtualSize = Math.ceil(swiper.virtualSize / params.slidesPerColumn) - params.spaceBetween;\n    if (swiper.isHorizontal()) $wrapperEl.css({ width: `${swiper.virtualSize + params.spaceBetween}px` });\n    else $wrapperEl.css({ height: `${swiper.virtualSize + params.spaceBetween}px` });\n    if (params.centeredSlides) {\n      newSlidesGrid = [];\n      for (let i = 0; i < snapGrid.length; i += 1) {\n        let slidesGridItem = snapGrid[i];\n        if (params.roundLengths) slidesGridItem = Math.floor(slidesGridItem);\n        if (snapGrid[i] < swiper.virtualSize + snapGrid[0]) newSlidesGrid.push(slidesGridItem);\n      }\n      snapGrid = newSlidesGrid;\n    }\n  }\n\n  // Remove last grid elements depending on width\n  if (!params.centeredSlides) {\n    newSlidesGrid = [];\n    for (let i = 0; i < snapGrid.length; i += 1) {\n      let slidesGridItem = snapGrid[i];\n      if (params.roundLengths) slidesGridItem = Math.floor(slidesGridItem);\n      if (snapGrid[i] <= swiper.virtualSize - swiperSize) {\n        newSlidesGrid.push(slidesGridItem);\n      }\n    }\n    snapGrid = newSlidesGrid;\n    if (Math.floor(swiper.virtualSize - swiperSize) - Math.floor(snapGrid[snapGrid.length - 1]) > 1) {\n      snapGrid.push(swiper.virtualSize - swiperSize);\n    }\n  }\n  if (snapGrid.length === 0) snapGrid = [0];\n\n  if (params.spaceBetween !== 0) {\n    if (swiper.isHorizontal()) {\n      if (rtl) slides.css({ marginLeft: `${spaceBetween}px` });\n      else slides.css({ marginRight: `${spaceBetween}px` });\n    } else slides.css({ marginBottom: `${spaceBetween}px` });\n  }\n\n  if (params.centerInsufficientSlides) {\n    let allSlidesSize = 0;\n    slidesSizesGrid.forEach((slideSizeValue) => {\n      allSlidesSize += slideSizeValue + (params.spaceBetween ? params.spaceBetween : 0);\n    });\n    allSlidesSize -= params.spaceBetween;\n    if (allSlidesSize < swiperSize) {\n      const allSlidesOffset = (swiperSize - allSlidesSize) / 2;\n      snapGrid.forEach((snap, snapIndex) => {\n        snapGrid[snapIndex] = snap - allSlidesOffset;\n      });\n      slidesGrid.forEach((snap, snapIndex) => {\n        slidesGrid[snapIndex] = snap + allSlidesOffset;\n      });\n    }\n  }\n\n  Utils.extend(swiper, {\n    slides,\n    snapGrid,\n    slidesGrid,\n    slidesSizesGrid,\n  });\n\n  if (slidesLength !== previousSlidesLength) {\n    swiper.emit('slidesLengthChange');\n  }\n  if (snapGrid.length !== previousSnapGridLength) {\n    if (swiper.params.watchOverflow) swiper.checkOverflow();\n    swiper.emit('snapGridLengthChange');\n  }\n  if (slidesGrid.length !== previousSlidesGridLength) {\n    swiper.emit('slidesGridLengthChange');\n  }\n\n  if (params.watchSlidesProgress || params.watchSlidesVisibility) {\n    swiper.updateSlidesOffset();\n  }\n}\n\nfunction updateAutoHeight (speed) {\n  const swiper = this;\n  const activeSlides = [];\n  let newHeight = 0;\n  let i;\n  if (typeof speed === 'number') {\n    swiper.setTransition(speed);\n  } else if (speed === true) {\n    swiper.setTransition(swiper.params.speed);\n  }\n  // Find slides currently in view\n  if (swiper.params.slidesPerView !== 'auto' && swiper.params.slidesPerView > 1) {\n    for (i = 0; i < Math.ceil(swiper.params.slidesPerView); i += 1) {\n      const index$$1 = swiper.activeIndex + i;\n      if (index$$1 > swiper.slides.length) break;\n      activeSlides.push(swiper.slides.eq(index$$1)[0]);\n    }\n  } else {\n    activeSlides.push(swiper.slides.eq(swiper.activeIndex)[0]);\n  }\n\n  // Find new height from highest slide in view\n  for (i = 0; i < activeSlides.length; i += 1) {\n    if (typeof activeSlides[i] !== 'undefined') {\n      const height = activeSlides[i].offsetHeight;\n      newHeight = height > newHeight ? height : newHeight;\n    }\n  }\n\n  // Update Height\n  if (newHeight) swiper.$wrapperEl.css('height', `${newHeight}px`);\n}\n\nfunction updateSlidesOffset () {\n  const swiper = this;\n  const slides = swiper.slides;\n  for (let i = 0; i < slides.length; i += 1) {\n    slides[i].swiperSlideOffset = swiper.isHorizontal() ? slides[i].offsetLeft : slides[i].offsetTop;\n  }\n}\n\nfunction updateSlidesProgress (translate = (this && this.translate) || 0) {\n  const swiper = this;\n  const params = swiper.params;\n\n  const { slides, rtlTranslate: rtl } = swiper;\n\n  if (slides.length === 0) return;\n  if (typeof slides[0].swiperSlideOffset === 'undefined') swiper.updateSlidesOffset();\n\n  let offsetCenter = -translate;\n  if (rtl) offsetCenter = translate;\n\n  // Visible Slides\n  slides.removeClass(params.slideVisibleClass);\n\n  swiper.visibleSlidesIndexes = [];\n  swiper.visibleSlides = [];\n\n  for (let i = 0; i < slides.length; i += 1) {\n    const slide = slides[i];\n    const slideProgress = (\n      (offsetCenter + (params.centeredSlides ? swiper.minTranslate() : 0)) - slide.swiperSlideOffset\n    ) / (slide.swiperSlideSize + params.spaceBetween);\n    if (params.watchSlidesVisibility) {\n      const slideBefore = -(offsetCenter - slide.swiperSlideOffset);\n      const slideAfter = slideBefore + swiper.slidesSizesGrid[i];\n      const isVisible = (slideBefore >= 0 && slideBefore < swiper.size)\n                || (slideAfter > 0 && slideAfter <= swiper.size)\n                || (slideBefore <= 0 && slideAfter >= swiper.size);\n      if (isVisible) {\n        swiper.visibleSlides.push(slide);\n        swiper.visibleSlidesIndexes.push(i);\n        slides.eq(i).addClass(params.slideVisibleClass);\n      }\n    }\n    slide.progress = rtl ? -slideProgress : slideProgress;\n  }\n  swiper.visibleSlides = $(swiper.visibleSlides);\n}\n\nfunction updateProgress (translate = (this && this.translate) || 0) {\n  const swiper = this;\n  const params = swiper.params;\n\n  const translatesDiff = swiper.maxTranslate() - swiper.minTranslate();\n  let { progress, isBeginning, isEnd } = swiper;\n  const wasBeginning = isBeginning;\n  const wasEnd = isEnd;\n  if (translatesDiff === 0) {\n    progress = 0;\n    isBeginning = true;\n    isEnd = true;\n  } else {\n    progress = (translate - swiper.minTranslate()) / (translatesDiff);\n    isBeginning = progress <= 0;\n    isEnd = progress >= 1;\n  }\n  Utils.extend(swiper, {\n    progress,\n    isBeginning,\n    isEnd,\n  });\n\n  if (params.watchSlidesProgress || params.watchSlidesVisibility) swiper.updateSlidesProgress(translate);\n\n  if (isBeginning && !wasBeginning) {\n    swiper.emit('reachBeginning toEdge');\n  }\n  if (isEnd && !wasEnd) {\n    swiper.emit('reachEnd toEdge');\n  }\n  if ((wasBeginning && !isBeginning) || (wasEnd && !isEnd)) {\n    swiper.emit('fromEdge');\n  }\n\n  swiper.emit('progress', progress);\n}\n\nfunction updateSlidesClasses () {\n  const swiper = this;\n\n  const {\n    slides, params, $wrapperEl, activeIndex, realIndex,\n  } = swiper;\n  const isVirtual = swiper.virtual && params.virtual.enabled;\n\n  slides.removeClass(`${params.slideActiveClass} ${params.slideNextClass} ${params.slidePrevClass} ${params.slideDuplicateActiveClass} ${params.slideDuplicateNextClass} ${params.slideDuplicatePrevClass}`);\n\n  let activeSlide;\n  if (isVirtual) {\n    activeSlide = swiper.$wrapperEl.find(`.${params.slideClass}[data-swiper-slide-index=\"${activeIndex}\"]`);\n  } else {\n    activeSlide = slides.eq(activeIndex);\n  }\n\n  // Active classes\n  activeSlide.addClass(params.slideActiveClass);\n\n  if (params.loop) {\n    // Duplicate to all looped slides\n    if (activeSlide.hasClass(params.slideDuplicateClass)) {\n      $wrapperEl\n        .children(`.${params.slideClass}:not(.${params.slideDuplicateClass})[data-swiper-slide-index=\"${realIndex}\"]`)\n        .addClass(params.slideDuplicateActiveClass);\n    } else {\n      $wrapperEl\n        .children(`.${params.slideClass}.${params.slideDuplicateClass}[data-swiper-slide-index=\"${realIndex}\"]`)\n        .addClass(params.slideDuplicateActiveClass);\n    }\n  }\n  // Next Slide\n  let nextSlide = activeSlide.nextAll(`.${params.slideClass}`).eq(0).addClass(params.slideNextClass);\n  if (params.loop && nextSlide.length === 0) {\n    nextSlide = slides.eq(0);\n    nextSlide.addClass(params.slideNextClass);\n  }\n  // Prev Slide\n  let prevSlide = activeSlide.prevAll(`.${params.slideClass}`).eq(0).addClass(params.slidePrevClass);\n  if (params.loop && prevSlide.length === 0) {\n    prevSlide = slides.eq(-1);\n    prevSlide.addClass(params.slidePrevClass);\n  }\n  if (params.loop) {\n    // Duplicate to all looped slides\n    if (nextSlide.hasClass(params.slideDuplicateClass)) {\n      $wrapperEl\n        .children(`.${params.slideClass}:not(.${params.slideDuplicateClass})[data-swiper-slide-index=\"${nextSlide.attr('data-swiper-slide-index')}\"]`)\n        .addClass(params.slideDuplicateNextClass);\n    } else {\n      $wrapperEl\n        .children(`.${params.slideClass}.${params.slideDuplicateClass}[data-swiper-slide-index=\"${nextSlide.attr('data-swiper-slide-index')}\"]`)\n        .addClass(params.slideDuplicateNextClass);\n    }\n    if (prevSlide.hasClass(params.slideDuplicateClass)) {\n      $wrapperEl\n        .children(`.${params.slideClass}:not(.${params.slideDuplicateClass})[data-swiper-slide-index=\"${prevSlide.attr('data-swiper-slide-index')}\"]`)\n        .addClass(params.slideDuplicatePrevClass);\n    } else {\n      $wrapperEl\n        .children(`.${params.slideClass}.${params.slideDuplicateClass}[data-swiper-slide-index=\"${prevSlide.attr('data-swiper-slide-index')}\"]`)\n        .addClass(params.slideDuplicatePrevClass);\n    }\n  }\n}\n\nfunction updateActiveIndex (newActiveIndex) {\n  const swiper = this;\n  const translate = swiper.rtlTranslate ? swiper.translate : -swiper.translate;\n  const {\n    slidesGrid, snapGrid, params, activeIndex: previousIndex, realIndex: previousRealIndex, snapIndex: previousSnapIndex,\n  } = swiper;\n  let activeIndex = newActiveIndex;\n  let snapIndex;\n  if (typeof activeIndex === 'undefined') {\n    for (let i = 0; i < slidesGrid.length; i += 1) {\n      if (typeof slidesGrid[i + 1] !== 'undefined') {\n        if (translate >= slidesGrid[i] && translate < slidesGrid[i + 1] - ((slidesGrid[i + 1] - slidesGrid[i]) / 2)) {\n          activeIndex = i;\n        } else if (translate >= slidesGrid[i] && translate < slidesGrid[i + 1]) {\n          activeIndex = i + 1;\n        }\n      } else if (translate >= slidesGrid[i]) {\n        activeIndex = i;\n      }\n    }\n    // Normalize slideIndex\n    if (params.normalizeSlideIndex) {\n      if (activeIndex < 0 || typeof activeIndex === 'undefined') activeIndex = 0;\n    }\n  }\n  if (snapGrid.indexOf(translate) >= 0) {\n    snapIndex = snapGrid.indexOf(translate);\n  } else {\n    snapIndex = Math.floor(activeIndex / params.slidesPerGroup);\n  }\n  if (snapIndex >= snapGrid.length) snapIndex = snapGrid.length - 1;\n  if (activeIndex === previousIndex) {\n    if (snapIndex !== previousSnapIndex) {\n      swiper.snapIndex = snapIndex;\n      swiper.emit('snapIndexChange');\n    }\n    return;\n  }\n\n  // Get real index\n  const realIndex = parseInt(swiper.slides.eq(activeIndex).attr('data-swiper-slide-index') || activeIndex, 10);\n\n  Utils.extend(swiper, {\n    snapIndex,\n    realIndex,\n    previousIndex,\n    activeIndex,\n  });\n  swiper.emit('activeIndexChange');\n  swiper.emit('snapIndexChange');\n  if (previousRealIndex !== realIndex) {\n    swiper.emit('realIndexChange');\n  }\n  swiper.emit('slideChange');\n}\n\nfunction updateClickedSlide (e) {\n  const swiper = this;\n  const params = swiper.params;\n  const slide = $(e.target).closest(`.${params.slideClass}`)[0];\n  let slideFound = false;\n  if (slide) {\n    for (let i = 0; i < swiper.slides.length; i += 1) {\n      if (swiper.slides[i] === slide) slideFound = true;\n    }\n  }\n\n  if (slide && slideFound) {\n    swiper.clickedSlide = slide;\n    if (swiper.virtual && swiper.params.virtual.enabled) {\n      swiper.clickedIndex = parseInt($(slide).attr('data-swiper-slide-index'), 10);\n    } else {\n      swiper.clickedIndex = $(slide).index();\n    }\n  } else {\n    swiper.clickedSlide = undefined;\n    swiper.clickedIndex = undefined;\n    return;\n  }\n  if (params.slideToClickedSlide && swiper.clickedIndex !== undefined && swiper.clickedIndex !== swiper.activeIndex) {\n    swiper.slideToClickedSlide();\n  }\n}\n\nvar update = {\n  updateSize,\n  updateSlides,\n  updateAutoHeight,\n  updateSlidesOffset,\n  updateSlidesProgress,\n  updateProgress,\n  updateSlidesClasses,\n  updateActiveIndex,\n  updateClickedSlide,\n};\n\nfunction getTranslate (axis = this.isHorizontal() ? 'x' : 'y') {\n  const swiper = this;\n\n  const {\n    params, rtlTranslate: rtl, translate, $wrapperEl,\n  } = swiper;\n\n  if (params.virtualTranslate) {\n    return rtl ? -translate : translate;\n  }\n\n  let currentTranslate = Utils.getTranslate($wrapperEl[0], axis);\n  if (rtl) currentTranslate = -currentTranslate;\n\n  return currentTranslate || 0;\n}\n\nfunction setTranslate (translate, byController) {\n  const swiper = this;\n  const {\n    rtlTranslate: rtl, params, $wrapperEl, progress,\n  } = swiper;\n  let x = 0;\n  let y = 0;\n  const z = 0;\n\n  if (swiper.isHorizontal()) {\n    x = rtl ? -translate : translate;\n  } else {\n    y = translate;\n  }\n\n  if (params.roundLengths) {\n    x = Math.floor(x);\n    y = Math.floor(y);\n  }\n\n  if (!params.virtualTranslate) {\n    if (Support.transforms3d) $wrapperEl.transform(`translate3d(${x}px, ${y}px, ${z}px)`);\n    else $wrapperEl.transform(`translate(${x}px, ${y}px)`);\n  }\n  swiper.previousTranslate = swiper.translate;\n  swiper.translate = swiper.isHorizontal() ? x : y;\n\n  // Check if we need to update progress\n  let newProgress;\n  const translatesDiff = swiper.maxTranslate() - swiper.minTranslate();\n  if (translatesDiff === 0) {\n    newProgress = 0;\n  } else {\n    newProgress = (translate - swiper.minTranslate()) / (translatesDiff);\n  }\n  if (newProgress !== progress) {\n    swiper.updateProgress(translate);\n  }\n\n  swiper.emit('setTranslate', swiper.translate, byController);\n}\n\nfunction minTranslate () {\n  return (-this.snapGrid[0]);\n}\n\nfunction maxTranslate () {\n  return (-this.snapGrid[this.snapGrid.length - 1]);\n}\n\nvar translate = {\n  getTranslate,\n  setTranslate,\n  minTranslate,\n  maxTranslate,\n};\n\nfunction setTransition (duration, byController) {\n  const swiper = this;\n\n  swiper.$wrapperEl.transition(duration);\n\n  swiper.emit('setTransition', duration, byController);\n}\n\nfunction transitionStart (runCallbacks = true, direction) {\n  const swiper = this;\n  const { activeIndex, params, previousIndex } = swiper;\n  if (params.autoHeight) {\n    swiper.updateAutoHeight();\n  }\n\n  let dir = direction;\n  if (!dir) {\n    if (activeIndex > previousIndex) dir = 'next';\n    else if (activeIndex < previousIndex) dir = 'prev';\n    else dir = 'reset';\n  }\n\n  swiper.emit('transitionStart');\n\n  if (runCallbacks && activeIndex !== previousIndex) {\n    if (dir === 'reset') {\n      swiper.emit('slideResetTransitionStart');\n      return;\n    }\n    swiper.emit('slideChangeTransitionStart');\n    if (dir === 'next') {\n      swiper.emit('slideNextTransitionStart');\n    } else {\n      swiper.emit('slidePrevTransitionStart');\n    }\n  }\n}\n\nfunction transitionEnd$1 (runCallbacks = true, direction) {\n  const swiper = this;\n  const { activeIndex, previousIndex } = swiper;\n  swiper.animating = false;\n  swiper.setTransition(0);\n\n  let dir = direction;\n  if (!dir) {\n    if (activeIndex > previousIndex) dir = 'next';\n    else if (activeIndex < previousIndex) dir = 'prev';\n    else dir = 'reset';\n  }\n\n  swiper.emit('transitionEnd');\n\n  if (runCallbacks && activeIndex !== previousIndex) {\n    if (dir === 'reset') {\n      swiper.emit('slideResetTransitionEnd');\n      return;\n    }\n    swiper.emit('slideChangeTransitionEnd');\n    if (dir === 'next') {\n      swiper.emit('slideNextTransitionEnd');\n    } else {\n      swiper.emit('slidePrevTransitionEnd');\n    }\n  }\n}\n\nvar transition$1 = {\n  setTransition,\n  transitionStart,\n  transitionEnd: transitionEnd$1,\n};\n\nfunction slideTo (index$$1 = 0, speed = this.params.speed, runCallbacks = true, internal) {\n  const swiper = this;\n  let slideIndex = index$$1;\n  if (slideIndex < 0) slideIndex = 0;\n\n  const {\n    params, snapGrid, slidesGrid, previousIndex, activeIndex, rtlTranslate: rtl,\n  } = swiper;\n  if (swiper.animating && params.preventInteractionOnTransition) {\n    return false;\n  }\n\n  let snapIndex = Math.floor(slideIndex / params.slidesPerGroup);\n  if (snapIndex >= snapGrid.length) snapIndex = snapGrid.length - 1;\n\n  if ((activeIndex || params.initialSlide || 0) === (previousIndex || 0) && runCallbacks) {\n    swiper.emit('beforeSlideChangeStart');\n  }\n\n  const translate = -snapGrid[snapIndex];\n\n  // Update progress\n  swiper.updateProgress(translate);\n\n  // Normalize slideIndex\n  if (params.normalizeSlideIndex) {\n    for (let i = 0; i < slidesGrid.length; i += 1) {\n      if (-Math.floor(translate * 100) >= Math.floor(slidesGrid[i] * 100)) {\n        slideIndex = i;\n      }\n    }\n  }\n  // Directions locks\n  if (swiper.initialized && slideIndex !== activeIndex) {\n    if (!swiper.allowSlideNext && translate < swiper.translate && translate < swiper.minTranslate()) {\n      return false;\n    }\n    if (!swiper.allowSlidePrev && translate > swiper.translate && translate > swiper.maxTranslate()) {\n      if ((activeIndex || 0) !== slideIndex) return false;\n    }\n  }\n\n  let direction;\n  if (slideIndex > activeIndex) direction = 'next';\n  else if (slideIndex < activeIndex) direction = 'prev';\n  else direction = 'reset';\n\n\n  // Update Index\n  if ((rtl && -translate === swiper.translate) || (!rtl && translate === swiper.translate)) {\n    swiper.updateActiveIndex(slideIndex);\n    // Update Height\n    if (params.autoHeight) {\n      swiper.updateAutoHeight();\n    }\n    swiper.updateSlidesClasses();\n    if (params.effect !== 'slide') {\n      swiper.setTranslate(translate);\n    }\n    if (direction !== 'reset') {\n      swiper.transitionStart(runCallbacks, direction);\n      swiper.transitionEnd(runCallbacks, direction);\n    }\n    return false;\n  }\n\n  if (speed === 0 || !Support.transition) {\n    swiper.setTransition(0);\n    swiper.setTranslate(translate);\n    swiper.updateActiveIndex(slideIndex);\n    swiper.updateSlidesClasses();\n    swiper.emit('beforeTransitionStart', speed, internal);\n    swiper.transitionStart(runCallbacks, direction);\n    swiper.transitionEnd(runCallbacks, direction);\n  } else {\n    swiper.setTransition(speed);\n    swiper.setTranslate(translate);\n    swiper.updateActiveIndex(slideIndex);\n    swiper.updateSlidesClasses();\n    swiper.emit('beforeTransitionStart', speed, internal);\n    swiper.transitionStart(runCallbacks, direction);\n    if (!swiper.animating) {\n      swiper.animating = true;\n      if (!swiper.onSlideToWrapperTransitionEnd) {\n        swiper.onSlideToWrapperTransitionEnd = function transitionEnd$$1(e) {\n          if (!swiper || swiper.destroyed) return;\n          if (e.target !== this) return;\n          swiper.$wrapperEl[0].removeEventListener('transitionend', swiper.onSlideToWrapperTransitionEnd);\n          swiper.$wrapperEl[0].removeEventListener('webkitTransitionEnd', swiper.onSlideToWrapperTransitionEnd);\n          swiper.onSlideToWrapperTransitionEnd = null;\n          delete swiper.onSlideToWrapperTransitionEnd;\n          swiper.transitionEnd(runCallbacks, direction);\n        };\n      }\n      swiper.$wrapperEl[0].addEventListener('transitionend', swiper.onSlideToWrapperTransitionEnd);\n      swiper.$wrapperEl[0].addEventListener('webkitTransitionEnd', swiper.onSlideToWrapperTransitionEnd);\n    }\n  }\n\n  return true;\n}\n\nfunction slideToLoop (index$$1 = 0, speed = this.params.speed, runCallbacks = true, internal) {\n  const swiper = this;\n  let newIndex = index$$1;\n  if (swiper.params.loop) {\n    newIndex += swiper.loopedSlides;\n  }\n\n  return swiper.slideTo(newIndex, speed, runCallbacks, internal);\n}\n\n/* eslint no-unused-vars: \"off\" */\nfunction slideNext (speed = this.params.speed, runCallbacks = true, internal) {\n  const swiper = this;\n  const { params, animating } = swiper;\n  if (params.loop) {\n    if (animating) return false;\n    swiper.loopFix();\n    // eslint-disable-next-line\n    swiper._clientLeft = swiper.$wrapperEl[0].clientLeft;\n    return swiper.slideTo(swiper.activeIndex + params.slidesPerGroup, speed, runCallbacks, internal);\n  }\n  return swiper.slideTo(swiper.activeIndex + params.slidesPerGroup, speed, runCallbacks, internal);\n}\n\n/* eslint no-unused-vars: \"off\" */\nfunction slidePrev (speed = this.params.speed, runCallbacks = true, internal) {\n  const swiper = this;\n  const {\n    params, animating, snapGrid, slidesGrid, rtlTranslate,\n  } = swiper;\n\n  if (params.loop) {\n    if (animating) return false;\n    swiper.loopFix();\n    // eslint-disable-next-line\n    swiper._clientLeft = swiper.$wrapperEl[0].clientLeft;\n  }\n  const translate = rtlTranslate ? swiper.translate : -swiper.translate;\n  function normalize(val) {\n    if (val < 0) return -Math.floor(Math.abs(val));\n    return Math.floor(val);\n  }\n  const normalizedTranslate = normalize(translate);\n  const normalizedSnapGrid = snapGrid.map(val => normalize(val));\n  const normalizedSlidesGrid = slidesGrid.map(val => normalize(val));\n\n  const currentSnap = snapGrid[normalizedSnapGrid.indexOf(normalizedTranslate)];\n  const prevSnap = snapGrid[normalizedSnapGrid.indexOf(normalizedTranslate) - 1];\n  let prevIndex;\n  if (typeof prevSnap !== 'undefined') {\n    prevIndex = slidesGrid.indexOf(prevSnap);\n    if (prevIndex < 0) prevIndex = swiper.activeIndex - 1;\n  }\n  return swiper.slideTo(prevIndex, speed, runCallbacks, internal);\n}\n\n/* eslint no-unused-vars: \"off\" */\nfunction slideReset (speed = this.params.speed, runCallbacks = true, internal) {\n  const swiper = this;\n  return swiper.slideTo(swiper.activeIndex, speed, runCallbacks, internal);\n}\n\n/* eslint no-unused-vars: \"off\" */\nfunction slideToClosest (speed = this.params.speed, runCallbacks = true, internal) {\n  const swiper = this;\n  let index$$1 = swiper.activeIndex;\n  const snapIndex = Math.floor(index$$1 / swiper.params.slidesPerGroup);\n\n  if (snapIndex < swiper.snapGrid.length - 1) {\n    const translate = swiper.rtlTranslate ? swiper.translate : -swiper.translate;\n\n    const currentSnap = swiper.snapGrid[snapIndex];\n    const nextSnap = swiper.snapGrid[snapIndex + 1];\n\n    if ((translate - currentSnap) > (nextSnap - currentSnap) / 2) {\n      index$$1 = swiper.params.slidesPerGroup;\n    }\n  }\n\n  return swiper.slideTo(index$$1, speed, runCallbacks, internal);\n}\n\nfunction slideToClickedSlide () {\n  const swiper = this;\n  const { params, $wrapperEl } = swiper;\n\n  const slidesPerView = params.slidesPerView === 'auto' ? swiper.slidesPerViewDynamic() : params.slidesPerView;\n  let slideToIndex = swiper.clickedIndex;\n  let realIndex;\n  if (params.loop) {\n    if (swiper.animating) return;\n    realIndex = parseInt($(swiper.clickedSlide).attr('data-swiper-slide-index'), 10);\n    if (params.centeredSlides) {\n      if (\n        (slideToIndex < swiper.loopedSlides - (slidesPerView / 2))\n        || (slideToIndex > (swiper.slides.length - swiper.loopedSlides) + (slidesPerView / 2))\n      ) {\n        swiper.loopFix();\n        slideToIndex = $wrapperEl\n          .children(`.${params.slideClass}[data-swiper-slide-index=\"${realIndex}\"]:not(.${params.slideDuplicateClass})`)\n          .eq(0)\n          .index();\n\n        Utils.nextTick(() => {\n          swiper.slideTo(slideToIndex);\n        });\n      } else {\n        swiper.slideTo(slideToIndex);\n      }\n    } else if (slideToIndex > swiper.slides.length - slidesPerView) {\n      swiper.loopFix();\n      slideToIndex = $wrapperEl\n        .children(`.${params.slideClass}[data-swiper-slide-index=\"${realIndex}\"]:not(.${params.slideDuplicateClass})`)\n        .eq(0)\n        .index();\n\n      Utils.nextTick(() => {\n        swiper.slideTo(slideToIndex);\n      });\n    } else {\n      swiper.slideTo(slideToIndex);\n    }\n  } else {\n    swiper.slideTo(slideToIndex);\n  }\n}\n\nvar slide = {\n  slideTo,\n  slideToLoop,\n  slideNext,\n  slidePrev,\n  slideReset,\n  slideToClosest,\n  slideToClickedSlide,\n};\n\nfunction loopCreate () {\n  const swiper = this;\n  const { params, $wrapperEl } = swiper;\n  // Remove duplicated slides\n  $wrapperEl.children(`.${params.slideClass}.${params.slideDuplicateClass}`).remove();\n\n  let slides = $wrapperEl.children(`.${params.slideClass}`);\n\n  if (params.loopFillGroupWithBlank) {\n    const blankSlidesNum = params.slidesPerGroup - (slides.length % params.slidesPerGroup);\n    if (blankSlidesNum !== params.slidesPerGroup) {\n      for (let i = 0; i < blankSlidesNum; i += 1) {\n        const blankNode = $(document.createElement('div')).addClass(`${params.slideClass} ${params.slideBlankClass}`);\n        $wrapperEl.append(blankNode);\n      }\n      slides = $wrapperEl.children(`.${params.slideClass}`);\n    }\n  }\n\n  if (params.slidesPerView === 'auto' && !params.loopedSlides) params.loopedSlides = slides.length;\n\n  swiper.loopedSlides = parseInt(params.loopedSlides || params.slidesPerView, 10);\n  swiper.loopedSlides += params.loopAdditionalSlides;\n  if (swiper.loopedSlides > slides.length) {\n    swiper.loopedSlides = slides.length;\n  }\n\n  const prependSlides = [];\n  const appendSlides = [];\n  slides.each((index$$1, el) => {\n    const slide = $(el);\n    if (index$$1 < swiper.loopedSlides) appendSlides.push(el);\n    if (index$$1 < slides.length && index$$1 >= slides.length - swiper.loopedSlides) prependSlides.push(el);\n    slide.attr('data-swiper-slide-index', index$$1);\n  });\n  for (let i = 0; i < appendSlides.length; i += 1) {\n    $wrapperEl.append($(appendSlides[i].cloneNode(true)).addClass(params.slideDuplicateClass));\n  }\n  for (let i = prependSlides.length - 1; i >= 0; i -= 1) {\n    $wrapperEl.prepend($(prependSlides[i].cloneNode(true)).addClass(params.slideDuplicateClass));\n  }\n}\n\nfunction loopFix () {\n  const swiper = this;\n  const {\n    params, activeIndex, slides, loopedSlides, allowSlidePrev, allowSlideNext, snapGrid, rtlTranslate: rtl,\n  } = swiper;\n  let newIndex;\n  swiper.allowSlidePrev = true;\n  swiper.allowSlideNext = true;\n\n  const snapTranslate = -snapGrid[activeIndex];\n  const diff = snapTranslate - swiper.getTranslate();\n\n\n  // Fix For Negative Oversliding\n  if (activeIndex < loopedSlides) {\n    newIndex = (slides.length - (loopedSlides * 3)) + activeIndex;\n    newIndex += loopedSlides;\n    const slideChanged = swiper.slideTo(newIndex, 0, false, true);\n    if (slideChanged && diff !== 0) {\n      swiper.setTranslate((rtl ? -swiper.translate : swiper.translate) - diff);\n    }\n  } else if ((params.slidesPerView === 'auto' && activeIndex >= loopedSlides * 2) || (activeIndex >= slides.length - loopedSlides)) {\n    // Fix For Positive Oversliding\n    newIndex = -slides.length + activeIndex + loopedSlides;\n    newIndex += loopedSlides;\n    const slideChanged = swiper.slideTo(newIndex, 0, false, true);\n    if (slideChanged && diff !== 0) {\n      swiper.setTranslate((rtl ? -swiper.translate : swiper.translate) - diff);\n    }\n  }\n  swiper.allowSlidePrev = allowSlidePrev;\n  swiper.allowSlideNext = allowSlideNext;\n}\n\nfunction loopDestroy () {\n  const swiper = this;\n  const { $wrapperEl, params, slides } = swiper;\n  $wrapperEl.children(`.${params.slideClass}.${params.slideDuplicateClass}`).remove();\n  slides.removeAttr('data-swiper-slide-index');\n}\n\nvar loop = {\n  loopCreate,\n  loopFix,\n  loopDestroy,\n};\n\nfunction setGrabCursor (moving) {\n  const swiper = this;\n  if (Support.touch || !swiper.params.simulateTouch || (swiper.params.watchOverflow && swiper.isLocked)) return;\n  const el = swiper.el;\n  el.style.cursor = 'move';\n  el.style.cursor = moving ? '-webkit-grabbing' : '-webkit-grab';\n  el.style.cursor = moving ? '-moz-grabbin' : '-moz-grab';\n  el.style.cursor = moving ? 'grabbing' : 'grab';\n}\n\nfunction unsetGrabCursor () {\n  const swiper = this;\n  if (Support.touch || (swiper.params.watchOverflow && swiper.isLocked)) return;\n  swiper.el.style.cursor = '';\n}\n\nvar grabCursor = {\n  setGrabCursor,\n  unsetGrabCursor,\n};\n\nfunction appendSlide (slides) {\n  const swiper = this;\n  const { $wrapperEl, params } = swiper;\n  if (params.loop) {\n    swiper.loopDestroy();\n  }\n  if (typeof slides === 'object' && 'length' in slides) {\n    for (let i = 0; i < slides.length; i += 1) {\n      if (slides[i]) $wrapperEl.append(slides[i]);\n    }\n  } else {\n    $wrapperEl.append(slides);\n  }\n  if (params.loop) {\n    swiper.loopCreate();\n  }\n  if (!(params.observer && Support.observer)) {\n    swiper.update();\n  }\n}\n\nfunction prependSlide (slides) {\n  const swiper = this;\n  const { params, $wrapperEl, activeIndex } = swiper;\n\n  if (params.loop) {\n    swiper.loopDestroy();\n  }\n  let newActiveIndex = activeIndex + 1;\n  if (typeof slides === 'object' && 'length' in slides) {\n    for (let i = 0; i < slides.length; i += 1) {\n      if (slides[i]) $wrapperEl.prepend(slides[i]);\n    }\n    newActiveIndex = activeIndex + slides.length;\n  } else {\n    $wrapperEl.prepend(slides);\n  }\n  if (params.loop) {\n    swiper.loopCreate();\n  }\n  if (!(params.observer && Support.observer)) {\n    swiper.update();\n  }\n  swiper.slideTo(newActiveIndex, 0, false);\n}\n\nfunction addSlide (index$$1, slides) {\n  const swiper = this;\n  const { $wrapperEl, params, activeIndex } = swiper;\n  let activeIndexBuffer = activeIndex;\n  if (params.loop) {\n    activeIndexBuffer -= swiper.loopedSlides;\n    swiper.loopDestroy();\n    swiper.slides = $wrapperEl.children(`.${params.slideClass}`);\n  }\n  const baseLength = swiper.slides.length;\n  if (index$$1 <= 0) {\n    swiper.prependSlide(slides);\n    return;\n  }\n  if (index$$1 >= baseLength) {\n    swiper.appendSlide(slides);\n    return;\n  }\n  let newActiveIndex = activeIndexBuffer > index$$1 ? activeIndexBuffer + 1 : activeIndexBuffer;\n\n  const slidesBuffer = [];\n  for (let i = baseLength - 1; i >= index$$1; i -= 1) {\n    const currentSlide = swiper.slides.eq(i);\n    currentSlide.remove();\n    slidesBuffer.unshift(currentSlide);\n  }\n\n  if (typeof slides === 'object' && 'length' in slides) {\n    for (let i = 0; i < slides.length; i += 1) {\n      if (slides[i]) $wrapperEl.append(slides[i]);\n    }\n    newActiveIndex = activeIndexBuffer > index$$1 ? activeIndexBuffer + slides.length : activeIndexBuffer;\n  } else {\n    $wrapperEl.append(slides);\n  }\n\n  for (let i = 0; i < slidesBuffer.length; i += 1) {\n    $wrapperEl.append(slidesBuffer[i]);\n  }\n\n  if (params.loop) {\n    swiper.loopCreate();\n  }\n  if (!(params.observer && Support.observer)) {\n    swiper.update();\n  }\n  if (params.loop) {\n    swiper.slideTo(newActiveIndex + swiper.loopedSlides, 0, false);\n  } else {\n    swiper.slideTo(newActiveIndex, 0, false);\n  }\n}\n\nfunction removeSlide (slidesIndexes) {\n  const swiper = this;\n  const { params, $wrapperEl, activeIndex } = swiper;\n\n  let activeIndexBuffer = activeIndex;\n  if (params.loop) {\n    activeIndexBuffer -= swiper.loopedSlides;\n    swiper.loopDestroy();\n    swiper.slides = $wrapperEl.children(`.${params.slideClass}`);\n  }\n  let newActiveIndex = activeIndexBuffer;\n  let indexToRemove;\n\n  if (typeof slidesIndexes === 'object' && 'length' in slidesIndexes) {\n    for (let i = 0; i < slidesIndexes.length; i += 1) {\n      indexToRemove = slidesIndexes[i];\n      if (swiper.slides[indexToRemove]) swiper.slides.eq(indexToRemove).remove();\n      if (indexToRemove < newActiveIndex) newActiveIndex -= 1;\n    }\n    newActiveIndex = Math.max(newActiveIndex, 0);\n  } else {\n    indexToRemove = slidesIndexes;\n    if (swiper.slides[indexToRemove]) swiper.slides.eq(indexToRemove).remove();\n    if (indexToRemove < newActiveIndex) newActiveIndex -= 1;\n    newActiveIndex = Math.max(newActiveIndex, 0);\n  }\n\n  if (params.loop) {\n    swiper.loopCreate();\n  }\n\n  if (!(params.observer && Support.observer)) {\n    swiper.update();\n  }\n  if (params.loop) {\n    swiper.slideTo(newActiveIndex + swiper.loopedSlides, 0, false);\n  } else {\n    swiper.slideTo(newActiveIndex, 0, false);\n  }\n}\n\nfunction removeAllSlides () {\n  const swiper = this;\n\n  const slidesIndexes = [];\n  for (let i = 0; i < swiper.slides.length; i += 1) {\n    slidesIndexes.push(i);\n  }\n  swiper.removeSlide(slidesIndexes);\n}\n\nvar manipulation = {\n  appendSlide,\n  prependSlide,\n  addSlide,\n  removeSlide,\n  removeAllSlides,\n};\n\nconst Device = (function Device() {\n  const ua = window.navigator.userAgent;\n\n  const device = {\n    ios: false,\n    android: false,\n    androidChrome: false,\n    desktop: false,\n    windows: false,\n    iphone: false,\n    ipod: false,\n    ipad: false,\n    cordova: window.cordova || window.phonegap,\n    phonegap: window.cordova || window.phonegap,\n  };\n\n  const windows = ua.match(/(Windows Phone);?[\\s\\/]+([\\d.]+)?/); // eslint-disable-line\n  const android = ua.match(/(Android);?[\\s\\/]+([\\d.]+)?/); // eslint-disable-line\n  const ipad = ua.match(/(iPad).*OS\\s([\\d_]+)/);\n  const ipod = ua.match(/(iPod)(.*OS\\s([\\d_]+))?/);\n  const iphone = !ipad && ua.match(/(iPhone\\sOS|iOS)\\s([\\d_]+)/);\n\n\n  // Windows\n  if (windows) {\n    device.os = 'windows';\n    device.osVersion = windows[2];\n    device.windows = true;\n  }\n  // Android\n  if (android && !windows) {\n    device.os = 'android';\n    device.osVersion = android[2];\n    device.android = true;\n    device.androidChrome = ua.toLowerCase().indexOf('chrome') >= 0;\n  }\n  if (ipad || iphone || ipod) {\n    device.os = 'ios';\n    device.ios = true;\n  }\n  // iOS\n  if (iphone && !ipod) {\n    device.osVersion = iphone[2].replace(/_/g, '.');\n    device.iphone = true;\n  }\n  if (ipad) {\n    device.osVersion = ipad[2].replace(/_/g, '.');\n    device.ipad = true;\n  }\n  if (ipod) {\n    device.osVersion = ipod[3] ? ipod[3].replace(/_/g, '.') : null;\n    device.iphone = true;\n  }\n  // iOS 8+ changed UA\n  if (device.ios && device.osVersion && ua.indexOf('Version/') >= 0) {\n    if (device.osVersion.split('.')[0] === '10') {\n      device.osVersion = ua.toLowerCase().split('version/')[1].split(' ')[0];\n    }\n  }\n\n  // Desktop\n  device.desktop = !(device.os || device.android || device.webView);\n\n  // Webview\n  device.webView = (iphone || ipad || ipod) && ua.match(/.*AppleWebKit(?!.*Safari)/i);\n\n  // Minimal UI\n  if (device.os && device.os === 'ios') {\n    const osVersionArr = device.osVersion.split('.');\n    const metaViewport = document.querySelector('meta[name=\"viewport\"]');\n    device.minimalUi = !device.webView\n      && (ipod || iphone)\n      && (osVersionArr[0] * 1 === 7 ? osVersionArr[1] * 1 >= 1 : osVersionArr[0] * 1 > 7)\n      && metaViewport && metaViewport.getAttribute('content').indexOf('minimal-ui') >= 0;\n  }\n\n  // Pixel Ratio\n  device.pixelRatio = window.devicePixelRatio || 1;\n\n  // Export object\n  return device;\n}());\n\nfunction onTouchStart (event) {\n  const swiper = this;\n  const data$$1 = swiper.touchEventsData;\n  const { params, touches } = swiper;\n  if (swiper.animating && params.preventInteractionOnTransition) {\n    return;\n  }\n  let e = event;\n  if (e.originalEvent) e = e.originalEvent;\n  data$$1.isTouchEvent = e.type === 'touchstart';\n  if (!data$$1.isTouchEvent && 'which' in e && e.which === 3) return;\n  if (!data$$1.isTouchEvent && 'button' in e && e.button > 0) return;\n  if (data$$1.isTouched && data$$1.isMoved) return;\n  if (params.noSwiping && $(e.target).closest(params.noSwipingSelector ? params.noSwipingSelector : `.${params.noSwipingClass}`)[0]) {\n    swiper.allowClick = true;\n    return;\n  }\n  if (params.swipeHandler) {\n    if (!$(e).closest(params.swipeHandler)[0]) return;\n  }\n\n  touches.currentX = e.type === 'touchstart' ? e.targetTouches[0].pageX : e.pageX;\n  touches.currentY = e.type === 'touchstart' ? e.targetTouches[0].pageY : e.pageY;\n  const startX = touches.currentX;\n  const startY = touches.currentY;\n\n  // Do NOT start if iOS edge swipe is detected. Otherwise iOS app (UIWebView) cannot swipe-to-go-back anymore\n\n  const edgeSwipeDetection = params.edgeSwipeDetection || params.iOSEdgeSwipeDetection;\n  const edgeSwipeThreshold = params.edgeSwipeThreshold || params.iOSEdgeSwipeThreshold;\n  if (\n    edgeSwipeDetection\n    && ((startX <= edgeSwipeThreshold)\n    || (startX >= window.screen.width - edgeSwipeThreshold))\n  ) {\n    return;\n  }\n\n  Utils.extend(data$$1, {\n    isTouched: true,\n    isMoved: false,\n    allowTouchCallbacks: true,\n    isScrolling: undefined,\n    startMoving: undefined,\n  });\n\n  touches.startX = startX;\n  touches.startY = startY;\n  data$$1.touchStartTime = Utils.now();\n  swiper.allowClick = true;\n  swiper.updateSize();\n  swiper.swipeDirection = undefined;\n  if (params.threshold > 0) data$$1.allowThresholdMove = false;\n  if (e.type !== 'touchstart') {\n    let preventDefault = true;\n    if ($(e.target).is(data$$1.formElements)) preventDefault = false;\n    if (\n      document.activeElement\n      && $(document.activeElement).is(data$$1.formElements)\n      && document.activeElement !== e.target\n    ) {\n      document.activeElement.blur();\n    }\n    if (preventDefault && swiper.allowTouchMove && params.touchStartPreventDefault) {\n      e.preventDefault();\n    }\n  }\n  swiper.emit('touchStart', e);\n}\n\nfunction onTouchMove (event) {\n  const swiper = this;\n  const data$$1 = swiper.touchEventsData;\n  const { params, touches, rtlTranslate: rtl } = swiper;\n  let e = event;\n  if (e.originalEvent) e = e.originalEvent;\n  if (!data$$1.isTouched) {\n    if (data$$1.startMoving && data$$1.isScrolling) {\n      swiper.emit('touchMoveOpposite', e);\n    }\n    return;\n  }\n  if (data$$1.isTouchEvent && e.type === 'mousemove') return;\n  const pageX = e.type === 'touchmove' ? e.targetTouches[0].pageX : e.pageX;\n  const pageY = e.type === 'touchmove' ? e.targetTouches[0].pageY : e.pageY;\n  if (e.preventedByNestedSwiper) {\n    touches.startX = pageX;\n    touches.startY = pageY;\n    return;\n  }\n  if (!swiper.allowTouchMove) {\n    // isMoved = true;\n    swiper.allowClick = false;\n    if (data$$1.isTouched) {\n      Utils.extend(touches, {\n        startX: pageX,\n        startY: pageY,\n        currentX: pageX,\n        currentY: pageY,\n      });\n      data$$1.touchStartTime = Utils.now();\n    }\n    return;\n  }\n  if (data$$1.isTouchEvent && params.touchReleaseOnEdges && !params.loop) {\n    if (swiper.isVertical()) {\n      // Vertical\n      if (\n        (pageY < touches.startY && swiper.translate <= swiper.maxTranslate())\n        || (pageY > touches.startY && swiper.translate >= swiper.minTranslate())\n      ) {\n        data$$1.isTouched = false;\n        data$$1.isMoved = false;\n        return;\n      }\n    } else if (\n      (pageX < touches.startX && swiper.translate <= swiper.maxTranslate())\n      || (pageX > touches.startX && swiper.translate >= swiper.minTranslate())\n    ) {\n      return;\n    }\n  }\n  if (data$$1.isTouchEvent && document.activeElement) {\n    if (e.target === document.activeElement && $(e.target).is(data$$1.formElements)) {\n      data$$1.isMoved = true;\n      swiper.allowClick = false;\n      return;\n    }\n  }\n  if (data$$1.allowTouchCallbacks) {\n    swiper.emit('touchMove', e);\n  }\n  if (e.targetTouches && e.targetTouches.length > 1) return;\n\n  touches.currentX = pageX;\n  touches.currentY = pageY;\n\n  const diffX = touches.currentX - touches.startX;\n  const diffY = touches.currentY - touches.startY;\n  if (swiper.params.threshold && Math.sqrt((diffX ** 2) + (diffY ** 2)) < swiper.params.threshold) return;\n\n  if (typeof data$$1.isScrolling === 'undefined') {\n    let touchAngle;\n    if ((swiper.isHorizontal() && touches.currentY === touches.startY) || (swiper.isVertical() && touches.currentX === touches.startX)) {\n      data$$1.isScrolling = false;\n    } else {\n      // eslint-disable-next-line\n      if ((diffX * diffX) + (diffY * diffY) >= 25) {\n        touchAngle = (Math.atan2(Math.abs(diffY), Math.abs(diffX)) * 180) / Math.PI;\n        data$$1.isScrolling = swiper.isHorizontal() ? touchAngle > params.touchAngle : (90 - touchAngle > params.touchAngle);\n      }\n    }\n  }\n  if (data$$1.isScrolling) {\n    swiper.emit('touchMoveOpposite', e);\n  }\n  if (typeof data$$1.startMoving === 'undefined') {\n    if (touches.currentX !== touches.startX || touches.currentY !== touches.startY) {\n      data$$1.startMoving = true;\n    }\n  }\n  if (data$$1.isScrolling) {\n    data$$1.isTouched = false;\n    return;\n  }\n  if (!data$$1.startMoving) {\n    return;\n  }\n  swiper.allowClick = false;\n  e.preventDefault();\n  if (params.touchMoveStopPropagation && !params.nested) {\n    e.stopPropagation();\n  }\n\n  if (!data$$1.isMoved) {\n    if (params.loop) {\n      swiper.loopFix();\n    }\n    data$$1.startTranslate = swiper.getTranslate();\n    swiper.setTransition(0);\n    if (swiper.animating) {\n      swiper.$wrapperEl.trigger('webkitTransitionEnd transitionend');\n    }\n    data$$1.allowMomentumBounce = false;\n    // Grab Cursor\n    if (params.grabCursor && (swiper.allowSlideNext === true || swiper.allowSlidePrev === true)) {\n      swiper.setGrabCursor(true);\n    }\n    swiper.emit('sliderFirstMove', e);\n  }\n  swiper.emit('sliderMove', e);\n  data$$1.isMoved = true;\n\n  let diff = swiper.isHorizontal() ? diffX : diffY;\n  touches.diff = diff;\n\n  diff *= params.touchRatio;\n  if (rtl) diff = -diff;\n\n  swiper.swipeDirection = diff > 0 ? 'prev' : 'next';\n  data$$1.currentTranslate = diff + data$$1.startTranslate;\n\n  let disableParentSwiper = true;\n  let resistanceRatio = params.resistanceRatio;\n  if (params.touchReleaseOnEdges) {\n    resistanceRatio = 0;\n  }\n  if ((diff > 0 && data$$1.currentTranslate > swiper.minTranslate())) {\n    disableParentSwiper = false;\n    if (params.resistance) data$$1.currentTranslate = (swiper.minTranslate() - 1) + ((-swiper.minTranslate() + data$$1.startTranslate + diff) ** resistanceRatio);\n  } else if (diff < 0 && data$$1.currentTranslate < swiper.maxTranslate()) {\n    disableParentSwiper = false;\n    if (params.resistance) data$$1.currentTranslate = (swiper.maxTranslate() + 1) - ((swiper.maxTranslate() - data$$1.startTranslate - diff) ** resistanceRatio);\n  }\n\n  if (disableParentSwiper) {\n    e.preventedByNestedSwiper = true;\n  }\n\n  // Directions locks\n  if (!swiper.allowSlideNext && swiper.swipeDirection === 'next' && data$$1.currentTranslate < data$$1.startTranslate) {\n    data$$1.currentTranslate = data$$1.startTranslate;\n  }\n  if (!swiper.allowSlidePrev && swiper.swipeDirection === 'prev' && data$$1.currentTranslate > data$$1.startTranslate) {\n    data$$1.currentTranslate = data$$1.startTranslate;\n  }\n\n\n  // Threshold\n  if (params.threshold > 0) {\n    if (Math.abs(diff) > params.threshold || data$$1.allowThresholdMove) {\n      if (!data$$1.allowThresholdMove) {\n        data$$1.allowThresholdMove = true;\n        touches.startX = touches.currentX;\n        touches.startY = touches.currentY;\n        data$$1.currentTranslate = data$$1.startTranslate;\n        touches.diff = swiper.isHorizontal() ? touches.currentX - touches.startX : touches.currentY - touches.startY;\n        return;\n      }\n    } else {\n      data$$1.currentTranslate = data$$1.startTranslate;\n      return;\n    }\n  }\n\n  if (!params.followFinger) return;\n\n  // Update active index in free mode\n  if (params.freeMode || params.watchSlidesProgress || params.watchSlidesVisibility) {\n    swiper.updateActiveIndex();\n    swiper.updateSlidesClasses();\n  }\n  if (params.freeMode) {\n    // Velocity\n    if (data$$1.velocities.length === 0) {\n      data$$1.velocities.push({\n        position: touches[swiper.isHorizontal() ? 'startX' : 'startY'],\n        time: data$$1.touchStartTime,\n      });\n    }\n    data$$1.velocities.push({\n      position: touches[swiper.isHorizontal() ? 'currentX' : 'currentY'],\n      time: Utils.now(),\n    });\n  }\n  // Update progress\n  swiper.updateProgress(data$$1.currentTranslate);\n  // Update translate\n  swiper.setTranslate(data$$1.currentTranslate);\n}\n\nfunction onTouchEnd (event) {\n  const swiper = this;\n  const data$$1 = swiper.touchEventsData;\n\n  const {\n    params, touches, rtlTranslate: rtl, $wrapperEl, slidesGrid, snapGrid,\n  } = swiper;\n  let e = event;\n  if (e.originalEvent) e = e.originalEvent;\n  if (data$$1.allowTouchCallbacks) {\n    swiper.emit('touchEnd', e);\n  }\n  data$$1.allowTouchCallbacks = false;\n  if (!data$$1.isTouched) {\n    if (data$$1.isMoved && params.grabCursor) {\n      swiper.setGrabCursor(false);\n    }\n    data$$1.isMoved = false;\n    data$$1.startMoving = false;\n    return;\n  }\n  // Return Grab Cursor\n  if (params.grabCursor && data$$1.isMoved && data$$1.isTouched && (swiper.allowSlideNext === true || swiper.allowSlidePrev === true)) {\n    swiper.setGrabCursor(false);\n  }\n\n  // Time diff\n  const touchEndTime = Utils.now();\n  const timeDiff = touchEndTime - data$$1.touchStartTime;\n\n  // Tap, doubleTap, Click\n  if (swiper.allowClick) {\n    swiper.updateClickedSlide(e);\n    swiper.emit('tap', e);\n    if (timeDiff < 300 && (touchEndTime - data$$1.lastClickTime) > 300) {\n      if (data$$1.clickTimeout) clearTimeout(data$$1.clickTimeout);\n      data$$1.clickTimeout = Utils.nextTick(() => {\n        if (!swiper || swiper.destroyed) return;\n        swiper.emit('click', e);\n      }, 300);\n    }\n    if (timeDiff < 300 && (touchEndTime - data$$1.lastClickTime) < 300) {\n      if (data$$1.clickTimeout) clearTimeout(data$$1.clickTimeout);\n      swiper.emit('doubleTap', e);\n    }\n  }\n\n  data$$1.lastClickTime = Utils.now();\n  Utils.nextTick(() => {\n    if (!swiper.destroyed) swiper.allowClick = true;\n  });\n\n  if (!data$$1.isTouched || !data$$1.isMoved || !swiper.swipeDirection || touches.diff === 0 || data$$1.currentTranslate === data$$1.startTranslate) {\n    data$$1.isTouched = false;\n    data$$1.isMoved = false;\n    data$$1.startMoving = false;\n    return;\n  }\n  data$$1.isTouched = false;\n  data$$1.isMoved = false;\n  data$$1.startMoving = false;\n\n  let currentPos;\n  if (params.followFinger) {\n    currentPos = rtl ? swiper.translate : -swiper.translate;\n  } else {\n    currentPos = -data$$1.currentTranslate;\n  }\n\n  if (params.freeMode) {\n    if (currentPos < -swiper.minTranslate()) {\n      swiper.slideTo(swiper.activeIndex);\n      return;\n    }\n    if (currentPos > -swiper.maxTranslate()) {\n      if (swiper.slides.length < snapGrid.length) {\n        swiper.slideTo(snapGrid.length - 1);\n      } else {\n        swiper.slideTo(swiper.slides.length - 1);\n      }\n      return;\n    }\n\n    if (params.freeModeMomentum) {\n      if (data$$1.velocities.length > 1) {\n        const lastMoveEvent = data$$1.velocities.pop();\n        const velocityEvent = data$$1.velocities.pop();\n\n        const distance = lastMoveEvent.position - velocityEvent.position;\n        const time = lastMoveEvent.time - velocityEvent.time;\n        swiper.velocity = distance / time;\n        swiper.velocity /= 2;\n        if (Math.abs(swiper.velocity) < params.freeModeMinimumVelocity) {\n          swiper.velocity = 0;\n        }\n        // this implies that the user stopped moving a finger then released.\n        // There would be no events with distance zero, so the last event is stale.\n        if (time > 150 || (Utils.now() - lastMoveEvent.time) > 300) {\n          swiper.velocity = 0;\n        }\n      } else {\n        swiper.velocity = 0;\n      }\n      swiper.velocity *= params.freeModeMomentumVelocityRatio;\n\n      data$$1.velocities.length = 0;\n      let momentumDuration = 1000 * params.freeModeMomentumRatio;\n      const momentumDistance = swiper.velocity * momentumDuration;\n\n      let newPosition = swiper.translate + momentumDistance;\n      if (rtl) newPosition = -newPosition;\n\n      let doBounce = false;\n      let afterBouncePosition;\n      const bounceAmount = Math.abs(swiper.velocity) * 20 * params.freeModeMomentumBounceRatio;\n      let needsLoopFix;\n      if (newPosition < swiper.maxTranslate()) {\n        if (params.freeModeMomentumBounce) {\n          if (newPosition + swiper.maxTranslate() < -bounceAmount) {\n            newPosition = swiper.maxTranslate() - bounceAmount;\n          }\n          afterBouncePosition = swiper.maxTranslate();\n          doBounce = true;\n          data$$1.allowMomentumBounce = true;\n        } else {\n          newPosition = swiper.maxTranslate();\n        }\n        if (params.loop && params.centeredSlides) needsLoopFix = true;\n      } else if (newPosition > swiper.minTranslate()) {\n        if (params.freeModeMomentumBounce) {\n          if (newPosition - swiper.minTranslate() > bounceAmount) {\n            newPosition = swiper.minTranslate() + bounceAmount;\n          }\n          afterBouncePosition = swiper.minTranslate();\n          doBounce = true;\n          data$$1.allowMomentumBounce = true;\n        } else {\n          newPosition = swiper.minTranslate();\n        }\n        if (params.loop && params.centeredSlides) needsLoopFix = true;\n      } else if (params.freeModeSticky) {\n        let nextSlide;\n        for (let j = 0; j < snapGrid.length; j += 1) {\n          if (snapGrid[j] > -newPosition) {\n            nextSlide = j;\n            break;\n          }\n        }\n\n        if (Math.abs(snapGrid[nextSlide] - newPosition) < Math.abs(snapGrid[nextSlide - 1] - newPosition) || swiper.swipeDirection === 'next') {\n          newPosition = snapGrid[nextSlide];\n        } else {\n          newPosition = snapGrid[nextSlide - 1];\n        }\n        newPosition = -newPosition;\n      }\n      if (needsLoopFix) {\n        swiper.once('transitionEnd', () => {\n          swiper.loopFix();\n        });\n      }\n      // Fix duration\n      if (swiper.velocity !== 0) {\n        if (rtl) {\n          momentumDuration = Math.abs((-newPosition - swiper.translate) / swiper.velocity);\n        } else {\n          momentumDuration = Math.abs((newPosition - swiper.translate) / swiper.velocity);\n        }\n      } else if (params.freeModeSticky) {\n        swiper.slideToClosest();\n        return;\n      }\n\n      if (params.freeModeMomentumBounce && doBounce) {\n        swiper.updateProgress(afterBouncePosition);\n        swiper.setTransition(momentumDuration);\n        swiper.setTranslate(newPosition);\n        swiper.transitionStart(true, swiper.swipeDirection);\n        swiper.animating = true;\n        $wrapperEl.transitionEnd(() => {\n          if (!swiper || swiper.destroyed || !data$$1.allowMomentumBounce) return;\n          swiper.emit('momentumBounce');\n\n          swiper.setTransition(params.speed);\n          swiper.setTranslate(afterBouncePosition);\n          $wrapperEl.transitionEnd(() => {\n            if (!swiper || swiper.destroyed) return;\n            swiper.transitionEnd();\n          });\n        });\n      } else if (swiper.velocity) {\n        swiper.updateProgress(newPosition);\n        swiper.setTransition(momentumDuration);\n        swiper.setTranslate(newPosition);\n        swiper.transitionStart(true, swiper.swipeDirection);\n        if (!swiper.animating) {\n          swiper.animating = true;\n          $wrapperEl.transitionEnd(() => {\n            if (!swiper || swiper.destroyed) return;\n            swiper.transitionEnd();\n          });\n        }\n      } else {\n        swiper.updateProgress(newPosition);\n      }\n\n      swiper.updateActiveIndex();\n      swiper.updateSlidesClasses();\n    } else if (params.freeModeSticky) {\n      swiper.slideToClosest();\n      return;\n    }\n\n    if (!params.freeModeMomentum || timeDiff >= params.longSwipesMs) {\n      swiper.updateProgress();\n      swiper.updateActiveIndex();\n      swiper.updateSlidesClasses();\n    }\n    return;\n  }\n\n  // Find current slide\n  let stopIndex = 0;\n  let groupSize = swiper.slidesSizesGrid[0];\n  for (let i = 0; i < slidesGrid.length; i += params.slidesPerGroup) {\n    if (typeof slidesGrid[i + params.slidesPerGroup] !== 'undefined') {\n      if (currentPos >= slidesGrid[i] && currentPos < slidesGrid[i + params.slidesPerGroup]) {\n        stopIndex = i;\n        groupSize = slidesGrid[i + params.slidesPerGroup] - slidesGrid[i];\n      }\n    } else if (currentPos >= slidesGrid[i]) {\n      stopIndex = i;\n      groupSize = slidesGrid[slidesGrid.length - 1] - slidesGrid[slidesGrid.length - 2];\n    }\n  }\n\n  // Find current slide size\n  const ratio = (currentPos - slidesGrid[stopIndex]) / groupSize;\n\n  if (timeDiff > params.longSwipesMs) {\n    // Long touches\n    if (!params.longSwipes) {\n      swiper.slideTo(swiper.activeIndex);\n      return;\n    }\n    if (swiper.swipeDirection === 'next') {\n      if (ratio >= params.longSwipesRatio) swiper.slideTo(stopIndex + params.slidesPerGroup);\n      else swiper.slideTo(stopIndex);\n    }\n    if (swiper.swipeDirection === 'prev') {\n      if (ratio > (1 - params.longSwipesRatio)) swiper.slideTo(stopIndex + params.slidesPerGroup);\n      else swiper.slideTo(stopIndex);\n    }\n  } else {\n    // Short swipes\n    if (!params.shortSwipes) {\n      swiper.slideTo(swiper.activeIndex);\n      return;\n    }\n    if (swiper.swipeDirection === 'next') {\n      swiper.slideTo(stopIndex + params.slidesPerGroup);\n    }\n    if (swiper.swipeDirection === 'prev') {\n      swiper.slideTo(stopIndex);\n    }\n  }\n}\n\nfunction onResize () {\n  const swiper = this;\n\n  const { params, el } = swiper;\n\n  if (el && el.offsetWidth === 0) return;\n\n  // Breakpoints\n  if (params.breakpoints) {\n    swiper.setBreakpoint();\n  }\n\n  // Save locks\n  const { allowSlideNext, allowSlidePrev, snapGrid } = swiper;\n\n  // Disable locks on resize\n  swiper.allowSlideNext = true;\n  swiper.allowSlidePrev = true;\n\n  swiper.updateSize();\n  swiper.updateSlides();\n\n  if (params.freeMode) {\n    const newTranslate = Math.min(Math.max(swiper.translate, swiper.maxTranslate()), swiper.minTranslate());\n    swiper.setTranslate(newTranslate);\n    swiper.updateActiveIndex();\n    swiper.updateSlidesClasses();\n\n    if (params.autoHeight) {\n      swiper.updateAutoHeight();\n    }\n  } else {\n    swiper.updateSlidesClasses();\n    if ((params.slidesPerView === 'auto' || params.slidesPerView > 1) && swiper.isEnd && !swiper.params.centeredSlides) {\n      swiper.slideTo(swiper.slides.length - 1, 0, false, true);\n    } else {\n      swiper.slideTo(swiper.activeIndex, 0, false, true);\n    }\n  }\n  // Return locks after resize\n  swiper.allowSlidePrev = allowSlidePrev;\n  swiper.allowSlideNext = allowSlideNext;\n\n  if (swiper.params.watchOverflow && snapGrid !== swiper.snapGrid) {\n    swiper.checkOverflow();\n  }\n}\n\nfunction onClick (e) {\n  const swiper = this;\n  if (!swiper.allowClick) {\n    if (swiper.params.preventClicks) e.preventDefault();\n    if (swiper.params.preventClicksPropagation && swiper.animating) {\n      e.stopPropagation();\n      e.stopImmediatePropagation();\n    }\n  }\n}\n\nfunction attachEvents() {\n  const swiper = this;\n  const {\n    params, touchEvents, el, wrapperEl,\n  } = swiper;\n\n  {\n    swiper.onTouchStart = onTouchStart.bind(swiper);\n    swiper.onTouchMove = onTouchMove.bind(swiper);\n    swiper.onTouchEnd = onTouchEnd.bind(swiper);\n  }\n\n  swiper.onClick = onClick.bind(swiper);\n\n  const target = params.touchEventsTarget === 'container' ? el : wrapperEl;\n  const capture = !!params.nested;\n\n  // Touch Events\n  {\n    if (!Support.touch && (Support.pointerEvents || Support.prefixedPointerEvents)) {\n      target.addEventListener(touchEvents.start, swiper.onTouchStart, false);\n      document.addEventListener(touchEvents.move, swiper.onTouchMove, capture);\n      document.addEventListener(touchEvents.end, swiper.onTouchEnd, false);\n    } else {\n      if (Support.touch) {\n        const passiveListener = touchEvents.start === 'touchstart' && Support.passiveListener && params.passiveListeners ? { passive: true, capture: false } : false;\n        target.addEventListener(touchEvents.start, swiper.onTouchStart, passiveListener);\n        target.addEventListener(touchEvents.move, swiper.onTouchMove, Support.passiveListener ? { passive: false, capture } : capture);\n        target.addEventListener(touchEvents.end, swiper.onTouchEnd, passiveListener);\n      }\n      if ((params.simulateTouch && !Device.ios && !Device.android) || (params.simulateTouch && !Support.touch && Device.ios)) {\n        target.addEventListener('mousedown', swiper.onTouchStart, false);\n        document.addEventListener('mousemove', swiper.onTouchMove, capture);\n        document.addEventListener('mouseup', swiper.onTouchEnd, false);\n      }\n    }\n    // Prevent Links Clicks\n    if (params.preventClicks || params.preventClicksPropagation) {\n      target.addEventListener('click', swiper.onClick, true);\n    }\n  }\n\n  // Resize handler\n  swiper.on((Device.ios || Device.android ? 'resize orientationchange observerUpdate' : 'resize observerUpdate'), onResize, true);\n}\n\nfunction detachEvents() {\n  const swiper = this;\n\n  const {\n    params, touchEvents, el, wrapperEl,\n  } = swiper;\n\n  const target = params.touchEventsTarget === 'container' ? el : wrapperEl;\n  const capture = !!params.nested;\n\n  // Touch Events\n  {\n    if (!Support.touch && (Support.pointerEvents || Support.prefixedPointerEvents)) {\n      target.removeEventListener(touchEvents.start, swiper.onTouchStart, false);\n      document.removeEventListener(touchEvents.move, swiper.onTouchMove, capture);\n      document.removeEventListener(touchEvents.end, swiper.onTouchEnd, false);\n    } else {\n      if (Support.touch) {\n        const passiveListener = touchEvents.start === 'onTouchStart' && Support.passiveListener && params.passiveListeners ? { passive: true, capture: false } : false;\n        target.removeEventListener(touchEvents.start, swiper.onTouchStart, passiveListener);\n        target.removeEventListener(touchEvents.move, swiper.onTouchMove, capture);\n        target.removeEventListener(touchEvents.end, swiper.onTouchEnd, passiveListener);\n      }\n      if ((params.simulateTouch && !Device.ios && !Device.android) || (params.simulateTouch && !Support.touch && Device.ios)) {\n        target.removeEventListener('mousedown', swiper.onTouchStart, false);\n        document.removeEventListener('mousemove', swiper.onTouchMove, capture);\n        document.removeEventListener('mouseup', swiper.onTouchEnd, false);\n      }\n    }\n    // Prevent Links Clicks\n    if (params.preventClicks || params.preventClicksPropagation) {\n      target.removeEventListener('click', swiper.onClick, true);\n    }\n  }\n\n  // Resize handler\n  swiper.off((Device.ios || Device.android ? 'resize orientationchange observerUpdate' : 'resize observerUpdate'), onResize);\n}\n\nvar events = {\n  attachEvents,\n  detachEvents,\n};\n\nfunction setBreakpoint () {\n  const swiper = this;\n  const {\n    activeIndex, initialized, loopedSlides = 0, params,\n  } = swiper;\n  const breakpoints = params.breakpoints;\n  if (!breakpoints || (breakpoints && Object.keys(breakpoints).length === 0)) return;\n  // Set breakpoint for window width and update parameters\n  const breakpoint = swiper.getBreakpoint(breakpoints);\n  if (breakpoint && swiper.currentBreakpoint !== breakpoint) {\n    const breakPointsParams = breakpoint in breakpoints ? breakpoints[breakpoint] : swiper.originalParams;\n    const needsReLoop = params.loop && (breakPointsParams.slidesPerView !== params.slidesPerView);\n\n    Utils.extend(swiper.params, breakPointsParams);\n\n    Utils.extend(swiper, {\n      allowTouchMove: swiper.params.allowTouchMove,\n      allowSlideNext: swiper.params.allowSlideNext,\n      allowSlidePrev: swiper.params.allowSlidePrev,\n    });\n\n    swiper.currentBreakpoint = breakpoint;\n\n    if (needsReLoop && initialized) {\n      swiper.loopDestroy();\n      swiper.loopCreate();\n      swiper.updateSlides();\n      swiper.slideTo((activeIndex - loopedSlides) + swiper.loopedSlides, 0, false);\n    }\n    swiper.emit('breakpoint', breakPointsParams);\n  }\n}\n\nfunction getBreakpoint (breakpoints) {\n  const swiper = this;\n  // Get breakpoint for window width\n  if (!breakpoints) return undefined;\n  let breakpoint = false;\n  const points = [];\n  Object.keys(breakpoints).forEach((point) => {\n    points.push(point);\n  });\n  points.sort((a, b) => parseInt(a, 10) - parseInt(b, 10));\n  for (let i = 0; i < points.length; i += 1) {\n    const point = points[i];\n    if (swiper.params.breakpointsInverse) {\n      if (point <= window.innerWidth) {\n        breakpoint = point;\n      }\n    } else if (point >= window.innerWidth && !breakpoint) {\n      breakpoint = point;\n    }\n  }\n  return breakpoint || 'max';\n}\n\nvar breakpoints = { setBreakpoint, getBreakpoint };\n\nconst Browser = (function Browser() {\n  function isSafari() {\n    const ua = window.navigator.userAgent.toLowerCase();\n    return (ua.indexOf('safari') >= 0 && ua.indexOf('chrome') < 0 && ua.indexOf('android') < 0);\n  }\n  return {\n    isIE: !!window.navigator.userAgent.match(/Trident/g) || !!window.navigator.userAgent.match(/MSIE/g),\n    isEdge: !!window.navigator.userAgent.match(/Edge/g),\n    isSafari: isSafari(),\n    isUiWebView: /(iPhone|iPod|iPad).*AppleWebKit(?!.*Safari)/i.test(window.navigator.userAgent),\n  };\n}());\n\nfunction addClasses () {\n  const swiper = this;\n  const {\n    classNames, params, rtl, $el,\n  } = swiper;\n  const suffixes = [];\n\n  suffixes.push(params.direction);\n\n  if (params.freeMode) {\n    suffixes.push('free-mode');\n  }\n  if (!Support.flexbox) {\n    suffixes.push('no-flexbox');\n  }\n  if (params.autoHeight) {\n    suffixes.push('autoheight');\n  }\n  if (rtl) {\n    suffixes.push('rtl');\n  }\n  if (params.slidesPerColumn > 1) {\n    suffixes.push('multirow');\n  }\n  if (Device.android) {\n    suffixes.push('android');\n  }\n  if (Device.ios) {\n    suffixes.push('ios');\n  }\n  // WP8 Touch Events Fix\n  if ((Browser.isIE || Browser.isEdge) && (Support.pointerEvents || Support.prefixedPointerEvents)) {\n    suffixes.push(`wp8-${params.direction}`);\n  }\n\n  suffixes.forEach((suffix) => {\n    classNames.push(params.containerModifierClass + suffix);\n  });\n\n  $el.addClass(classNames.join(' '));\n}\n\nfunction removeClasses () {\n  const swiper = this;\n  const { $el, classNames } = swiper;\n\n  $el.removeClass(classNames.join(' '));\n}\n\nvar classes = { addClasses, removeClasses };\n\nfunction loadImage (imageEl, src, srcset, sizes, checkForComplete, callback) {\n  let image;\n  function onReady() {\n    if (callback) callback();\n  }\n  if (!imageEl.complete || !checkForComplete) {\n    if (src) {\n      image = new window.Image();\n      image.onload = onReady;\n      image.onerror = onReady;\n      if (sizes) {\n        image.sizes = sizes;\n      }\n      if (srcset) {\n        image.srcset = srcset;\n      }\n      if (src) {\n        image.src = src;\n      }\n    } else {\n      onReady();\n    }\n  } else {\n    // image already loaded...\n    onReady();\n  }\n}\n\nfunction preloadImages () {\n  const swiper = this;\n  swiper.imagesToLoad = swiper.$el.find('img');\n  function onReady() {\n    if (typeof swiper === 'undefined' || swiper === null || !swiper || swiper.destroyed) return;\n    if (swiper.imagesLoaded !== undefined) swiper.imagesLoaded += 1;\n    if (swiper.imagesLoaded === swiper.imagesToLoad.length) {\n      if (swiper.params.updateOnImagesReady) swiper.update();\n      swiper.emit('imagesReady');\n    }\n  }\n  for (let i = 0; i < swiper.imagesToLoad.length; i += 1) {\n    const imageEl = swiper.imagesToLoad[i];\n    swiper.loadImage(\n      imageEl,\n      imageEl.currentSrc || imageEl.getAttribute('src'),\n      imageEl.srcset || imageEl.getAttribute('srcset'),\n      imageEl.sizes || imageEl.getAttribute('sizes'),\n      true,\n      onReady\n    );\n  }\n}\n\nvar images = {\n  loadImage,\n  preloadImages,\n};\n\nfunction checkOverflow() {\n  const swiper = this;\n  const wasLocked = swiper.isLocked;\n\n  swiper.isLocked = swiper.snapGrid.length === 1;\n  swiper.allowSlideNext = !swiper.isLocked;\n  swiper.allowSlidePrev = !swiper.isLocked;\n\n  // events\n  if (wasLocked !== swiper.isLocked) swiper.emit(swiper.isLocked ? 'lock' : 'unlock');\n\n  if (wasLocked && wasLocked !== swiper.isLocked) {\n    swiper.isEnd = false;\n    swiper.navigation.update();\n  }\n}\n\nvar checkOverflow$1 = { checkOverflow };\n\nvar defaults = {\n  init: true,\n  direction: 'horizontal',\n  touchEventsTarget: 'container',\n  initialSlide: 0,\n  speed: 300,\n  //\n  preventInteractionOnTransition: false,\n\n  // To support iOS's swipe-to-go-back gesture (when being used in-app, with UIWebView).\n  edgeSwipeDetection: false,\n  edgeSwipeThreshold: 20,\n\n  // Free mode\n  freeMode: false,\n  freeModeMomentum: true,\n  freeModeMomentumRatio: 1,\n  freeModeMomentumBounce: true,\n  freeModeMomentumBounceRatio: 1,\n  freeModeMomentumVelocityRatio: 1,\n  freeModeSticky: false,\n  freeModeMinimumVelocity: 0.02,\n\n  // Autoheight\n  autoHeight: false,\n\n  // Set wrapper width\n  setWrapperSize: false,\n\n  // Virtual Translate\n  virtualTranslate: false,\n\n  // Effects\n  effect: 'slide', // 'slide' or 'fade' or 'cube' or 'coverflow' or 'flip'\n\n  // Breakpoints\n  breakpoints: undefined,\n  breakpointsInverse: false,\n\n  // Slides grid\n  spaceBetween: 0,\n  slidesPerView: 1,\n  slidesPerColumn: 1,\n  slidesPerColumnFill: 'column',\n  slidesPerGroup: 1,\n  centeredSlides: false,\n  slidesOffsetBefore: 0, // in px\n  slidesOffsetAfter: 0, // in px\n  normalizeSlideIndex: true,\n  centerInsufficientSlides: false,\n\n  // Disable swiper and hide navigation when container not overflow\n  watchOverflow: false,\n\n  // Round length\n  roundLengths: false,\n\n  // Touches\n  touchRatio: 1,\n  touchAngle: 45,\n  simulateTouch: true,\n  shortSwipes: true,\n  longSwipes: true,\n  longSwipesRatio: 0.5,\n  longSwipesMs: 300,\n  followFinger: true,\n  allowTouchMove: true,\n  threshold: 0,\n  touchMoveStopPropagation: true,\n  touchStartPreventDefault: true,\n  touchReleaseOnEdges: false,\n\n  // Unique Navigation Elements\n  uniqueNavElements: true,\n\n  // Resistance\n  resistance: true,\n  resistanceRatio: 0.85,\n\n  // Progress\n  watchSlidesProgress: false,\n  watchSlidesVisibility: false,\n\n  // Cursor\n  grabCursor: false,\n\n  // Clicks\n  preventClicks: true,\n  preventClicksPropagation: true,\n  slideToClickedSlide: false,\n\n  // Images\n  preloadImages: true,\n  updateOnImagesReady: true,\n\n  // loop\n  loop: false,\n  loopAdditionalSlides: 0,\n  loopedSlides: null,\n  loopFillGroupWithBlank: false,\n\n  // Swiping/no swiping\n  allowSlidePrev: true,\n  allowSlideNext: true,\n  swipeHandler: null, // '.swipe-handler',\n  noSwiping: true,\n  noSwipingClass: 'swiper-no-swiping',\n  noSwipingSelector: null,\n\n  // Passive Listeners\n  passiveListeners: true,\n\n  // NS\n  containerModifierClass: 'swiper-container-', // NEW\n  slideClass: 'swiper-slide',\n  slideBlankClass: 'swiper-slide-invisible-blank',\n  slideActiveClass: 'swiper-slide-active',\n  slideDuplicateActiveClass: 'swiper-slide-duplicate-active',\n  slideVisibleClass: 'swiper-slide-visible',\n  slideDuplicateClass: 'swiper-slide-duplicate',\n  slideNextClass: 'swiper-slide-next',\n  slideDuplicateNextClass: 'swiper-slide-duplicate-next',\n  slidePrevClass: 'swiper-slide-prev',\n  slideDuplicatePrevClass: 'swiper-slide-duplicate-prev',\n  wrapperClass: 'swiper-wrapper',\n\n  // Callbacks\n  runCallbacksOnInit: true,\n};\n\nconst prototypes = {\n  update,\n  translate,\n  transition: transition$1,\n  slide,\n  loop,\n  grabCursor,\n  manipulation,\n  events,\n  breakpoints,\n  checkOverflow: checkOverflow$1,\n  classes,\n  images,\n};\n\nconst extendedDefaults = {};\n\nclass Swiper extends SwiperClass {\n  constructor(...args) {\n    let el;\n    let params;\n    if (args.length === 1 && args[0].constructor && args[0].constructor === Object) {\n      params = args[0];\n    } else {\n      [el, params] = args;\n    }\n    if (!params) params = {};\n\n    params = Utils.extend({}, params);\n    if (el && !params.el) params.el = el;\n\n    super(params);\n\n    Object.keys(prototypes).forEach((prototypeGroup) => {\n      Object.keys(prototypes[prototypeGroup]).forEach((protoMethod) => {\n        if (!Swiper.prototype[protoMethod]) {\n          Swiper.prototype[protoMethod] = prototypes[prototypeGroup][protoMethod];\n        }\n      });\n    });\n\n    // Swiper Instance\n    const swiper = this;\n    if (typeof swiper.modules === 'undefined') {\n      swiper.modules = {};\n    }\n    Object.keys(swiper.modules).forEach((moduleName) => {\n      const module = swiper.modules[moduleName];\n      if (module.params) {\n        const moduleParamName = Object.keys(module.params)[0];\n        const moduleParams = module.params[moduleParamName];\n        if (typeof moduleParams !== 'object' || moduleParams === null) return;\n        if (!(moduleParamName in params && 'enabled' in moduleParams)) return;\n        if (params[moduleParamName] === true) {\n          params[moduleParamName] = { enabled: true };\n        }\n        if (\n          typeof params[moduleParamName] === 'object'\n          && !('enabled' in params[moduleParamName])\n        ) {\n          params[moduleParamName].enabled = true;\n        }\n        if (!params[moduleParamName]) params[moduleParamName] = { enabled: false };\n      }\n    });\n\n    // Extend defaults with modules params\n    const swiperParams = Utils.extend({}, defaults);\n    swiper.useModulesParams(swiperParams);\n\n    // Extend defaults with passed params\n    swiper.params = Utils.extend({}, swiperParams, extendedDefaults, params);\n    swiper.originalParams = Utils.extend({}, swiper.params);\n    swiper.passedParams = Utils.extend({}, params);\n\n    // Save Dom lib\n    swiper.$ = $;\n\n    // Find el\n    const $el = $(swiper.params.el);\n    el = $el[0];\n\n    if (!el) {\n      return undefined;\n    }\n\n    if ($el.length > 1) {\n      const swipers = [];\n      $el.each((index$$1, containerEl) => {\n        const newParams = Utils.extend({}, params, { el: containerEl });\n        swipers.push(new Swiper(newParams));\n      });\n      return swipers;\n    }\n\n    el.swiper = swiper;\n    $el.data('swiper', swiper);\n\n    // Find Wrapper\n    const $wrapperEl = $el.children(`.${swiper.params.wrapperClass}`);\n\n    // Extend Swiper\n    Utils.extend(swiper, {\n      $el,\n      el,\n      $wrapperEl,\n      wrapperEl: $wrapperEl[0],\n\n      // Classes\n      classNames: [],\n\n      // Slides\n      slides: $(),\n      slidesGrid: [],\n      snapGrid: [],\n      slidesSizesGrid: [],\n\n      // isDirection\n      isHorizontal() {\n        return swiper.params.direction === 'horizontal';\n      },\n      isVertical() {\n        return swiper.params.direction === 'vertical';\n      },\n      // RTL\n      rtl: (el.dir.toLowerCase() === 'rtl' || $el.css('direction') === 'rtl'),\n      rtlTranslate: swiper.params.direction === 'horizontal' && (el.dir.toLowerCase() === 'rtl' || $el.css('direction') === 'rtl'),\n      wrongRTL: $wrapperEl.css('display') === '-webkit-box',\n\n      // Indexes\n      activeIndex: 0,\n      realIndex: 0,\n\n      //\n      isBeginning: true,\n      isEnd: false,\n\n      // Props\n      translate: 0,\n      previousTranslate: 0,\n      progress: 0,\n      velocity: 0,\n      animating: false,\n\n      // Locks\n      allowSlideNext: swiper.params.allowSlideNext,\n      allowSlidePrev: swiper.params.allowSlidePrev,\n\n      // Touch Events\n      touchEvents: (function touchEvents() {\n        const touch = ['touchstart', 'touchmove', 'touchend'];\n        let desktop = ['mousedown', 'mousemove', 'mouseup'];\n        if (Support.pointerEvents) {\n          desktop = ['pointerdown', 'pointermove', 'pointerup'];\n        } else if (Support.prefixedPointerEvents) {\n          desktop = ['MSPointerDown', 'MSPointerMove', 'MSPointerUp'];\n        }\n        swiper.touchEventsTouch = {\n          start: touch[0],\n          move: touch[1],\n          end: touch[2],\n        };\n        swiper.touchEventsDesktop = {\n          start: desktop[0],\n          move: desktop[1],\n          end: desktop[2],\n        };\n        return Support.touch || !swiper.params.simulateTouch ? swiper.touchEventsTouch : swiper.touchEventsDesktop;\n      }()),\n      touchEventsData: {\n        isTouched: undefined,\n        isMoved: undefined,\n        allowTouchCallbacks: undefined,\n        touchStartTime: undefined,\n        isScrolling: undefined,\n        currentTranslate: undefined,\n        startTranslate: undefined,\n        allowThresholdMove: undefined,\n        // Form elements to match\n        formElements: 'input, select, option, textarea, button, video',\n        // Last click time\n        lastClickTime: Utils.now(),\n        clickTimeout: undefined,\n        // Velocities\n        velocities: [],\n        allowMomentumBounce: undefined,\n        isTouchEvent: undefined,\n        startMoving: undefined,\n      },\n\n      // Clicks\n      allowClick: true,\n\n      // Touches\n      allowTouchMove: swiper.params.allowTouchMove,\n\n      touches: {\n        startX: 0,\n        startY: 0,\n        currentX: 0,\n        currentY: 0,\n        diff: 0,\n      },\n\n      // Images\n      imagesToLoad: [],\n      imagesLoaded: 0,\n\n    });\n\n    // Install Modules\n    swiper.useModules();\n\n    // Init\n    if (swiper.params.init) {\n      swiper.init();\n    }\n\n    // Return app instance\n    return swiper;\n  }\n\n  slidesPerViewDynamic() {\n    const swiper = this;\n    const {\n      params, slides, slidesGrid, size: swiperSize, activeIndex,\n    } = swiper;\n    let spv = 1;\n    if (params.centeredSlides) {\n      let slideSize = slides[activeIndex].swiperSlideSize;\n      let breakLoop;\n      for (let i = activeIndex + 1; i < slides.length; i += 1) {\n        if (slides[i] && !breakLoop) {\n          slideSize += slides[i].swiperSlideSize;\n          spv += 1;\n          if (slideSize > swiperSize) breakLoop = true;\n        }\n      }\n      for (let i = activeIndex - 1; i >= 0; i -= 1) {\n        if (slides[i] && !breakLoop) {\n          slideSize += slides[i].swiperSlideSize;\n          spv += 1;\n          if (slideSize > swiperSize) breakLoop = true;\n        }\n      }\n    } else {\n      for (let i = activeIndex + 1; i < slides.length; i += 1) {\n        if (slidesGrid[i] - slidesGrid[activeIndex] < swiperSize) {\n          spv += 1;\n        }\n      }\n    }\n    return spv;\n  }\n\n  update() {\n    const swiper = this;\n    if (!swiper || swiper.destroyed) return;\n    const { snapGrid, params } = swiper;\n    // Breakpoints\n    if (params.breakpoints) {\n      swiper.setBreakpoint();\n    }\n    swiper.updateSize();\n    swiper.updateSlides();\n    swiper.updateProgress();\n    swiper.updateSlidesClasses();\n\n    function setTranslate() {\n      const translateValue = swiper.rtlTranslate ? swiper.translate * -1 : swiper.translate;\n      const newTranslate = Math.min(Math.max(translateValue, swiper.maxTranslate()), swiper.minTranslate());\n      swiper.setTranslate(newTranslate);\n      swiper.updateActiveIndex();\n      swiper.updateSlidesClasses();\n    }\n    let translated;\n    if (swiper.params.freeMode) {\n      setTranslate();\n      if (swiper.params.autoHeight) {\n        swiper.updateAutoHeight();\n      }\n    } else {\n      if ((swiper.params.slidesPerView === 'auto' || swiper.params.slidesPerView > 1) && swiper.isEnd && !swiper.params.centeredSlides) {\n        translated = swiper.slideTo(swiper.slides.length - 1, 0, false, true);\n      } else {\n        translated = swiper.slideTo(swiper.activeIndex, 0, false, true);\n      }\n      if (!translated) {\n        setTranslate();\n      }\n    }\n    if (params.watchOverflow && snapGrid !== swiper.snapGrid) {\n      swiper.checkOverflow();\n    }\n    swiper.emit('update');\n  }\n\n  init() {\n    const swiper = this;\n    if (swiper.initialized) return;\n\n    swiper.emit('beforeInit');\n\n    // Set breakpoint\n    if (swiper.params.breakpoints) {\n      swiper.setBreakpoint();\n    }\n\n    // Add Classes\n    swiper.addClasses();\n\n    // Create loop\n    if (swiper.params.loop) {\n      swiper.loopCreate();\n    }\n\n    // Update size\n    swiper.updateSize();\n\n    // Update slides\n    swiper.updateSlides();\n\n    if (swiper.params.watchOverflow) {\n      swiper.checkOverflow();\n    }\n\n    // Set Grab Cursor\n    if (swiper.params.grabCursor) {\n      swiper.setGrabCursor();\n    }\n\n    if (swiper.params.preloadImages) {\n      swiper.preloadImages();\n    }\n\n    // Slide To Initial Slide\n    if (swiper.params.loop) {\n      swiper.slideTo(swiper.params.initialSlide + swiper.loopedSlides, 0, swiper.params.runCallbacksOnInit);\n    } else {\n      swiper.slideTo(swiper.params.initialSlide, 0, swiper.params.runCallbacksOnInit);\n    }\n\n    // Attach events\n    swiper.attachEvents();\n\n    // Init Flag\n    swiper.initialized = true;\n\n    // Emit\n    swiper.emit('init');\n  }\n\n  destroy(deleteInstance = true, cleanStyles = true) {\n    const swiper = this;\n    const {\n      params, $el, $wrapperEl, slides,\n    } = swiper;\n\n    if (typeof swiper.params === 'undefined' || swiper.destroyed) {\n      return null;\n    }\n\n    swiper.emit('beforeDestroy');\n\n    // Init Flag\n    swiper.initialized = false;\n\n    // Detach events\n    swiper.detachEvents();\n\n    // Destroy loop\n    if (params.loop) {\n      swiper.loopDestroy();\n    }\n\n    // Cleanup styles\n    if (cleanStyles) {\n      swiper.removeClasses();\n      $el.removeAttr('style');\n      $wrapperEl.removeAttr('style');\n      if (slides && slides.length) {\n        slides\n          .removeClass([\n            params.slideVisibleClass,\n            params.slideActiveClass,\n            params.slideNextClass,\n            params.slidePrevClass,\n          ].join(' '))\n          .removeAttr('style')\n          .removeAttr('data-swiper-slide-index')\n          .removeAttr('data-swiper-column')\n          .removeAttr('data-swiper-row');\n      }\n    }\n\n    swiper.emit('destroy');\n\n    // Detach emitter events\n    Object.keys(swiper.eventsListeners).forEach((eventName) => {\n      swiper.off(eventName);\n    });\n\n    if (deleteInstance !== false) {\n      swiper.$el[0].swiper = null;\n      swiper.$el.data('swiper', null);\n      Utils.deleteProps(swiper);\n    }\n    swiper.destroyed = true;\n\n    return null;\n  }\n\n  static extendDefaults(newDefaults) {\n    Utils.extend(extendedDefaults, newDefaults);\n  }\n\n  static get extendedDefaults() {\n    return extendedDefaults;\n  }\n\n  static get defaults() {\n    return defaults;\n  }\n\n  static get Class() {\n    return SwiperClass;\n  }\n\n  static get $() {\n    return $;\n  }\n}\n\nvar Device$1 = {\n  name: 'device',\n  proto: {\n    device: Device,\n  },\n  static: {\n    device: Device,\n  },\n};\n\nvar Support$1 = {\n  name: 'support',\n  proto: {\n    support: Support,\n  },\n  static: {\n    support: Support,\n  },\n};\n\nvar Browser$1 = {\n  name: 'browser',\n  proto: {\n    browser: Browser,\n  },\n  static: {\n    browser: Browser,\n  },\n};\n\nvar Resize = {\n  name: 'resize',\n  create() {\n    const swiper = this;\n    Utils.extend(swiper, {\n      resize: {\n        resizeHandler() {\n          if (!swiper || swiper.destroyed || !swiper.initialized) return;\n          swiper.emit('beforeResize');\n          swiper.emit('resize');\n        },\n        orientationChangeHandler() {\n          if (!swiper || swiper.destroyed || !swiper.initialized) return;\n          swiper.emit('orientationchange');\n        },\n      },\n    });\n  },\n  on: {\n    init() {\n      const swiper = this;\n      // Emit resize\n      window.addEventListener('resize', swiper.resize.resizeHandler);\n\n      // Emit orientationchange\n      window.addEventListener('orientationchange', swiper.resize.orientationChangeHandler);\n    },\n    destroy() {\n      const swiper = this;\n      window.removeEventListener('resize', swiper.resize.resizeHandler);\n      window.removeEventListener('orientationchange', swiper.resize.orientationChangeHandler);\n    },\n  },\n};\n\nconst Observer = {\n  func: window.MutationObserver || window.WebkitMutationObserver,\n  attach(target, options = {}) {\n    const swiper = this;\n\n    const ObserverFunc = Observer.func;\n    const observer = new ObserverFunc((mutations) => {\n      // The observerUpdate event should only be triggered\n      // once despite the number of mutations.  Additional\n      // triggers are redundant and are very costly\n      if (mutations.length === 1) {\n        swiper.emit('observerUpdate', mutations[0]);\n        return;\n      }\n      const observerUpdate = function observerUpdate() {\n        swiper.emit('observerUpdate', mutations[0]);\n      };\n\n      if (window.requestAnimationFrame) {\n        window.requestAnimationFrame(observerUpdate);\n      } else {\n        window.setTimeout(observerUpdate, 0);\n      }\n    });\n\n    observer.observe(target, {\n      attributes: typeof options.attributes === 'undefined' ? true : options.attributes,\n      childList: typeof options.childList === 'undefined' ? true : options.childList,\n      characterData: typeof options.characterData === 'undefined' ? true : options.characterData,\n    });\n\n    swiper.observer.observers.push(observer);\n  },\n  init() {\n    const swiper = this;\n    if (!Support.observer || !swiper.params.observer) return;\n    if (swiper.params.observeParents) {\n      const containerParents = swiper.$el.parents();\n      for (let i = 0; i < containerParents.length; i += 1) {\n        swiper.observer.attach(containerParents[i]);\n      }\n    }\n    // Observe container\n    swiper.observer.attach(swiper.$el[0], { childList: false });\n\n    // Observe wrapper\n    swiper.observer.attach(swiper.$wrapperEl[0], { attributes: false });\n  },\n  destroy() {\n    const swiper = this;\n    swiper.observer.observers.forEach((observer) => {\n      observer.disconnect();\n    });\n    swiper.observer.observers = [];\n  },\n};\n\nvar Observer$1 = {\n  name: 'observer',\n  params: {\n    observer: false,\n    observeParents: false,\n  },\n  create() {\n    const swiper = this;\n    Utils.extend(swiper, {\n      observer: {\n        init: Observer.init.bind(swiper),\n        attach: Observer.attach.bind(swiper),\n        destroy: Observer.destroy.bind(swiper),\n        observers: [],\n      },\n    });\n  },\n  on: {\n    init() {\n      const swiper = this;\n      swiper.observer.init();\n    },\n    destroy() {\n      const swiper = this;\n      swiper.observer.destroy();\n    },\n  },\n};\n\nconst Virtual = {\n  update(force) {\n    const swiper = this;\n    const { slidesPerView, slidesPerGroup, centeredSlides } = swiper.params;\n    const { addSlidesBefore, addSlidesAfter } = swiper.params.virtual;\n    const {\n      from: previousFrom,\n      to: previousTo,\n      slides,\n      slidesGrid: previousSlidesGrid,\n      renderSlide,\n      offset: previousOffset,\n    } = swiper.virtual;\n    swiper.updateActiveIndex();\n    const activeIndex = swiper.activeIndex || 0;\n\n    let offsetProp;\n    if (swiper.rtlTranslate) offsetProp = 'right';\n    else offsetProp = swiper.isHorizontal() ? 'left' : 'top';\n\n    let slidesAfter;\n    let slidesBefore;\n    if (centeredSlides) {\n      slidesAfter = Math.floor(slidesPerView / 2) + slidesPerGroup + addSlidesBefore;\n      slidesBefore = Math.floor(slidesPerView / 2) + slidesPerGroup + addSlidesAfter;\n    } else {\n      slidesAfter = slidesPerView + (slidesPerGroup - 1) + addSlidesBefore;\n      slidesBefore = slidesPerGroup + addSlidesAfter;\n    }\n    const from = Math.max((activeIndex || 0) - slidesBefore, 0);\n    const to = Math.min((activeIndex || 0) + slidesAfter, slides.length - 1);\n    const offset$$1 = (swiper.slidesGrid[from] || 0) - (swiper.slidesGrid[0] || 0);\n\n    Utils.extend(swiper.virtual, {\n      from,\n      to,\n      offset: offset$$1,\n      slidesGrid: swiper.slidesGrid,\n    });\n\n    function onRendered() {\n      swiper.updateSlides();\n      swiper.updateProgress();\n      swiper.updateSlidesClasses();\n      if (swiper.lazy && swiper.params.lazy.enabled) {\n        swiper.lazy.load();\n      }\n    }\n\n    if (previousFrom === from && previousTo === to && !force) {\n      if (swiper.slidesGrid !== previousSlidesGrid && offset$$1 !== previousOffset) {\n        swiper.slides.css(offsetProp, `${offset$$1}px`);\n      }\n      swiper.updateProgress();\n      return;\n    }\n    if (swiper.params.virtual.renderExternal) {\n      swiper.params.virtual.renderExternal.call(swiper, {\n        offset: offset$$1,\n        from,\n        to,\n        slides: (function getSlides() {\n          const slidesToRender = [];\n          for (let i = from; i <= to; i += 1) {\n            slidesToRender.push(slides[i]);\n          }\n          return slidesToRender;\n        }()),\n      });\n      onRendered();\n      return;\n    }\n    const prependIndexes = [];\n    const appendIndexes = [];\n    if (force) {\n      swiper.$wrapperEl.find(`.${swiper.params.slideClass}`).remove();\n    } else {\n      for (let i = previousFrom; i <= previousTo; i += 1) {\n        if (i < from || i > to) {\n          swiper.$wrapperEl.find(`.${swiper.params.slideClass}[data-swiper-slide-index=\"${i}\"]`).remove();\n        }\n      }\n    }\n    for (let i = 0; i < slides.length; i += 1) {\n      if (i >= from && i <= to) {\n        if (typeof previousTo === 'undefined' || force) {\n          appendIndexes.push(i);\n        } else {\n          if (i > previousTo) appendIndexes.push(i);\n          if (i < previousFrom) prependIndexes.push(i);\n        }\n      }\n    }\n    appendIndexes.forEach((index$$1) => {\n      swiper.$wrapperEl.append(renderSlide(slides[index$$1], index$$1));\n    });\n    prependIndexes.sort((a, b) => a < b).forEach((index$$1) => {\n      swiper.$wrapperEl.prepend(renderSlide(slides[index$$1], index$$1));\n    });\n    swiper.$wrapperEl.children('.swiper-slide').css(offsetProp, `${offset$$1}px`);\n    onRendered();\n  },\n  renderSlide(slide, index$$1) {\n    const swiper = this;\n    const params = swiper.params.virtual;\n    if (params.cache && swiper.virtual.cache[index$$1]) {\n      return swiper.virtual.cache[index$$1];\n    }\n    const $slideEl = params.renderSlide\n      ? $(params.renderSlide.call(swiper, slide, index$$1))\n      : $(`<div class=\"${swiper.params.slideClass}\" data-swiper-slide-index=\"${index$$1}\">${slide}</div>`);\n    if (!$slideEl.attr('data-swiper-slide-index')) $slideEl.attr('data-swiper-slide-index', index$$1);\n    if (params.cache) swiper.virtual.cache[index$$1] = $slideEl;\n    return $slideEl;\n  },\n  appendSlide(slide) {\n    const swiper = this;\n    swiper.virtual.slides.push(slide);\n    swiper.virtual.update(true);\n  },\n  prependSlide(slide) {\n    const swiper = this;\n    swiper.virtual.slides.unshift(slide);\n    if (swiper.params.virtual.cache) {\n      const cache = swiper.virtual.cache;\n      const newCache = {};\n      Object.keys(cache).forEach((cachedIndex) => {\n        newCache[cachedIndex + 1] = cache[cachedIndex];\n      });\n      swiper.virtual.cache = newCache;\n    }\n    swiper.virtual.update(true);\n    swiper.slideNext(0);\n  },\n};\n\nvar Virtual$1 = {\n  name: 'virtual',\n  params: {\n    virtual: {\n      enabled: false,\n      slides: [],\n      cache: true,\n      renderSlide: null,\n      renderExternal: null,\n      addSlidesBefore: 0,\n      addSlidesAfter: 0,\n    },\n  },\n  create() {\n    const swiper = this;\n    Utils.extend(swiper, {\n      virtual: {\n        update: Virtual.update.bind(swiper),\n        appendSlide: Virtual.appendSlide.bind(swiper),\n        prependSlide: Virtual.prependSlide.bind(swiper),\n        renderSlide: Virtual.renderSlide.bind(swiper),\n        slides: swiper.params.virtual.slides,\n        cache: {},\n      },\n    });\n  },\n  on: {\n    beforeInit() {\n      const swiper = this;\n      if (!swiper.params.virtual.enabled) return;\n      swiper.classNames.push(`${swiper.params.containerModifierClass}virtual`);\n      const overwriteParams = {\n        watchSlidesProgress: true,\n      };\n      Utils.extend(swiper.params, overwriteParams);\n      Utils.extend(swiper.originalParams, overwriteParams);\n\n      swiper.virtual.update();\n    },\n    setTranslate() {\n      const swiper = this;\n      if (!swiper.params.virtual.enabled) return;\n      swiper.virtual.update();\n    },\n  },\n};\n\nconst Keyboard = {\n  handle(event) {\n    const swiper = this;\n    const { rtlTranslate: rtl } = swiper;\n    let e = event;\n    if (e.originalEvent) e = e.originalEvent; // jquery fix\n    const kc = e.keyCode || e.charCode;\n    // Directions locks\n    if (!swiper.allowSlideNext && ((swiper.isHorizontal() && kc === 39) || (swiper.isVertical() && kc === 40))) {\n      return false;\n    }\n    if (!swiper.allowSlidePrev && ((swiper.isHorizontal() && kc === 37) || (swiper.isVertical() && kc === 38))) {\n      return false;\n    }\n    if (e.shiftKey || e.altKey || e.ctrlKey || e.metaKey) {\n      return undefined;\n    }\n    if (document.activeElement && document.activeElement.nodeName && (document.activeElement.nodeName.toLowerCase() === 'input' || document.activeElement.nodeName.toLowerCase() === 'textarea')) {\n      return undefined;\n    }\n    if (swiper.params.keyboard.onlyInViewport && (kc === 37 || kc === 39 || kc === 38 || kc === 40)) {\n      let inView = false;\n      // Check that swiper should be inside of visible area of window\n      if (swiper.$el.parents(`.${swiper.params.slideClass}`).length > 0 && swiper.$el.parents(`.${swiper.params.slideActiveClass}`).length === 0) {\n        return undefined;\n      }\n      const windowWidth = window.innerWidth;\n      const windowHeight = window.innerHeight;\n      const swiperOffset = swiper.$el.offset();\n      if (rtl) swiperOffset.left -= swiper.$el[0].scrollLeft;\n      const swiperCoord = [\n        [swiperOffset.left, swiperOffset.top],\n        [swiperOffset.left + swiper.width, swiperOffset.top],\n        [swiperOffset.left, swiperOffset.top + swiper.height],\n        [swiperOffset.left + swiper.width, swiperOffset.top + swiper.height],\n      ];\n      for (let i = 0; i < swiperCoord.length; i += 1) {\n        const point = swiperCoord[i];\n        if (\n          point[0] >= 0 && point[0] <= windowWidth\n          && point[1] >= 0 && point[1] <= windowHeight\n        ) {\n          inView = true;\n        }\n      }\n      if (!inView) return undefined;\n    }\n    if (swiper.isHorizontal()) {\n      if (kc === 37 || kc === 39) {\n        if (e.preventDefault) e.preventDefault();\n        else e.returnValue = false;\n      }\n      if ((kc === 39 && !rtl) || (kc === 37 && rtl)) swiper.slideNext();\n      if ((kc === 37 && !rtl) || (kc === 39 && rtl)) swiper.slidePrev();\n    } else {\n      if (kc === 38 || kc === 40) {\n        if (e.preventDefault) e.preventDefault();\n        else e.returnValue = false;\n      }\n      if (kc === 40) swiper.slideNext();\n      if (kc === 38) swiper.slidePrev();\n    }\n    swiper.emit('keyPress', kc);\n    return undefined;\n  },\n  enable() {\n    const swiper = this;\n    if (swiper.keyboard.enabled) return;\n    $(document).on('keydown', swiper.keyboard.handle);\n    swiper.keyboard.enabled = true;\n  },\n  disable() {\n    const swiper = this;\n    if (!swiper.keyboard.enabled) return;\n    $(document).off('keydown', swiper.keyboard.handle);\n    swiper.keyboard.enabled = false;\n  },\n};\n\nvar Keyboard$1 = {\n  name: 'keyboard',\n  params: {\n    keyboard: {\n      enabled: false,\n      onlyInViewport: true,\n    },\n  },\n  create() {\n    const swiper = this;\n    Utils.extend(swiper, {\n      keyboard: {\n        enabled: false,\n        enable: Keyboard.enable.bind(swiper),\n        disable: Keyboard.disable.bind(swiper),\n        handle: Keyboard.handle.bind(swiper),\n      },\n    });\n  },\n  on: {\n    init() {\n      const swiper = this;\n      if (swiper.params.keyboard.enabled) {\n        swiper.keyboard.enable();\n      }\n    },\n    destroy() {\n      const swiper = this;\n      if (swiper.keyboard.enabled) {\n        swiper.keyboard.disable();\n      }\n    },\n  },\n};\n\nfunction isEventSupported() {\n  const eventName = 'onwheel';\n  let isSupported = eventName in document;\n\n  if (!isSupported) {\n    const element = document.createElement('div');\n    element.setAttribute(eventName, 'return;');\n    isSupported = typeof element[eventName] === 'function';\n  }\n\n  if (!isSupported\n    && document.implementation\n    && document.implementation.hasFeature\n    // always returns true in newer browsers as per the standard.\n    // @see http://dom.spec.whatwg.org/#dom-domimplementation-hasfeature\n    && document.implementation.hasFeature('', '') !== true\n  ) {\n    // This is the only way to test support for the `wheel` event in IE9+.\n    isSupported = document.implementation.hasFeature('Events.wheel', '3.0');\n  }\n\n  return isSupported;\n}\nconst Mousewheel = {\n  lastScrollTime: Utils.now(),\n  event: (function getEvent() {\n    if (window.navigator.userAgent.indexOf('firefox') > -1) return 'DOMMouseScroll';\n    return isEventSupported() ? 'wheel' : 'mousewheel';\n  }()),\n  normalize(e) {\n    // Reasonable defaults\n    const PIXEL_STEP = 10;\n    const LINE_HEIGHT = 40;\n    const PAGE_HEIGHT = 800;\n\n    let sX = 0;\n    let sY = 0; // spinX, spinY\n    let pX = 0;\n    let pY = 0; // pixelX, pixelY\n\n    // Legacy\n    if ('detail' in e) {\n      sY = e.detail;\n    }\n    if ('wheelDelta' in e) {\n      sY = -e.wheelDelta / 120;\n    }\n    if ('wheelDeltaY' in e) {\n      sY = -e.wheelDeltaY / 120;\n    }\n    if ('wheelDeltaX' in e) {\n      sX = -e.wheelDeltaX / 120;\n    }\n\n    // side scrolling on FF with DOMMouseScroll\n    if ('axis' in e && e.axis === e.HORIZONTAL_AXIS) {\n      sX = sY;\n      sY = 0;\n    }\n\n    pX = sX * PIXEL_STEP;\n    pY = sY * PIXEL_STEP;\n\n    if ('deltaY' in e) {\n      pY = e.deltaY;\n    }\n    if ('deltaX' in e) {\n      pX = e.deltaX;\n    }\n\n    if ((pX || pY) && e.deltaMode) {\n      if (e.deltaMode === 1) { // delta in LINE units\n        pX *= LINE_HEIGHT;\n        pY *= LINE_HEIGHT;\n      } else { // delta in PAGE units\n        pX *= PAGE_HEIGHT;\n        pY *= PAGE_HEIGHT;\n      }\n    }\n\n    // Fall-back if spin cannot be determined\n    if (pX && !sX) {\n      sX = (pX < 1) ? -1 : 1;\n    }\n    if (pY && !sY) {\n      sY = (pY < 1) ? -1 : 1;\n    }\n\n    return {\n      spinX: sX,\n      spinY: sY,\n      pixelX: pX,\n      pixelY: pY,\n    };\n  },\n  handleMouseEnter() {\n    const swiper = this;\n    swiper.mouseEntered = true;\n  },\n  handleMouseLeave() {\n    const swiper = this;\n    swiper.mouseEntered = false;\n  },\n  handle(event) {\n    let e = event;\n    const swiper = this;\n    const params = swiper.params.mousewheel;\n\n    if (!swiper.mouseEntered && !params.releaseOnEdges) return true;\n\n    if (e.originalEvent) e = e.originalEvent; // jquery fix\n    let delta = 0;\n    const rtlFactor = swiper.rtlTranslate ? -1 : 1;\n\n    const data$$1 = Mousewheel.normalize(e);\n\n    if (params.forceToAxis) {\n      if (swiper.isHorizontal()) {\n        if (Math.abs(data$$1.pixelX) > Math.abs(data$$1.pixelY)) delta = data$$1.pixelX * rtlFactor;\n        else return true;\n      } else if (Math.abs(data$$1.pixelY) > Math.abs(data$$1.pixelX)) delta = data$$1.pixelY;\n      else return true;\n    } else {\n      delta = Math.abs(data$$1.pixelX) > Math.abs(data$$1.pixelY) ? -data$$1.pixelX * rtlFactor : -data$$1.pixelY;\n    }\n\n    if (delta === 0) return true;\n\n    if (params.invert) delta = -delta;\n\n    if (!swiper.params.freeMode) {\n      if (Utils.now() - swiper.mousewheel.lastScrollTime > 60) {\n        if (delta < 0) {\n          if ((!swiper.isEnd || swiper.params.loop) && !swiper.animating) {\n            swiper.slideNext();\n            swiper.emit('scroll', e);\n          } else if (params.releaseOnEdges) return true;\n        } else if ((!swiper.isBeginning || swiper.params.loop) && !swiper.animating) {\n          swiper.slidePrev();\n          swiper.emit('scroll', e);\n        } else if (params.releaseOnEdges) return true;\n      }\n      swiper.mousewheel.lastScrollTime = (new window.Date()).getTime();\n    } else {\n      // Freemode or scrollContainer:\n      if (swiper.params.loop) {\n        swiper.loopFix();\n      }\n      let position = swiper.getTranslate() + (delta * params.sensitivity);\n      const wasBeginning = swiper.isBeginning;\n      const wasEnd = swiper.isEnd;\n\n      if (position >= swiper.minTranslate()) position = swiper.minTranslate();\n      if (position <= swiper.maxTranslate()) position = swiper.maxTranslate();\n\n      swiper.setTransition(0);\n      swiper.setTranslate(position);\n      swiper.updateProgress();\n      swiper.updateActiveIndex();\n      swiper.updateSlidesClasses();\n\n      if ((!wasBeginning && swiper.isBeginning) || (!wasEnd && swiper.isEnd)) {\n        swiper.updateSlidesClasses();\n      }\n\n      if (swiper.params.freeModeSticky) {\n        clearTimeout(swiper.mousewheel.timeout);\n        swiper.mousewheel.timeout = Utils.nextTick(() => {\n          swiper.slideToClosest();\n        }, 300);\n      }\n      // Emit event\n      swiper.emit('scroll', e);\n\n      // Stop autoplay\n      if (swiper.params.autoplay && swiper.params.autoplayDisableOnInteraction) swiper.autoplay.stop();\n      // Return page scroll on edge positions\n      if (position === swiper.minTranslate() || position === swiper.maxTranslate()) return true;\n    }\n\n    if (e.preventDefault) e.preventDefault();\n    else e.returnValue = false;\n    return false;\n  },\n  enable() {\n    const swiper = this;\n    if (!Mousewheel.event) return false;\n    if (swiper.mousewheel.enabled) return false;\n    let target = swiper.$el;\n    if (swiper.params.mousewheel.eventsTarged !== 'container') {\n      target = $(swiper.params.mousewheel.eventsTarged);\n    }\n    target.on('mouseenter', swiper.mousewheel.handleMouseEnter);\n    target.on('mouseleave', swiper.mousewheel.handleMouseLeave);\n    target.on(Mousewheel.event, swiper.mousewheel.handle);\n    swiper.mousewheel.enabled = true;\n    return true;\n  },\n  disable() {\n    const swiper = this;\n    if (!Mousewheel.event) return false;\n    if (!swiper.mousewheel.enabled) return false;\n    let target = swiper.$el;\n    if (swiper.params.mousewheel.eventsTarged !== 'container') {\n      target = $(swiper.params.mousewheel.eventsTarged);\n    }\n    target.off(Mousewheel.event, swiper.mousewheel.handle);\n    swiper.mousewheel.enabled = false;\n    return true;\n  },\n};\n\nvar Mousewheel$1 = {\n  name: 'mousewheel',\n  params: {\n    mousewheel: {\n      enabled: false,\n      releaseOnEdges: false,\n      invert: false,\n      forceToAxis: false,\n      sensitivity: 1,\n      eventsTarged: 'container',\n    },\n  },\n  create() {\n    const swiper = this;\n    Utils.extend(swiper, {\n      mousewheel: {\n        enabled: false,\n        enable: Mousewheel.enable.bind(swiper),\n        disable: Mousewheel.disable.bind(swiper),\n        handle: Mousewheel.handle.bind(swiper),\n        handleMouseEnter: Mousewheel.handleMouseEnter.bind(swiper),\n        handleMouseLeave: Mousewheel.handleMouseLeave.bind(swiper),\n        lastScrollTime: Utils.now(),\n      },\n    });\n  },\n  on: {\n    init() {\n      const swiper = this;\n      if (swiper.params.mousewheel.enabled) swiper.mousewheel.enable();\n    },\n    destroy() {\n      const swiper = this;\n      if (swiper.mousewheel.enabled) swiper.mousewheel.disable();\n    },\n  },\n};\n\nconst Navigation = {\n  update() {\n    // Update Navigation Buttons\n    const swiper = this;\n    const params = swiper.params.navigation;\n\n    if (swiper.params.loop) return;\n    const { $nextEl, $prevEl } = swiper.navigation;\n\n    if ($prevEl && $prevEl.length > 0) {\n      if (swiper.isBeginning) {\n        $prevEl.addClass(params.disabledClass);\n      } else {\n        $prevEl.removeClass(params.disabledClass);\n      }\n      $prevEl[swiper.params.watchOverflow && swiper.isLocked ? 'addClass' : 'removeClass'](params.lockClass);\n    }\n    if ($nextEl && $nextEl.length > 0) {\n      if (swiper.isEnd) {\n        $nextEl.addClass(params.disabledClass);\n      } else {\n        $nextEl.removeClass(params.disabledClass);\n      }\n      $nextEl[swiper.params.watchOverflow && swiper.isLocked ? 'addClass' : 'removeClass'](params.lockClass);\n    }\n  },\n  init() {\n    const swiper = this;\n    const params = swiper.params.navigation;\n    if (!(params.nextEl || params.prevEl)) return;\n\n    let $nextEl;\n    let $prevEl;\n    if (params.nextEl) {\n      $nextEl = $(params.nextEl);\n      if (\n        swiper.params.uniqueNavElements\n        && typeof params.nextEl === 'string'\n        && $nextEl.length > 1\n        && swiper.$el.find(params.nextEl).length === 1\n      ) {\n        $nextEl = swiper.$el.find(params.nextEl);\n      }\n    }\n    if (params.prevEl) {\n      $prevEl = $(params.prevEl);\n      if (\n        swiper.params.uniqueNavElements\n        && typeof params.prevEl === 'string'\n        && $prevEl.length > 1\n        && swiper.$el.find(params.prevEl).length === 1\n      ) {\n        $prevEl = swiper.$el.find(params.prevEl);\n      }\n    }\n\n    if ($nextEl && $nextEl.length > 0) {\n      $nextEl.on('click', (e) => {\n        e.preventDefault();\n        if (swiper.isEnd && !swiper.params.loop) return;\n        swiper.slideNext();\n      });\n    }\n    if ($prevEl && $prevEl.length > 0) {\n      $prevEl.on('click', (e) => {\n        e.preventDefault();\n        if (swiper.isBeginning && !swiper.params.loop) return;\n        swiper.slidePrev();\n      });\n    }\n\n    Utils.extend(swiper.navigation, {\n      $nextEl,\n      nextEl: $nextEl && $nextEl[0],\n      $prevEl,\n      prevEl: $prevEl && $prevEl[0],\n    });\n  },\n  destroy() {\n    const swiper = this;\n    const { $nextEl, $prevEl } = swiper.navigation;\n    if ($nextEl && $nextEl.length) {\n      $nextEl.off('click');\n      $nextEl.removeClass(swiper.params.navigation.disabledClass);\n    }\n    if ($prevEl && $prevEl.length) {\n      $prevEl.off('click');\n      $prevEl.removeClass(swiper.params.navigation.disabledClass);\n    }\n  },\n};\n\nvar Navigation$1 = {\n  name: 'navigation',\n  params: {\n    navigation: {\n      nextEl: null,\n      prevEl: null,\n\n      hideOnClick: false,\n      disabledClass: 'swiper-button-disabled',\n      hiddenClass: 'swiper-button-hidden',\n      lockClass: 'swiper-button-lock',\n    },\n  },\n  create() {\n    const swiper = this;\n    Utils.extend(swiper, {\n      navigation: {\n        init: Navigation.init.bind(swiper),\n        update: Navigation.update.bind(swiper),\n        destroy: Navigation.destroy.bind(swiper),\n      },\n    });\n  },\n  on: {\n    init() {\n      const swiper = this;\n      swiper.navigation.init();\n      swiper.navigation.update();\n    },\n    toEdge() {\n      const swiper = this;\n      swiper.navigation.update();\n    },\n    fromEdge() {\n      const swiper = this;\n      swiper.navigation.update();\n    },\n    destroy() {\n      const swiper = this;\n      swiper.navigation.destroy();\n    },\n    click(e) {\n      const swiper = this;\n      const { $nextEl, $prevEl } = swiper.navigation;\n      if (\n        swiper.params.navigation.hideOnClick\n        && !$(e.target).is($prevEl)\n        && !$(e.target).is($nextEl)\n      ) {\n        if ($nextEl) $nextEl.toggleClass(swiper.params.navigation.hiddenClass);\n        if ($prevEl) $prevEl.toggleClass(swiper.params.navigation.hiddenClass);\n      }\n    },\n  },\n};\n\nconst Pagination = {\n  update() {\n    // Render || Update Pagination bullets/items\n    const swiper = this;\n    const rtl = swiper.rtl;\n    const params = swiper.params.pagination;\n    if (!params.el || !swiper.pagination.el || !swiper.pagination.$el || swiper.pagination.$el.length === 0) return;\n    const slidesLength = swiper.virtual && swiper.params.virtual.enabled ? swiper.virtual.slides.length : swiper.slides.length;\n    const $el = swiper.pagination.$el;\n    // Current/Total\n    let current;\n    const total = swiper.params.loop ? Math.ceil((slidesLength - (swiper.loopedSlides * 2)) / swiper.params.slidesPerGroup) : swiper.snapGrid.length;\n    if (swiper.params.loop) {\n      current = Math.ceil((swiper.activeIndex - swiper.loopedSlides) / swiper.params.slidesPerGroup);\n      if (current > slidesLength - 1 - (swiper.loopedSlides * 2)) {\n        current -= (slidesLength - (swiper.loopedSlides * 2));\n      }\n      if (current > total - 1) current -= total;\n      if (current < 0 && swiper.params.paginationType !== 'bullets') current = total + current;\n    } else if (typeof swiper.snapIndex !== 'undefined') {\n      current = swiper.snapIndex;\n    } else {\n      current = swiper.activeIndex || 0;\n    }\n    // Types\n    if (params.type === 'bullets' && swiper.pagination.bullets && swiper.pagination.bullets.length > 0) {\n      const bullets = swiper.pagination.bullets;\n      let firstIndex;\n      let lastIndex;\n      let midIndex;\n      if (params.dynamicBullets) {\n        swiper.pagination.bulletSize = bullets.eq(0)[swiper.isHorizontal() ? 'outerWidth' : 'outerHeight'](true);\n        $el.css(swiper.isHorizontal() ? 'width' : 'height', `${swiper.pagination.bulletSize * (params.dynamicMainBullets + 4)}px`);\n        if (params.dynamicMainBullets > 1 && swiper.previousIndex !== undefined) {\n          swiper.pagination.dynamicBulletIndex += (current - swiper.previousIndex);\n          if (swiper.pagination.dynamicBulletIndex > (params.dynamicMainBullets - 1)) {\n            swiper.pagination.dynamicBulletIndex = params.dynamicMainBullets - 1;\n          } else if (swiper.pagination.dynamicBulletIndex < 0) {\n            swiper.pagination.dynamicBulletIndex = 0;\n          }\n        }\n        firstIndex = current - swiper.pagination.dynamicBulletIndex;\n        lastIndex = firstIndex + (Math.min(bullets.length, params.dynamicMainBullets) - 1);\n        midIndex = (lastIndex + firstIndex) / 2;\n      }\n      bullets.removeClass(`${params.bulletActiveClass} ${params.bulletActiveClass}-next ${params.bulletActiveClass}-next-next ${params.bulletActiveClass}-prev ${params.bulletActiveClass}-prev-prev ${params.bulletActiveClass}-main`);\n      if ($el.length > 1) {\n        bullets.each((index$$1, bullet) => {\n          const $bullet = $(bullet);\n          const bulletIndex = $bullet.index();\n          if (bulletIndex === current) {\n            $bullet.addClass(params.bulletActiveClass);\n          }\n          if (params.dynamicBullets) {\n            if (bulletIndex >= firstIndex && bulletIndex <= lastIndex) {\n              $bullet.addClass(`${params.bulletActiveClass}-main`);\n            }\n            if (bulletIndex === firstIndex) {\n              $bullet\n                .prev()\n                .addClass(`${params.bulletActiveClass}-prev`)\n                .prev()\n                .addClass(`${params.bulletActiveClass}-prev-prev`);\n            }\n            if (bulletIndex === lastIndex) {\n              $bullet\n                .next()\n                .addClass(`${params.bulletActiveClass}-next`)\n                .next()\n                .addClass(`${params.bulletActiveClass}-next-next`);\n            }\n          }\n        });\n      } else {\n        const $bullet = bullets.eq(current);\n        $bullet.addClass(params.bulletActiveClass);\n        if (params.dynamicBullets) {\n          const $firstDisplayedBullet = bullets.eq(firstIndex);\n          const $lastDisplayedBullet = bullets.eq(lastIndex);\n          for (let i = firstIndex; i <= lastIndex; i += 1) {\n            bullets.eq(i).addClass(`${params.bulletActiveClass}-main`);\n          }\n          $firstDisplayedBullet\n            .prev()\n            .addClass(`${params.bulletActiveClass}-prev`)\n            .prev()\n            .addClass(`${params.bulletActiveClass}-prev-prev`);\n          $lastDisplayedBullet\n            .next()\n            .addClass(`${params.bulletActiveClass}-next`)\n            .next()\n            .addClass(`${params.bulletActiveClass}-next-next`);\n        }\n      }\n      if (params.dynamicBullets) {\n        const dynamicBulletsLength = Math.min(bullets.length, params.dynamicMainBullets + 4);\n        const bulletsOffset = (((swiper.pagination.bulletSize * dynamicBulletsLength) - (swiper.pagination.bulletSize)) / 2) - (midIndex * swiper.pagination.bulletSize);\n        const offsetProp = rtl ? 'right' : 'left';\n        bullets.css(swiper.isHorizontal() ? offsetProp : 'top', `${bulletsOffset}px`);\n      }\n    }\n    if (params.type === 'fraction') {\n      $el.find(`.${params.currentClass}`).text(params.formatFractionCurrent(current + 1));\n      $el.find(`.${params.totalClass}`).text(params.formatFractionTotal(total));\n    }\n    if (params.type === 'progressbar') {\n      let progressbarDirection;\n      if (params.progressbarOpposite) {\n        progressbarDirection = swiper.isHorizontal() ? 'vertical' : 'horizontal';\n      } else {\n        progressbarDirection = swiper.isHorizontal() ? 'horizontal' : 'vertical';\n      }\n      const scale = (current + 1) / total;\n      let scaleX = 1;\n      let scaleY = 1;\n      if (progressbarDirection === 'horizontal') {\n        scaleX = scale;\n      } else {\n        scaleY = scale;\n      }\n      $el.find(`.${params.progressbarFillClass}`).transform(`translate3d(0,0,0) scaleX(${scaleX}) scaleY(${scaleY})`).transition(swiper.params.speed);\n    }\n    if (params.type === 'custom' && params.renderCustom) {\n      $el.html(params.renderCustom(swiper, current + 1, total));\n      swiper.emit('paginationRender', swiper, $el[0]);\n    } else {\n      swiper.emit('paginationUpdate', swiper, $el[0]);\n    }\n    $el[swiper.params.watchOverflow && swiper.isLocked ? 'addClass' : 'removeClass'](params.lockClass);\n  },\n  render() {\n    // Render Container\n    const swiper = this;\n    const params = swiper.params.pagination;\n    if (!params.el || !swiper.pagination.el || !swiper.pagination.$el || swiper.pagination.$el.length === 0) return;\n    const slidesLength = swiper.virtual && swiper.params.virtual.enabled ? swiper.virtual.slides.length : swiper.slides.length;\n\n    const $el = swiper.pagination.$el;\n    let paginationHTML = '';\n    if (params.type === 'bullets') {\n      const numberOfBullets = swiper.params.loop ? Math.ceil((slidesLength - (swiper.loopedSlides * 2)) / swiper.params.slidesPerGroup) : swiper.snapGrid.length;\n      for (let i = 0; i < numberOfBullets; i += 1) {\n        if (params.renderBullet) {\n          paginationHTML += params.renderBullet.call(swiper, i, params.bulletClass);\n        } else {\n          paginationHTML += `<${params.bulletElement} class=\"${params.bulletClass}\"></${params.bulletElement}>`;\n        }\n      }\n      $el.html(paginationHTML);\n      swiper.pagination.bullets = $el.find(`.${params.bulletClass}`);\n    }\n    if (params.type === 'fraction') {\n      if (params.renderFraction) {\n        paginationHTML = params.renderFraction.call(swiper, params.currentClass, params.totalClass);\n      } else {\n        paginationHTML = `<span class=\"${params.currentClass}\"></span>`\n        + ' / '\n        + `<span class=\"${params.totalClass}\"></span>`;\n      }\n      $el.html(paginationHTML);\n    }\n    if (params.type === 'progressbar') {\n      if (params.renderProgressbar) {\n        paginationHTML = params.renderProgressbar.call(swiper, params.progressbarFillClass);\n      } else {\n        paginationHTML = `<span class=\"${params.progressbarFillClass}\"></span>`;\n      }\n      $el.html(paginationHTML);\n    }\n    if (params.type !== 'custom') {\n      swiper.emit('paginationRender', swiper.pagination.$el[0]);\n    }\n  },\n  init() {\n    const swiper = this;\n    const params = swiper.params.pagination;\n    if (!params.el) return;\n\n    let $el = $(params.el);\n    if ($el.length === 0) return;\n\n    if (\n      swiper.params.uniqueNavElements\n      && typeof params.el === 'string'\n      && $el.length > 1\n      && swiper.$el.find(params.el).length === 1\n    ) {\n      $el = swiper.$el.find(params.el);\n    }\n\n    if (params.type === 'bullets' && params.clickable) {\n      $el.addClass(params.clickableClass);\n    }\n\n    $el.addClass(params.modifierClass + params.type);\n\n    if (params.type === 'bullets' && params.dynamicBullets) {\n      $el.addClass(`${params.modifierClass}${params.type}-dynamic`);\n      swiper.pagination.dynamicBulletIndex = 0;\n      if (params.dynamicMainBullets < 1) {\n        params.dynamicMainBullets = 1;\n      }\n    }\n    if (params.type === 'progressbar' && params.progressbarOpposite) {\n      $el.addClass(params.progressbarOppositeClass);\n    }\n\n    if (params.clickable) {\n      $el.on('click', `.${params.bulletClass}`, function onClick(e) {\n        e.preventDefault();\n        let index$$1 = $(this).index() * swiper.params.slidesPerGroup;\n        if (swiper.params.loop) index$$1 += swiper.loopedSlides;\n        swiper.slideTo(index$$1);\n      });\n    }\n\n    Utils.extend(swiper.pagination, {\n      $el,\n      el: $el[0],\n    });\n  },\n  destroy() {\n    const swiper = this;\n    const params = swiper.params.pagination;\n    if (!params.el || !swiper.pagination.el || !swiper.pagination.$el || swiper.pagination.$el.length === 0) return;\n    const $el = swiper.pagination.$el;\n\n    $el.removeClass(params.hiddenClass);\n    $el.removeClass(params.modifierClass + params.type);\n    if (swiper.pagination.bullets) swiper.pagination.bullets.removeClass(params.bulletActiveClass);\n    if (params.clickable) {\n      $el.off('click', `.${params.bulletClass}`);\n    }\n  },\n};\n\nvar Pagination$1 = {\n  name: 'pagination',\n  params: {\n    pagination: {\n      el: null,\n      bulletElement: 'span',\n      clickable: false,\n      hideOnClick: false,\n      renderBullet: null,\n      renderProgressbar: null,\n      renderFraction: null,\n      renderCustom: null,\n      progressbarOpposite: false,\n      type: 'bullets', // 'bullets' or 'progressbar' or 'fraction' or 'custom'\n      dynamicBullets: false,\n      dynamicMainBullets: 1,\n      formatFractionCurrent: number => number,\n      formatFractionTotal: number => number,\n      bulletClass: 'swiper-pagination-bullet',\n      bulletActiveClass: 'swiper-pagination-bullet-active',\n      modifierClass: 'swiper-pagination-', // NEW\n      currentClass: 'swiper-pagination-current',\n      totalClass: 'swiper-pagination-total',\n      hiddenClass: 'swiper-pagination-hidden',\n      progressbarFillClass: 'swiper-pagination-progressbar-fill',\n      progressbarOppositeClass: 'swiper-pagination-progressbar-opposite',\n      clickableClass: 'swiper-pagination-clickable', // NEW\n      lockClass: 'swiper-pagination-lock',\n    },\n  },\n  create() {\n    const swiper = this;\n    Utils.extend(swiper, {\n      pagination: {\n        init: Pagination.init.bind(swiper),\n        render: Pagination.render.bind(swiper),\n        update: Pagination.update.bind(swiper),\n        destroy: Pagination.destroy.bind(swiper),\n        dynamicBulletIndex: 0,\n      },\n    });\n  },\n  on: {\n    init() {\n      const swiper = this;\n      swiper.pagination.init();\n      swiper.pagination.render();\n      swiper.pagination.update();\n    },\n    activeIndexChange() {\n      const swiper = this;\n      if (swiper.params.loop) {\n        swiper.pagination.update();\n      } else if (typeof swiper.snapIndex === 'undefined') {\n        swiper.pagination.update();\n      }\n    },\n    snapIndexChange() {\n      const swiper = this;\n      if (!swiper.params.loop) {\n        swiper.pagination.update();\n      }\n    },\n    slidesLengthChange() {\n      const swiper = this;\n      if (swiper.params.loop) {\n        swiper.pagination.render();\n        swiper.pagination.update();\n      }\n    },\n    snapGridLengthChange() {\n      const swiper = this;\n      if (!swiper.params.loop) {\n        swiper.pagination.render();\n        swiper.pagination.update();\n      }\n    },\n    destroy() {\n      const swiper = this;\n      swiper.pagination.destroy();\n    },\n    click(e) {\n      const swiper = this;\n      if (\n        swiper.params.pagination.el\n        && swiper.params.pagination.hideOnClick\n        && swiper.pagination.$el.length > 0\n        && !$(e.target).hasClass(swiper.params.pagination.bulletClass)\n      ) {\n        swiper.pagination.$el.toggleClass(swiper.params.pagination.hiddenClass);\n      }\n    },\n  },\n};\n\nconst Scrollbar = {\n  setTranslate() {\n    const swiper = this;\n    if (!swiper.params.scrollbar.el || !swiper.scrollbar.el) return;\n    const { scrollbar, rtlTranslate: rtl, progress } = swiper;\n    const {\n      dragSize, trackSize, $dragEl, $el,\n    } = scrollbar;\n    const params = swiper.params.scrollbar;\n\n    let newSize = dragSize;\n    let newPos = (trackSize - dragSize) * progress;\n    if (rtl) {\n      newPos = -newPos;\n      if (newPos > 0) {\n        newSize = dragSize - newPos;\n        newPos = 0;\n      } else if (-newPos + dragSize > trackSize) {\n        newSize = trackSize + newPos;\n      }\n    } else if (newPos < 0) {\n      newSize = dragSize + newPos;\n      newPos = 0;\n    } else if (newPos + dragSize > trackSize) {\n      newSize = trackSize - newPos;\n    }\n    if (swiper.isHorizontal()) {\n      if (Support.transforms3d) {\n        $dragEl.transform(`translate3d(${newPos}px, 0, 0)`);\n      } else {\n        $dragEl.transform(`translateX(${newPos}px)`);\n      }\n      $dragEl[0].style.width = `${newSize}px`;\n    } else {\n      if (Support.transforms3d) {\n        $dragEl.transform(`translate3d(0px, ${newPos}px, 0)`);\n      } else {\n        $dragEl.transform(`translateY(${newPos}px)`);\n      }\n      $dragEl[0].style.height = `${newSize}px`;\n    }\n    if (params.hide) {\n      clearTimeout(swiper.scrollbar.timeout);\n      $el[0].style.opacity = 1;\n      swiper.scrollbar.timeout = setTimeout(() => {\n        $el[0].style.opacity = 0;\n        $el.transition(400);\n      }, 1000);\n    }\n  },\n  setTransition(duration) {\n    const swiper = this;\n    if (!swiper.params.scrollbar.el || !swiper.scrollbar.el) return;\n    swiper.scrollbar.$dragEl.transition(duration);\n  },\n  updateSize() {\n    const swiper = this;\n    if (!swiper.params.scrollbar.el || !swiper.scrollbar.el) return;\n\n    const { scrollbar } = swiper;\n    const { $dragEl, $el } = scrollbar;\n\n    $dragEl[0].style.width = '';\n    $dragEl[0].style.height = '';\n    const trackSize = swiper.isHorizontal() ? $el[0].offsetWidth : $el[0].offsetHeight;\n\n    const divider = swiper.size / swiper.virtualSize;\n    const moveDivider = divider * (trackSize / swiper.size);\n    let dragSize;\n    if (swiper.params.scrollbar.dragSize === 'auto') {\n      dragSize = trackSize * divider;\n    } else {\n      dragSize = parseInt(swiper.params.scrollbar.dragSize, 10);\n    }\n\n    if (swiper.isHorizontal()) {\n      $dragEl[0].style.width = `${dragSize}px`;\n    } else {\n      $dragEl[0].style.height = `${dragSize}px`;\n    }\n\n    if (divider >= 1) {\n      $el[0].style.display = 'none';\n    } else {\n      $el[0].style.display = '';\n    }\n    if (swiper.params.scrollbarHide) {\n      $el[0].style.opacity = 0;\n    }\n    Utils.extend(scrollbar, {\n      trackSize,\n      divider,\n      moveDivider,\n      dragSize,\n    });\n    scrollbar.$el[swiper.params.watchOverflow && swiper.isLocked ? 'addClass' : 'removeClass'](swiper.params.scrollbar.lockClass);\n  },\n  setDragPosition(e) {\n    const swiper = this;\n    const { scrollbar, rtlTranslate: rtl } = swiper;\n    const { $el, dragSize, trackSize } = scrollbar;\n\n    let pointerPosition;\n    if (swiper.isHorizontal()) {\n      pointerPosition = ((e.type === 'touchstart' || e.type === 'touchmove') ? e.targetTouches[0].pageX : e.pageX || e.clientX);\n    } else {\n      pointerPosition = ((e.type === 'touchstart' || e.type === 'touchmove') ? e.targetTouches[0].pageY : e.pageY || e.clientY);\n    }\n    let positionRatio;\n    positionRatio = ((pointerPosition) - $el.offset()[swiper.isHorizontal() ? 'left' : 'top'] - (dragSize / 2)) / (trackSize - dragSize);\n    positionRatio = Math.max(Math.min(positionRatio, 1), 0);\n    if (rtl) {\n      positionRatio = 1 - positionRatio;\n    }\n\n    const position = swiper.minTranslate() + ((swiper.maxTranslate() - swiper.minTranslate()) * positionRatio);\n\n    swiper.updateProgress(position);\n    swiper.setTranslate(position);\n    swiper.updateActiveIndex();\n    swiper.updateSlidesClasses();\n  },\n  onDragStart(e) {\n    const swiper = this;\n    const params = swiper.params.scrollbar;\n    const { scrollbar, $wrapperEl } = swiper;\n    const { $el, $dragEl } = scrollbar;\n    swiper.scrollbar.isTouched = true;\n    e.preventDefault();\n    e.stopPropagation();\n\n    $wrapperEl.transition(100);\n    $dragEl.transition(100);\n    scrollbar.setDragPosition(e);\n\n    clearTimeout(swiper.scrollbar.dragTimeout);\n\n    $el.transition(0);\n    if (params.hide) {\n      $el.css('opacity', 1);\n    }\n    swiper.emit('scrollbarDragStart', e);\n  },\n  onDragMove(e) {\n    const swiper = this;\n    const { scrollbar, $wrapperEl } = swiper;\n    const { $el, $dragEl } = scrollbar;\n\n    if (!swiper.scrollbar.isTouched) return;\n    if (e.preventDefault) e.preventDefault();\n    else e.returnValue = false;\n    scrollbar.setDragPosition(e);\n    $wrapperEl.transition(0);\n    $el.transition(0);\n    $dragEl.transition(0);\n    swiper.emit('scrollbarDragMove', e);\n  },\n  onDragEnd(e) {\n    const swiper = this;\n\n    const params = swiper.params.scrollbar;\n    const { scrollbar } = swiper;\n    const { $el } = scrollbar;\n\n    if (!swiper.scrollbar.isTouched) return;\n    swiper.scrollbar.isTouched = false;\n    if (params.hide) {\n      clearTimeout(swiper.scrollbar.dragTimeout);\n      swiper.scrollbar.dragTimeout = Utils.nextTick(() => {\n        $el.css('opacity', 0);\n        $el.transition(400);\n      }, 1000);\n    }\n    swiper.emit('scrollbarDragEnd', e);\n    if (params.snapOnRelease) {\n      swiper.slideToClosest();\n    }\n  },\n  enableDraggable() {\n    const swiper = this;\n    if (!swiper.params.scrollbar.el) return;\n    const {\n      scrollbar, touchEvents, touchEventsDesktop, params,\n    } = swiper;\n    const $el = scrollbar.$el;\n    const target = $el[0];\n    const activeListener = Support.passiveListener && params.passiveListeners ? { passive: false, capture: false } : false;\n    const passiveListener = Support.passiveListener && params.passiveListeners ? { passive: true, capture: false } : false;\n    if (!Support.touch && (Support.pointerEvents || Support.prefixedPointerEvents)) {\n      target.addEventListener(touchEventsDesktop.start, swiper.scrollbar.onDragStart, activeListener);\n      document.addEventListener(touchEventsDesktop.move, swiper.scrollbar.onDragMove, activeListener);\n      document.addEventListener(touchEventsDesktop.end, swiper.scrollbar.onDragEnd, passiveListener);\n    } else {\n      if (Support.touch) {\n        target.addEventListener(touchEvents.start, swiper.scrollbar.onDragStart, activeListener);\n        target.addEventListener(touchEvents.move, swiper.scrollbar.onDragMove, activeListener);\n        target.addEventListener(touchEvents.end, swiper.scrollbar.onDragEnd, passiveListener);\n      }\n      if ((params.simulateTouch && !Device.ios && !Device.android) || (params.simulateTouch && !Support.touch && Device.ios)) {\n        target.addEventListener('mousedown', swiper.scrollbar.onDragStart, activeListener);\n        document.addEventListener('mousemove', swiper.scrollbar.onDragMove, activeListener);\n        document.addEventListener('mouseup', swiper.scrollbar.onDragEnd, passiveListener);\n      }\n    }\n  },\n  disableDraggable() {\n    const swiper = this;\n    if (!swiper.params.scrollbar.el) return;\n    const {\n      scrollbar, touchEvents, touchEventsDesktop, params,\n    } = swiper;\n    const $el = scrollbar.$el;\n    const target = $el[0];\n    const activeListener = Support.passiveListener && params.passiveListeners ? { passive: false, capture: false } : false;\n    const passiveListener = Support.passiveListener && params.passiveListeners ? { passive: true, capture: false } : false;\n    if (!Support.touch && (Support.pointerEvents || Support.prefixedPointerEvents)) {\n      target.removeEventListener(touchEventsDesktop.start, swiper.scrollbar.onDragStart, activeListener);\n      document.removeEventListener(touchEventsDesktop.move, swiper.scrollbar.onDragMove, activeListener);\n      document.removeEventListener(touchEventsDesktop.end, swiper.scrollbar.onDragEnd, passiveListener);\n    } else {\n      if (Support.touch) {\n        target.removeEventListener(touchEvents.start, swiper.scrollbar.onDragStart, activeListener);\n        target.removeEventListener(touchEvents.move, swiper.scrollbar.onDragMove, activeListener);\n        target.removeEventListener(touchEvents.end, swiper.scrollbar.onDragEnd, passiveListener);\n      }\n      if ((params.simulateTouch && !Device.ios && !Device.android) || (params.simulateTouch && !Support.touch && Device.ios)) {\n        target.removeEventListener('mousedown', swiper.scrollbar.onDragStart, activeListener);\n        document.removeEventListener('mousemove', swiper.scrollbar.onDragMove, activeListener);\n        document.removeEventListener('mouseup', swiper.scrollbar.onDragEnd, passiveListener);\n      }\n    }\n  },\n  init() {\n    const swiper = this;\n    if (!swiper.params.scrollbar.el) return;\n    const { scrollbar, $el: $swiperEl } = swiper;\n    const params = swiper.params.scrollbar;\n\n    let $el = $(params.el);\n    if (swiper.params.uniqueNavElements && typeof params.el === 'string' && $el.length > 1 && $swiperEl.find(params.el).length === 1) {\n      $el = $swiperEl.find(params.el);\n    }\n\n    let $dragEl = $el.find(`.${swiper.params.scrollbar.dragClass}`);\n    if ($dragEl.length === 0) {\n      $dragEl = $(`<div class=\"${swiper.params.scrollbar.dragClass}\"></div>`);\n      $el.append($dragEl);\n    }\n\n    Utils.extend(scrollbar, {\n      $el,\n      el: $el[0],\n      $dragEl,\n      dragEl: $dragEl[0],\n    });\n\n    if (params.draggable) {\n      scrollbar.enableDraggable();\n    }\n  },\n  destroy() {\n    const swiper = this;\n    swiper.scrollbar.disableDraggable();\n  },\n};\n\nvar Scrollbar$1 = {\n  name: 'scrollbar',\n  params: {\n    scrollbar: {\n      el: null,\n      dragSize: 'auto',\n      hide: false,\n      draggable: false,\n      snapOnRelease: true,\n      lockClass: 'swiper-scrollbar-lock',\n      dragClass: 'swiper-scrollbar-drag',\n    },\n  },\n  create() {\n    const swiper = this;\n    Utils.extend(swiper, {\n      scrollbar: {\n        init: Scrollbar.init.bind(swiper),\n        destroy: Scrollbar.destroy.bind(swiper),\n        updateSize: Scrollbar.updateSize.bind(swiper),\n        setTranslate: Scrollbar.setTranslate.bind(swiper),\n        setTransition: Scrollbar.setTransition.bind(swiper),\n        enableDraggable: Scrollbar.enableDraggable.bind(swiper),\n        disableDraggable: Scrollbar.disableDraggable.bind(swiper),\n        setDragPosition: Scrollbar.setDragPosition.bind(swiper),\n        onDragStart: Scrollbar.onDragStart.bind(swiper),\n        onDragMove: Scrollbar.onDragMove.bind(swiper),\n        onDragEnd: Scrollbar.onDragEnd.bind(swiper),\n        isTouched: false,\n        timeout: null,\n        dragTimeout: null,\n      },\n    });\n  },\n  on: {\n    init() {\n      const swiper = this;\n      swiper.scrollbar.init();\n      swiper.scrollbar.updateSize();\n      swiper.scrollbar.setTranslate();\n    },\n    update() {\n      const swiper = this;\n      swiper.scrollbar.updateSize();\n    },\n    resize() {\n      const swiper = this;\n      swiper.scrollbar.updateSize();\n    },\n    observerUpdate() {\n      const swiper = this;\n      swiper.scrollbar.updateSize();\n    },\n    setTranslate() {\n      const swiper = this;\n      swiper.scrollbar.setTranslate();\n    },\n    setTransition(duration) {\n      const swiper = this;\n      swiper.scrollbar.setTransition(duration);\n    },\n    destroy() {\n      const swiper = this;\n      swiper.scrollbar.destroy();\n    },\n  },\n};\n\nconst Parallax = {\n  setTransform(el, progress) {\n    const swiper = this;\n    const { rtl } = swiper;\n\n    const $el = $(el);\n    const rtlFactor = rtl ? -1 : 1;\n\n    const p = $el.attr('data-swiper-parallax') || '0';\n    let x = $el.attr('data-swiper-parallax-x');\n    let y = $el.attr('data-swiper-parallax-y');\n    const scale = $el.attr('data-swiper-parallax-scale');\n    const opacity = $el.attr('data-swiper-parallax-opacity');\n\n    if (x || y) {\n      x = x || '0';\n      y = y || '0';\n    } else if (swiper.isHorizontal()) {\n      x = p;\n      y = '0';\n    } else {\n      y = p;\n      x = '0';\n    }\n\n    if ((x).indexOf('%') >= 0) {\n      x = `${parseInt(x, 10) * progress * rtlFactor}%`;\n    } else {\n      x = `${x * progress * rtlFactor}px`;\n    }\n    if ((y).indexOf('%') >= 0) {\n      y = `${parseInt(y, 10) * progress}%`;\n    } else {\n      y = `${y * progress}px`;\n    }\n\n    if (typeof opacity !== 'undefined' && opacity !== null) {\n      const currentOpacity = opacity - ((opacity - 1) * (1 - Math.abs(progress)));\n      $el[0].style.opacity = currentOpacity;\n    }\n    if (typeof scale === 'undefined' || scale === null) {\n      $el.transform(`translate3d(${x}, ${y}, 0px)`);\n    } else {\n      const currentScale = scale - ((scale - 1) * (1 - Math.abs(progress)));\n      $el.transform(`translate3d(${x}, ${y}, 0px) scale(${currentScale})`);\n    }\n  },\n  setTranslate() {\n    const swiper = this;\n    const {\n      $el, slides, progress, snapGrid,\n    } = swiper;\n    $el.children('[data-swiper-parallax], [data-swiper-parallax-x], [data-swiper-parallax-y]')\n      .each((index$$1, el) => {\n        swiper.parallax.setTransform(el, progress);\n      });\n    slides.each((slideIndex, slideEl) => {\n      let slideProgress = slideEl.progress;\n      if (swiper.params.slidesPerGroup > 1 && swiper.params.slidesPerView !== 'auto') {\n        slideProgress += Math.ceil(slideIndex / 2) - (progress * (snapGrid.length - 1));\n      }\n      slideProgress = Math.min(Math.max(slideProgress, -1), 1);\n      $(slideEl).find('[data-swiper-parallax], [data-swiper-parallax-x], [data-swiper-parallax-y]')\n        .each((index$$1, el) => {\n          swiper.parallax.setTransform(el, slideProgress);\n        });\n    });\n  },\n  setTransition(duration = this.params.speed) {\n    const swiper = this;\n    const { $el } = swiper;\n    $el.find('[data-swiper-parallax], [data-swiper-parallax-x], [data-swiper-parallax-y]')\n      .each((index$$1, parallaxEl) => {\n        const $parallaxEl = $(parallaxEl);\n        let parallaxDuration = parseInt($parallaxEl.attr('data-swiper-parallax-duration'), 10) || duration;\n        if (duration === 0) parallaxDuration = 0;\n        $parallaxEl.transition(parallaxDuration);\n      });\n  },\n};\n\nvar Parallax$1 = {\n  name: 'parallax',\n  params: {\n    parallax: {\n      enabled: false,\n    },\n  },\n  create() {\n    const swiper = this;\n    Utils.extend(swiper, {\n      parallax: {\n        setTransform: Parallax.setTransform.bind(swiper),\n        setTranslate: Parallax.setTranslate.bind(swiper),\n        setTransition: Parallax.setTransition.bind(swiper),\n      },\n    });\n  },\n  on: {\n    beforeInit() {\n      const swiper = this;\n      if (!swiper.params.parallax.enabled) return;\n      swiper.params.watchSlidesProgress = true;\n      swiper.originalParams.watchSlidesProgress = true;\n    },\n    init() {\n      const swiper = this;\n      if (!swiper.params.parallax) return;\n      swiper.parallax.setTranslate();\n    },\n    setTranslate() {\n      const swiper = this;\n      if (!swiper.params.parallax) return;\n      swiper.parallax.setTranslate();\n    },\n    setTransition(duration) {\n      const swiper = this;\n      if (!swiper.params.parallax) return;\n      swiper.parallax.setTransition(duration);\n    },\n  },\n};\n\nconst Zoom = {\n  // Calc Scale From Multi-touches\n  getDistanceBetweenTouches(e) {\n    if (e.targetTouches.length < 2) return 1;\n    const x1 = e.targetTouches[0].pageX;\n    const y1 = e.targetTouches[0].pageY;\n    const x2 = e.targetTouches[1].pageX;\n    const y2 = e.targetTouches[1].pageY;\n    const distance = Math.sqrt(((x2 - x1) ** 2) + ((y2 - y1) ** 2));\n    return distance;\n  },\n  // Events\n  onGestureStart(e) {\n    const swiper = this;\n    const params = swiper.params.zoom;\n    const zoom = swiper.zoom;\n    const { gesture } = zoom;\n    zoom.fakeGestureTouched = false;\n    zoom.fakeGestureMoved = false;\n    if (!Support.gestures) {\n      if (e.type !== 'touchstart' || (e.type === 'touchstart' && e.targetTouches.length < 2)) {\n        return;\n      }\n      zoom.fakeGestureTouched = true;\n      gesture.scaleStart = Zoom.getDistanceBetweenTouches(e);\n    }\n    if (!gesture.$slideEl || !gesture.$slideEl.length) {\n      gesture.$slideEl = $(e.target).closest('.swiper-slide');\n      if (gesture.$slideEl.length === 0) gesture.$slideEl = swiper.slides.eq(swiper.activeIndex);\n      gesture.$imageEl = gesture.$slideEl.find('img, svg, canvas');\n      gesture.$imageWrapEl = gesture.$imageEl.parent(`.${params.containerClass}`);\n      gesture.maxRatio = gesture.$imageWrapEl.attr('data-swiper-zoom') || params.maxRatio;\n      if (gesture.$imageWrapEl.length === 0) {\n        gesture.$imageEl = undefined;\n        return;\n      }\n    }\n    gesture.$imageEl.transition(0);\n    swiper.zoom.isScaling = true;\n  },\n  onGestureChange(e) {\n    const swiper = this;\n    const params = swiper.params.zoom;\n    const zoom = swiper.zoom;\n    const { gesture } = zoom;\n    if (!Support.gestures) {\n      if (e.type !== 'touchmove' || (e.type === 'touchmove' && e.targetTouches.length < 2)) {\n        return;\n      }\n      zoom.fakeGestureMoved = true;\n      gesture.scaleMove = Zoom.getDistanceBetweenTouches(e);\n    }\n    if (!gesture.$imageEl || gesture.$imageEl.length === 0) return;\n    if (Support.gestures) {\n      swiper.zoom.scale = e.scale * zoom.currentScale;\n    } else {\n      zoom.scale = (gesture.scaleMove / gesture.scaleStart) * zoom.currentScale;\n    }\n    if (zoom.scale > gesture.maxRatio) {\n      zoom.scale = (gesture.maxRatio - 1) + (((zoom.scale - gesture.maxRatio) + 1) ** 0.5);\n    }\n    if (zoom.scale < params.minRatio) {\n      zoom.scale = (params.minRatio + 1) - (((params.minRatio - zoom.scale) + 1) ** 0.5);\n    }\n    gesture.$imageEl.transform(`translate3d(0,0,0) scale(${zoom.scale})`);\n  },\n  onGestureEnd(e) {\n    const swiper = this;\n    const params = swiper.params.zoom;\n    const zoom = swiper.zoom;\n    const { gesture } = zoom;\n    if (!Support.gestures) {\n      if (!zoom.fakeGestureTouched || !zoom.fakeGestureMoved) {\n        return;\n      }\n      if (e.type !== 'touchend' || (e.type === 'touchend' && e.changedTouches.length < 2 && !Device.android)) {\n        return;\n      }\n      zoom.fakeGestureTouched = false;\n      zoom.fakeGestureMoved = false;\n    }\n    if (!gesture.$imageEl || gesture.$imageEl.length === 0) return;\n    zoom.scale = Math.max(Math.min(zoom.scale, gesture.maxRatio), params.minRatio);\n    gesture.$imageEl.transition(swiper.params.speed).transform(`translate3d(0,0,0) scale(${zoom.scale})`);\n    zoom.currentScale = zoom.scale;\n    zoom.isScaling = false;\n    if (zoom.scale === 1) gesture.$slideEl = undefined;\n  },\n  onTouchStart(e) {\n    const swiper = this;\n    const zoom = swiper.zoom;\n    const { gesture, image } = zoom;\n    if (!gesture.$imageEl || gesture.$imageEl.length === 0) return;\n    if (image.isTouched) return;\n    if (Device.android) e.preventDefault();\n    image.isTouched = true;\n    image.touchesStart.x = e.type === 'touchstart' ? e.targetTouches[0].pageX : e.pageX;\n    image.touchesStart.y = e.type === 'touchstart' ? e.targetTouches[0].pageY : e.pageY;\n  },\n  onTouchMove(e) {\n    const swiper = this;\n    const zoom = swiper.zoom;\n    const { gesture, image, velocity } = zoom;\n    if (!gesture.$imageEl || gesture.$imageEl.length === 0) return;\n    swiper.allowClick = false;\n    if (!image.isTouched || !gesture.$slideEl) return;\n\n    if (!image.isMoved) {\n      image.width = gesture.$imageEl[0].offsetWidth;\n      image.height = gesture.$imageEl[0].offsetHeight;\n      image.startX = Utils.getTranslate(gesture.$imageWrapEl[0], 'x') || 0;\n      image.startY = Utils.getTranslate(gesture.$imageWrapEl[0], 'y') || 0;\n      gesture.slideWidth = gesture.$slideEl[0].offsetWidth;\n      gesture.slideHeight = gesture.$slideEl[0].offsetHeight;\n      gesture.$imageWrapEl.transition(0);\n      if (swiper.rtl) {\n        image.startX = -image.startX;\n        image.startY = -image.startY;\n      }\n    }\n    // Define if we need image drag\n    const scaledWidth = image.width * zoom.scale;\n    const scaledHeight = image.height * zoom.scale;\n\n    if (scaledWidth < gesture.slideWidth && scaledHeight < gesture.slideHeight) return;\n\n    image.minX = Math.min(((gesture.slideWidth / 2) - (scaledWidth / 2)), 0);\n    image.maxX = -image.minX;\n    image.minY = Math.min(((gesture.slideHeight / 2) - (scaledHeight / 2)), 0);\n    image.maxY = -image.minY;\n\n    image.touchesCurrent.x = e.type === 'touchmove' ? e.targetTouches[0].pageX : e.pageX;\n    image.touchesCurrent.y = e.type === 'touchmove' ? e.targetTouches[0].pageY : e.pageY;\n\n    if (!image.isMoved && !zoom.isScaling) {\n      if (\n        swiper.isHorizontal()\n        && (\n          (Math.floor(image.minX) === Math.floor(image.startX) && image.touchesCurrent.x < image.touchesStart.x)\n          || (Math.floor(image.maxX) === Math.floor(image.startX) && image.touchesCurrent.x > image.touchesStart.x)\n        )\n      ) {\n        image.isTouched = false;\n        return;\n      } if (\n        !swiper.isHorizontal()\n        && (\n          (Math.floor(image.minY) === Math.floor(image.startY) && image.touchesCurrent.y < image.touchesStart.y)\n          || (Math.floor(image.maxY) === Math.floor(image.startY) && image.touchesCurrent.y > image.touchesStart.y)\n        )\n      ) {\n        image.isTouched = false;\n        return;\n      }\n    }\n    e.preventDefault();\n    e.stopPropagation();\n\n    image.isMoved = true;\n    image.currentX = (image.touchesCurrent.x - image.touchesStart.x) + image.startX;\n    image.currentY = (image.touchesCurrent.y - image.touchesStart.y) + image.startY;\n\n    if (image.currentX < image.minX) {\n      image.currentX = (image.minX + 1) - (((image.minX - image.currentX) + 1) ** 0.8);\n    }\n    if (image.currentX > image.maxX) {\n      image.currentX = (image.maxX - 1) + (((image.currentX - image.maxX) + 1) ** 0.8);\n    }\n\n    if (image.currentY < image.minY) {\n      image.currentY = (image.minY + 1) - (((image.minY - image.currentY) + 1) ** 0.8);\n    }\n    if (image.currentY > image.maxY) {\n      image.currentY = (image.maxY - 1) + (((image.currentY - image.maxY) + 1) ** 0.8);\n    }\n\n    // Velocity\n    if (!velocity.prevPositionX) velocity.prevPositionX = image.touchesCurrent.x;\n    if (!velocity.prevPositionY) velocity.prevPositionY = image.touchesCurrent.y;\n    if (!velocity.prevTime) velocity.prevTime = Date.now();\n    velocity.x = (image.touchesCurrent.x - velocity.prevPositionX) / (Date.now() - velocity.prevTime) / 2;\n    velocity.y = (image.touchesCurrent.y - velocity.prevPositionY) / (Date.now() - velocity.prevTime) / 2;\n    if (Math.abs(image.touchesCurrent.x - velocity.prevPositionX) < 2) velocity.x = 0;\n    if (Math.abs(image.touchesCurrent.y - velocity.prevPositionY) < 2) velocity.y = 0;\n    velocity.prevPositionX = image.touchesCurrent.x;\n    velocity.prevPositionY = image.touchesCurrent.y;\n    velocity.prevTime = Date.now();\n\n    gesture.$imageWrapEl.transform(`translate3d(${image.currentX}px, ${image.currentY}px,0)`);\n  },\n  onTouchEnd() {\n    const swiper = this;\n    const zoom = swiper.zoom;\n    const { gesture, image, velocity } = zoom;\n    if (!gesture.$imageEl || gesture.$imageEl.length === 0) return;\n    if (!image.isTouched || !image.isMoved) {\n      image.isTouched = false;\n      image.isMoved = false;\n      return;\n    }\n    image.isTouched = false;\n    image.isMoved = false;\n    let momentumDurationX = 300;\n    let momentumDurationY = 300;\n    const momentumDistanceX = velocity.x * momentumDurationX;\n    const newPositionX = image.currentX + momentumDistanceX;\n    const momentumDistanceY = velocity.y * momentumDurationY;\n    const newPositionY = image.currentY + momentumDistanceY;\n\n    // Fix duration\n    if (velocity.x !== 0) momentumDurationX = Math.abs((newPositionX - image.currentX) / velocity.x);\n    if (velocity.y !== 0) momentumDurationY = Math.abs((newPositionY - image.currentY) / velocity.y);\n    const momentumDuration = Math.max(momentumDurationX, momentumDurationY);\n\n    image.currentX = newPositionX;\n    image.currentY = newPositionY;\n\n    // Define if we need image drag\n    const scaledWidth = image.width * zoom.scale;\n    const scaledHeight = image.height * zoom.scale;\n    image.minX = Math.min(((gesture.slideWidth / 2) - (scaledWidth / 2)), 0);\n    image.maxX = -image.minX;\n    image.minY = Math.min(((gesture.slideHeight / 2) - (scaledHeight / 2)), 0);\n    image.maxY = -image.minY;\n    image.currentX = Math.max(Math.min(image.currentX, image.maxX), image.minX);\n    image.currentY = Math.max(Math.min(image.currentY, image.maxY), image.minY);\n\n    gesture.$imageWrapEl.transition(momentumDuration).transform(`translate3d(${image.currentX}px, ${image.currentY}px,0)`);\n  },\n  onTransitionEnd() {\n    const swiper = this;\n    const zoom = swiper.zoom;\n    const { gesture } = zoom;\n    if (gesture.$slideEl && swiper.previousIndex !== swiper.activeIndex) {\n      gesture.$imageEl.transform('translate3d(0,0,0) scale(1)');\n      gesture.$imageWrapEl.transform('translate3d(0,0,0)');\n      gesture.$slideEl = undefined;\n      gesture.$imageEl = undefined;\n      gesture.$imageWrapEl = undefined;\n\n      zoom.scale = 1;\n      zoom.currentScale = 1;\n    }\n  },\n  // Toggle Zoom\n  toggle(e) {\n    const swiper = this;\n    const zoom = swiper.zoom;\n\n    if (zoom.scale && zoom.scale !== 1) {\n      // Zoom Out\n      zoom.out();\n    } else {\n      // Zoom In\n      zoom.in(e);\n    }\n  },\n  in(e) {\n    const swiper = this;\n\n    const zoom = swiper.zoom;\n    const params = swiper.params.zoom;\n    const { gesture, image } = zoom;\n\n    if (!gesture.$slideEl) {\n      gesture.$slideEl = swiper.clickedSlide ? $(swiper.clickedSlide) : swiper.slides.eq(swiper.activeIndex);\n      gesture.$imageEl = gesture.$slideEl.find('img, svg, canvas');\n      gesture.$imageWrapEl = gesture.$imageEl.parent(`.${params.containerClass}`);\n    }\n    if (!gesture.$imageEl || gesture.$imageEl.length === 0) return;\n\n    gesture.$slideEl.addClass(`${params.zoomedSlideClass}`);\n\n    let touchX;\n    let touchY;\n    let offsetX;\n    let offsetY;\n    let diffX;\n    let diffY;\n    let translateX;\n    let translateY;\n    let imageWidth;\n    let imageHeight;\n    let scaledWidth;\n    let scaledHeight;\n    let translateMinX;\n    let translateMinY;\n    let translateMaxX;\n    let translateMaxY;\n    let slideWidth;\n    let slideHeight;\n\n    if (typeof image.touchesStart.x === 'undefined' && e) {\n      touchX = e.type === 'touchend' ? e.changedTouches[0].pageX : e.pageX;\n      touchY = e.type === 'touchend' ? e.changedTouches[0].pageY : e.pageY;\n    } else {\n      touchX = image.touchesStart.x;\n      touchY = image.touchesStart.y;\n    }\n\n    zoom.scale = gesture.$imageWrapEl.attr('data-swiper-zoom') || params.maxRatio;\n    zoom.currentScale = gesture.$imageWrapEl.attr('data-swiper-zoom') || params.maxRatio;\n    if (e) {\n      slideWidth = gesture.$slideEl[0].offsetWidth;\n      slideHeight = gesture.$slideEl[0].offsetHeight;\n      offsetX = gesture.$slideEl.offset().left;\n      offsetY = gesture.$slideEl.offset().top;\n      diffX = (offsetX + (slideWidth / 2)) - touchX;\n      diffY = (offsetY + (slideHeight / 2)) - touchY;\n\n      imageWidth = gesture.$imageEl[0].offsetWidth;\n      imageHeight = gesture.$imageEl[0].offsetHeight;\n      scaledWidth = imageWidth * zoom.scale;\n      scaledHeight = imageHeight * zoom.scale;\n\n      translateMinX = Math.min(((slideWidth / 2) - (scaledWidth / 2)), 0);\n      translateMinY = Math.min(((slideHeight / 2) - (scaledHeight / 2)), 0);\n      translateMaxX = -translateMinX;\n      translateMaxY = -translateMinY;\n\n      translateX = diffX * zoom.scale;\n      translateY = diffY * zoom.scale;\n\n      if (translateX < translateMinX) {\n        translateX = translateMinX;\n      }\n      if (translateX > translateMaxX) {\n        translateX = translateMaxX;\n      }\n\n      if (translateY < translateMinY) {\n        translateY = translateMinY;\n      }\n      if (translateY > translateMaxY) {\n        translateY = translateMaxY;\n      }\n    } else {\n      translateX = 0;\n      translateY = 0;\n    }\n    gesture.$imageWrapEl.transition(300).transform(`translate3d(${translateX}px, ${translateY}px,0)`);\n    gesture.$imageEl.transition(300).transform(`translate3d(0,0,0) scale(${zoom.scale})`);\n  },\n  out() {\n    const swiper = this;\n\n    const zoom = swiper.zoom;\n    const params = swiper.params.zoom;\n    const { gesture } = zoom;\n\n    if (!gesture.$slideEl) {\n      gesture.$slideEl = swiper.clickedSlide ? $(swiper.clickedSlide) : swiper.slides.eq(swiper.activeIndex);\n      gesture.$imageEl = gesture.$slideEl.find('img, svg, canvas');\n      gesture.$imageWrapEl = gesture.$imageEl.parent(`.${params.containerClass}`);\n    }\n    if (!gesture.$imageEl || gesture.$imageEl.length === 0) return;\n\n    zoom.scale = 1;\n    zoom.currentScale = 1;\n    gesture.$imageWrapEl.transition(300).transform('translate3d(0,0,0)');\n    gesture.$imageEl.transition(300).transform('translate3d(0,0,0) scale(1)');\n    gesture.$slideEl.removeClass(`${params.zoomedSlideClass}`);\n    gesture.$slideEl = undefined;\n  },\n  // Attach/Detach Events\n  enable() {\n    const swiper = this;\n    const zoom = swiper.zoom;\n    if (zoom.enabled) return;\n    zoom.enabled = true;\n\n    const passiveListener = swiper.touchEvents.start === 'touchstart' && Support.passiveListener && swiper.params.passiveListeners ? { passive: true, capture: false } : false;\n\n    // Scale image\n    if (Support.gestures) {\n      swiper.$wrapperEl.on('gesturestart', '.swiper-slide', zoom.onGestureStart, passiveListener);\n      swiper.$wrapperEl.on('gesturechange', '.swiper-slide', zoom.onGestureChange, passiveListener);\n      swiper.$wrapperEl.on('gestureend', '.swiper-slide', zoom.onGestureEnd, passiveListener);\n    } else if (swiper.touchEvents.start === 'touchstart') {\n      swiper.$wrapperEl.on(swiper.touchEvents.start, '.swiper-slide', zoom.onGestureStart, passiveListener);\n      swiper.$wrapperEl.on(swiper.touchEvents.move, '.swiper-slide', zoom.onGestureChange, passiveListener);\n      swiper.$wrapperEl.on(swiper.touchEvents.end, '.swiper-slide', zoom.onGestureEnd, passiveListener);\n    }\n\n    // Move image\n    swiper.$wrapperEl.on(swiper.touchEvents.move, `.${swiper.params.zoom.containerClass}`, zoom.onTouchMove);\n  },\n  disable() {\n    const swiper = this;\n    const zoom = swiper.zoom;\n    if (!zoom.enabled) return;\n\n    swiper.zoom.enabled = false;\n\n    const passiveListener = swiper.touchEvents.start === 'touchstart' && Support.passiveListener && swiper.params.passiveListeners ? { passive: true, capture: false } : false;\n\n    // Scale image\n    if (Support.gestures) {\n      swiper.$wrapperEl.off('gesturestart', '.swiper-slide', zoom.onGestureStart, passiveListener);\n      swiper.$wrapperEl.off('gesturechange', '.swiper-slide', zoom.onGestureChange, passiveListener);\n      swiper.$wrapperEl.off('gestureend', '.swiper-slide', zoom.onGestureEnd, passiveListener);\n    } else if (swiper.touchEvents.start === 'touchstart') {\n      swiper.$wrapperEl.off(swiper.touchEvents.start, '.swiper-slide', zoom.onGestureStart, passiveListener);\n      swiper.$wrapperEl.off(swiper.touchEvents.move, '.swiper-slide', zoom.onGestureChange, passiveListener);\n      swiper.$wrapperEl.off(swiper.touchEvents.end, '.swiper-slide', zoom.onGestureEnd, passiveListener);\n    }\n\n    // Move image\n    swiper.$wrapperEl.off(swiper.touchEvents.move, `.${swiper.params.zoom.containerClass}`, zoom.onTouchMove);\n  },\n};\n\nvar Zoom$1 = {\n  name: 'zoom',\n  params: {\n    zoom: {\n      enabled: false,\n      maxRatio: 3,\n      minRatio: 1,\n      toggle: true,\n      containerClass: 'swiper-zoom-container',\n      zoomedSlideClass: 'swiper-slide-zoomed',\n    },\n  },\n  create() {\n    const swiper = this;\n    const zoom = {\n      enabled: false,\n      scale: 1,\n      currentScale: 1,\n      isScaling: false,\n      gesture: {\n        $slideEl: undefined,\n        slideWidth: undefined,\n        slideHeight: undefined,\n        $imageEl: undefined,\n        $imageWrapEl: undefined,\n        maxRatio: 3,\n      },\n      image: {\n        isTouched: undefined,\n        isMoved: undefined,\n        currentX: undefined,\n        currentY: undefined,\n        minX: undefined,\n        minY: undefined,\n        maxX: undefined,\n        maxY: undefined,\n        width: undefined,\n        height: undefined,\n        startX: undefined,\n        startY: undefined,\n        touchesStart: {},\n        touchesCurrent: {},\n      },\n      velocity: {\n        x: undefined,\n        y: undefined,\n        prevPositionX: undefined,\n        prevPositionY: undefined,\n        prevTime: undefined,\n      },\n    };\n    ('onGestureStart onGestureChange onGestureEnd onTouchStart onTouchMove onTouchEnd onTransitionEnd toggle enable disable in out').split(' ').forEach((methodName) => {\n      zoom[methodName] = Zoom[methodName].bind(swiper);\n    });\n    Utils.extend(swiper, {\n      zoom,\n    });\n  },\n  on: {\n    init() {\n      const swiper = this;\n      if (swiper.params.zoom.enabled) {\n        swiper.zoom.enable();\n      }\n    },\n    destroy() {\n      const swiper = this;\n      swiper.zoom.disable();\n    },\n    touchStart(e) {\n      const swiper = this;\n      if (!swiper.zoom.enabled) return;\n      swiper.zoom.onTouchStart(e);\n    },\n    touchEnd(e) {\n      const swiper = this;\n      if (!swiper.zoom.enabled) return;\n      swiper.zoom.onTouchEnd(e);\n    },\n    doubleTap(e) {\n      const swiper = this;\n      if (swiper.params.zoom.enabled && swiper.zoom.enabled && swiper.params.zoom.toggle) {\n        swiper.zoom.toggle(e);\n      }\n    },\n    transitionEnd() {\n      const swiper = this;\n      if (swiper.zoom.enabled && swiper.params.zoom.enabled) {\n        swiper.zoom.onTransitionEnd();\n      }\n    },\n  },\n};\n\nconst Lazy = {\n  loadInSlide(index$$1, loadInDuplicate = true) {\n    const swiper = this;\n    const params = swiper.params.lazy;\n    if (typeof index$$1 === 'undefined') return;\n    if (swiper.slides.length === 0) return;\n    const isVirtual = swiper.virtual && swiper.params.virtual.enabled;\n\n    const $slideEl = isVirtual\n      ? swiper.$wrapperEl.children(`.${swiper.params.slideClass}[data-swiper-slide-index=\"${index$$1}\"]`)\n      : swiper.slides.eq(index$$1);\n\n    let $images = $slideEl.find(`.${params.elementClass}:not(.${params.loadedClass}):not(.${params.loadingClass})`);\n    if ($slideEl.hasClass(params.elementClass) && !$slideEl.hasClass(params.loadedClass) && !$slideEl.hasClass(params.loadingClass)) {\n      $images = $images.add($slideEl[0]);\n    }\n    if ($images.length === 0) return;\n\n    $images.each((imageIndex, imageEl) => {\n      const $imageEl = $(imageEl);\n      $imageEl.addClass(params.loadingClass);\n\n      const background = $imageEl.attr('data-background');\n      const src = $imageEl.attr('data-src');\n      const srcset = $imageEl.attr('data-srcset');\n      const sizes = $imageEl.attr('data-sizes');\n\n      swiper.loadImage($imageEl[0], (src || background), srcset, sizes, false, () => {\n        if (typeof swiper === 'undefined' || swiper === null || !swiper || (swiper && !swiper.params) || swiper.destroyed) return;\n        if (background) {\n          $imageEl.css('background-image', `url(\"${background}\")`);\n          $imageEl.removeAttr('data-background');\n        } else {\n          if (srcset) {\n            $imageEl.attr('srcset', srcset);\n            $imageEl.removeAttr('data-srcset');\n          }\n          if (sizes) {\n            $imageEl.attr('sizes', sizes);\n            $imageEl.removeAttr('data-sizes');\n          }\n          if (src) {\n            $imageEl.attr('src', src);\n            $imageEl.removeAttr('data-src');\n          }\n        }\n\n        $imageEl.addClass(params.loadedClass).removeClass(params.loadingClass);\n        $slideEl.find(`.${params.preloaderClass}`).remove();\n        if (swiper.params.loop && loadInDuplicate) {\n          const slideOriginalIndex = $slideEl.attr('data-swiper-slide-index');\n          if ($slideEl.hasClass(swiper.params.slideDuplicateClass)) {\n            const originalSlide = swiper.$wrapperEl.children(`[data-swiper-slide-index=\"${slideOriginalIndex}\"]:not(.${swiper.params.slideDuplicateClass})`);\n            swiper.lazy.loadInSlide(originalSlide.index(), false);\n          } else {\n            const duplicatedSlide = swiper.$wrapperEl.children(`.${swiper.params.slideDuplicateClass}[data-swiper-slide-index=\"${slideOriginalIndex}\"]`);\n            swiper.lazy.loadInSlide(duplicatedSlide.index(), false);\n          }\n        }\n        swiper.emit('lazyImageReady', $slideEl[0], $imageEl[0]);\n      });\n\n      swiper.emit('lazyImageLoad', $slideEl[0], $imageEl[0]);\n    });\n  },\n  load() {\n    const swiper = this;\n    const {\n      $wrapperEl, params: swiperParams, slides, activeIndex,\n    } = swiper;\n    const isVirtual = swiper.virtual && swiperParams.virtual.enabled;\n    const params = swiperParams.lazy;\n\n    let slidesPerView = swiperParams.slidesPerView;\n    if (slidesPerView === 'auto') {\n      slidesPerView = 0;\n    }\n\n    function slideExist(index$$1) {\n      if (isVirtual) {\n        if ($wrapperEl.children(`.${swiperParams.slideClass}[data-swiper-slide-index=\"${index$$1}\"]`).length) {\n          return true;\n        }\n      } else if (slides[index$$1]) return true;\n      return false;\n    }\n    function slideIndex(slideEl) {\n      if (isVirtual) {\n        return $(slideEl).attr('data-swiper-slide-index');\n      }\n      return $(slideEl).index();\n    }\n\n    if (!swiper.lazy.initialImageLoaded) swiper.lazy.initialImageLoaded = true;\n    if (swiper.params.watchSlidesVisibility) {\n      $wrapperEl.children(`.${swiperParams.slideVisibleClass}`).each((elIndex, slideEl) => {\n        const index$$1 = isVirtual ? $(slideEl).attr('data-swiper-slide-index') : $(slideEl).index();\n        swiper.lazy.loadInSlide(index$$1);\n      });\n    } else if (slidesPerView > 1) {\n      for (let i = activeIndex; i < activeIndex + slidesPerView; i += 1) {\n        if (slideExist(i)) swiper.lazy.loadInSlide(i);\n      }\n    } else {\n      swiper.lazy.loadInSlide(activeIndex);\n    }\n    if (params.loadPrevNext) {\n      if (slidesPerView > 1 || (params.loadPrevNextAmount && params.loadPrevNextAmount > 1)) {\n        const amount = params.loadPrevNextAmount;\n        const spv = slidesPerView;\n        const maxIndex = Math.min(activeIndex + spv + Math.max(amount, spv), slides.length);\n        const minIndex = Math.max(activeIndex - Math.max(spv, amount), 0);\n        // Next Slides\n        for (let i = activeIndex + slidesPerView; i < maxIndex; i += 1) {\n          if (slideExist(i)) swiper.lazy.loadInSlide(i);\n        }\n        // Prev Slides\n        for (let i = minIndex; i < activeIndex; i += 1) {\n          if (slideExist(i)) swiper.lazy.loadInSlide(i);\n        }\n      } else {\n        const nextSlide = $wrapperEl.children(`.${swiperParams.slideNextClass}`);\n        if (nextSlide.length > 0) swiper.lazy.loadInSlide(slideIndex(nextSlide));\n\n        const prevSlide = $wrapperEl.children(`.${swiperParams.slidePrevClass}`);\n        if (prevSlide.length > 0) swiper.lazy.loadInSlide(slideIndex(prevSlide));\n      }\n    }\n  },\n};\n\nvar Lazy$1 = {\n  name: 'lazy',\n  params: {\n    lazy: {\n      enabled: false,\n      loadPrevNext: false,\n      loadPrevNextAmount: 1,\n      loadOnTransitionStart: false,\n\n      elementClass: 'swiper-lazy',\n      loadingClass: 'swiper-lazy-loading',\n      loadedClass: 'swiper-lazy-loaded',\n      preloaderClass: 'swiper-lazy-preloader',\n    },\n  },\n  create() {\n    const swiper = this;\n    Utils.extend(swiper, {\n      lazy: {\n        initialImageLoaded: false,\n        load: Lazy.load.bind(swiper),\n        loadInSlide: Lazy.loadInSlide.bind(swiper),\n      },\n    });\n  },\n  on: {\n    beforeInit() {\n      const swiper = this;\n      if (swiper.params.lazy.enabled && swiper.params.preloadImages) {\n        swiper.params.preloadImages = false;\n      }\n    },\n    init() {\n      const swiper = this;\n      if (swiper.params.lazy.enabled && !swiper.params.loop && swiper.params.initialSlide === 0) {\n        swiper.lazy.load();\n      }\n    },\n    scroll() {\n      const swiper = this;\n      if (swiper.params.freeMode && !swiper.params.freeModeSticky) {\n        swiper.lazy.load();\n      }\n    },\n    resize() {\n      const swiper = this;\n      if (swiper.params.lazy.enabled) {\n        swiper.lazy.load();\n      }\n    },\n    scrollbarDragMove() {\n      const swiper = this;\n      if (swiper.params.lazy.enabled) {\n        swiper.lazy.load();\n      }\n    },\n    transitionStart() {\n      const swiper = this;\n      if (swiper.params.lazy.enabled) {\n        if (swiper.params.lazy.loadOnTransitionStart || (!swiper.params.lazy.loadOnTransitionStart && !swiper.lazy.initialImageLoaded)) {\n          swiper.lazy.load();\n        }\n      }\n    },\n    transitionEnd() {\n      const swiper = this;\n      if (swiper.params.lazy.enabled && !swiper.params.lazy.loadOnTransitionStart) {\n        swiper.lazy.load();\n      }\n    },\n  },\n};\n\n/* eslint no-bitwise: [\"error\", { \"allow\": [\">>\"] }] */\n\nconst Controller = {\n  LinearSpline: function LinearSpline(x, y) {\n    const binarySearch = (function search() {\n      let maxIndex;\n      let minIndex;\n      let guess;\n      return (array, val) => {\n        minIndex = -1;\n        maxIndex = array.length;\n        while (maxIndex - minIndex > 1) {\n          guess = maxIndex + minIndex >> 1;\n          if (array[guess] <= val) {\n            minIndex = guess;\n          } else {\n            maxIndex = guess;\n          }\n        }\n        return maxIndex;\n      };\n    }());\n    this.x = x;\n    this.y = y;\n    this.lastIndex = x.length - 1;\n    // Given an x value (x2), return the expected y2 value:\n    // (x1,y1) is the known point before given value,\n    // (x3,y3) is the known point after given value.\n    let i1;\n    let i3;\n\n    this.interpolate = function interpolate(x2) {\n      if (!x2) return 0;\n\n      // Get the indexes of x1 and x3 (the array indexes before and after given x2):\n      i3 = binarySearch(this.x, x2);\n      i1 = i3 - 1;\n\n      // We have our indexes i1 & i3, so we can calculate already:\n      // y2 := ((x2−x1) × (y3−y1)) ÷ (x3−x1) + y1\n      return (((x2 - this.x[i1]) * (this.y[i3] - this.y[i1])) / (this.x[i3] - this.x[i1])) + this.y[i1];\n    };\n    return this;\n  },\n  // xxx: for now i will just save one spline function to to\n  getInterpolateFunction(c) {\n    const swiper = this;\n    if (!swiper.controller.spline) {\n      swiper.controller.spline = swiper.params.loop\n        ? new Controller.LinearSpline(swiper.slidesGrid, c.slidesGrid)\n        : new Controller.LinearSpline(swiper.snapGrid, c.snapGrid);\n    }\n  },\n  setTranslate(setTranslate, byController) {\n    const swiper = this;\n    const controlled = swiper.controller.control;\n    let multiplier;\n    let controlledTranslate;\n    function setControlledTranslate(c) {\n      // this will create an Interpolate function based on the snapGrids\n      // x is the Grid of the scrolled scroller and y will be the controlled scroller\n      // it makes sense to create this only once and recall it for the interpolation\n      // the function does a lot of value caching for performance\n      const translate = swiper.rtlTranslate ? -swiper.translate : swiper.translate;\n      if (swiper.params.controller.by === 'slide') {\n        swiper.controller.getInterpolateFunction(c);\n        // i am not sure why the values have to be multiplicated this way, tried to invert the snapGrid\n        // but it did not work out\n        controlledTranslate = -swiper.controller.spline.interpolate(-translate);\n      }\n\n      if (!controlledTranslate || swiper.params.controller.by === 'container') {\n        multiplier = (c.maxTranslate() - c.minTranslate()) / (swiper.maxTranslate() - swiper.minTranslate());\n        controlledTranslate = ((translate - swiper.minTranslate()) * multiplier) + c.minTranslate();\n      }\n\n      if (swiper.params.controller.inverse) {\n        controlledTranslate = c.maxTranslate() - controlledTranslate;\n      }\n      c.updateProgress(controlledTranslate);\n      c.setTranslate(controlledTranslate, swiper);\n      c.updateActiveIndex();\n      c.updateSlidesClasses();\n    }\n    if (Array.isArray(controlled)) {\n      for (let i = 0; i < controlled.length; i += 1) {\n        if (controlled[i] !== byController && controlled[i] instanceof Swiper) {\n          setControlledTranslate(controlled[i]);\n        }\n      }\n    } else if (controlled instanceof Swiper && byController !== controlled) {\n      setControlledTranslate(controlled);\n    }\n  },\n  setTransition(duration, byController) {\n    const swiper = this;\n    const controlled = swiper.controller.control;\n    let i;\n    function setControlledTransition(c) {\n      c.setTransition(duration, swiper);\n      if (duration !== 0) {\n        c.transitionStart();\n        if (c.params.autoHeight) {\n          Utils.nextTick(() => {\n            c.updateAutoHeight();\n          });\n        }\n        c.$wrapperEl.transitionEnd(() => {\n          if (!controlled) return;\n          if (c.params.loop && swiper.params.controller.by === 'slide') {\n            c.loopFix();\n          }\n          c.transitionEnd();\n        });\n      }\n    }\n    if (Array.isArray(controlled)) {\n      for (i = 0; i < controlled.length; i += 1) {\n        if (controlled[i] !== byController && controlled[i] instanceof Swiper) {\n          setControlledTransition(controlled[i]);\n        }\n      }\n    } else if (controlled instanceof Swiper && byController !== controlled) {\n      setControlledTransition(controlled);\n    }\n  },\n};\nvar Controller$1 = {\n  name: 'controller',\n  params: {\n    controller: {\n      control: undefined,\n      inverse: false,\n      by: 'slide', // or 'container'\n    },\n  },\n  create() {\n    const swiper = this;\n    Utils.extend(swiper, {\n      controller: {\n        control: swiper.params.controller.control,\n        getInterpolateFunction: Controller.getInterpolateFunction.bind(swiper),\n        setTranslate: Controller.setTranslate.bind(swiper),\n        setTransition: Controller.setTransition.bind(swiper),\n      },\n    });\n  },\n  on: {\n    update() {\n      const swiper = this;\n      if (!swiper.controller.control) return;\n      if (swiper.controller.spline) {\n        swiper.controller.spline = undefined;\n        delete swiper.controller.spline;\n      }\n    },\n    resize() {\n      const swiper = this;\n      if (!swiper.controller.control) return;\n      if (swiper.controller.spline) {\n        swiper.controller.spline = undefined;\n        delete swiper.controller.spline;\n      }\n    },\n    observerUpdate() {\n      const swiper = this;\n      if (!swiper.controller.control) return;\n      if (swiper.controller.spline) {\n        swiper.controller.spline = undefined;\n        delete swiper.controller.spline;\n      }\n    },\n    setTranslate(translate, byController) {\n      const swiper = this;\n      if (!swiper.controller.control) return;\n      swiper.controller.setTranslate(translate, byController);\n    },\n    setTransition(duration, byController) {\n      const swiper = this;\n      if (!swiper.controller.control) return;\n      swiper.controller.setTransition(duration, byController);\n    },\n  },\n};\n\nconst a11y = {\n  makeElFocusable($el) {\n    $el.attr('tabIndex', '0');\n    return $el;\n  },\n  addElRole($el, role) {\n    $el.attr('role', role);\n    return $el;\n  },\n  addElLabel($el, label) {\n    $el.attr('aria-label', label);\n    return $el;\n  },\n  disableEl($el) {\n    $el.attr('aria-disabled', true);\n    return $el;\n  },\n  enableEl($el) {\n    $el.attr('aria-disabled', false);\n    return $el;\n  },\n  onEnterKey(e) {\n    const swiper = this;\n    const params = swiper.params.a11y;\n    if (e.keyCode !== 13) return;\n    const $targetEl = $(e.target);\n    if (swiper.navigation && swiper.navigation.$nextEl && $targetEl.is(swiper.navigation.$nextEl)) {\n      if (!(swiper.isEnd && !swiper.params.loop)) {\n        swiper.slideNext();\n      }\n      if (swiper.isEnd) {\n        swiper.a11y.notify(params.lastSlideMessage);\n      } else {\n        swiper.a11y.notify(params.nextSlideMessage);\n      }\n    }\n    if (swiper.navigation && swiper.navigation.$prevEl && $targetEl.is(swiper.navigation.$prevEl)) {\n      if (!(swiper.isBeginning && !swiper.params.loop)) {\n        swiper.slidePrev();\n      }\n      if (swiper.isBeginning) {\n        swiper.a11y.notify(params.firstSlideMessage);\n      } else {\n        swiper.a11y.notify(params.prevSlideMessage);\n      }\n    }\n    if (swiper.pagination && $targetEl.is(`.${swiper.params.pagination.bulletClass}`)) {\n      $targetEl[0].click();\n    }\n  },\n  notify(message) {\n    const swiper = this;\n    const notification = swiper.a11y.liveRegion;\n    if (notification.length === 0) return;\n    notification.html('');\n    notification.html(message);\n  },\n  updateNavigation() {\n    const swiper = this;\n\n    if (swiper.params.loop) return;\n    const { $nextEl, $prevEl } = swiper.navigation;\n\n    if ($prevEl && $prevEl.length > 0) {\n      if (swiper.isBeginning) {\n        swiper.a11y.disableEl($prevEl);\n      } else {\n        swiper.a11y.enableEl($prevEl);\n      }\n    }\n    if ($nextEl && $nextEl.length > 0) {\n      if (swiper.isEnd) {\n        swiper.a11y.disableEl($nextEl);\n      } else {\n        swiper.a11y.enableEl($nextEl);\n      }\n    }\n  },\n  updatePagination() {\n    const swiper = this;\n    const params = swiper.params.a11y;\n    if (swiper.pagination && swiper.params.pagination.clickable && swiper.pagination.bullets && swiper.pagination.bullets.length) {\n      swiper.pagination.bullets.each((bulletIndex, bulletEl) => {\n        const $bulletEl = $(bulletEl);\n        swiper.a11y.makeElFocusable($bulletEl);\n        swiper.a11y.addElRole($bulletEl, 'button');\n        swiper.a11y.addElLabel($bulletEl, params.paginationBulletMessage.replace(/{{index}}/, $bulletEl.index() + 1));\n      });\n    }\n  },\n  init() {\n    const swiper = this;\n\n    swiper.$el.append(swiper.a11y.liveRegion);\n\n    // Navigation\n    const params = swiper.params.a11y;\n    let $nextEl;\n    let $prevEl;\n    if (swiper.navigation && swiper.navigation.$nextEl) {\n      $nextEl = swiper.navigation.$nextEl;\n    }\n    if (swiper.navigation && swiper.navigation.$prevEl) {\n      $prevEl = swiper.navigation.$prevEl;\n    }\n    if ($nextEl) {\n      swiper.a11y.makeElFocusable($nextEl);\n      swiper.a11y.addElRole($nextEl, 'button');\n      swiper.a11y.addElLabel($nextEl, params.nextSlideMessage);\n      $nextEl.on('keydown', swiper.a11y.onEnterKey);\n    }\n    if ($prevEl) {\n      swiper.a11y.makeElFocusable($prevEl);\n      swiper.a11y.addElRole($prevEl, 'button');\n      swiper.a11y.addElLabel($prevEl, params.prevSlideMessage);\n      $prevEl.on('keydown', swiper.a11y.onEnterKey);\n    }\n\n    // Pagination\n    if (swiper.pagination && swiper.params.pagination.clickable && swiper.pagination.bullets && swiper.pagination.bullets.length) {\n      swiper.pagination.$el.on('keydown', `.${swiper.params.pagination.bulletClass}`, swiper.a11y.onEnterKey);\n    }\n  },\n  destroy() {\n    const swiper = this;\n    if (swiper.a11y.liveRegion && swiper.a11y.liveRegion.length > 0) swiper.a11y.liveRegion.remove();\n\n    let $nextEl;\n    let $prevEl;\n    if (swiper.navigation && swiper.navigation.$nextEl) {\n      $nextEl = swiper.navigation.$nextEl;\n    }\n    if (swiper.navigation && swiper.navigation.$prevEl) {\n      $prevEl = swiper.navigation.$prevEl;\n    }\n    if ($nextEl) {\n      $nextEl.off('keydown', swiper.a11y.onEnterKey);\n    }\n    if ($prevEl) {\n      $prevEl.off('keydown', swiper.a11y.onEnterKey);\n    }\n\n    // Pagination\n    if (swiper.pagination && swiper.params.pagination.clickable && swiper.pagination.bullets && swiper.pagination.bullets.length) {\n      swiper.pagination.$el.off('keydown', `.${swiper.params.pagination.bulletClass}`, swiper.a11y.onEnterKey);\n    }\n  },\n};\nvar A11y = {\n  name: 'a11y',\n  params: {\n    a11y: {\n      enabled: true,\n      notificationClass: 'swiper-notification',\n      prevSlideMessage: 'Previous slide',\n      nextSlideMessage: 'Next slide',\n      firstSlideMessage: 'This is the first slide',\n      lastSlideMessage: 'This is the last slide',\n      paginationBulletMessage: 'Go to slide {{index}}',\n    },\n  },\n  create() {\n    const swiper = this;\n    Utils.extend(swiper, {\n      a11y: {\n        liveRegion: $(`<span class=\"${swiper.params.a11y.notificationClass}\" aria-live=\"assertive\" aria-atomic=\"true\"></span>`),\n      },\n    });\n    Object.keys(a11y).forEach((methodName) => {\n      swiper.a11y[methodName] = a11y[methodName].bind(swiper);\n    });\n  },\n  on: {\n    init() {\n      const swiper = this;\n      if (!swiper.params.a11y.enabled) return;\n      swiper.a11y.init();\n      swiper.a11y.updateNavigation();\n    },\n    toEdge() {\n      const swiper = this;\n      if (!swiper.params.a11y.enabled) return;\n      swiper.a11y.updateNavigation();\n    },\n    fromEdge() {\n      const swiper = this;\n      if (!swiper.params.a11y.enabled) return;\n      swiper.a11y.updateNavigation();\n    },\n    paginationUpdate() {\n      const swiper = this;\n      if (!swiper.params.a11y.enabled) return;\n      swiper.a11y.updatePagination();\n    },\n    destroy() {\n      const swiper = this;\n      if (!swiper.params.a11y.enabled) return;\n      swiper.a11y.destroy();\n    },\n  },\n};\n\nconst History = {\n  init() {\n    const swiper = this;\n    if (!swiper.params.history) return;\n    if (!window.history || !window.history.pushState) {\n      swiper.params.history.enabled = false;\n      swiper.params.hashNavigation.enabled = true;\n      return;\n    }\n    const history = swiper.history;\n    history.initialized = true;\n    history.paths = History.getPathValues();\n    if (!history.paths.key && !history.paths.value) return;\n    history.scrollToSlide(0, history.paths.value, swiper.params.runCallbacksOnInit);\n    if (!swiper.params.history.replaceState) {\n      window.addEventListener('popstate', swiper.history.setHistoryPopState);\n    }\n  },\n  destroy() {\n    const swiper = this;\n    if (!swiper.params.history.replaceState) {\n      window.removeEventListener('popstate', swiper.history.setHistoryPopState);\n    }\n  },\n  setHistoryPopState() {\n    const swiper = this;\n    swiper.history.paths = History.getPathValues();\n    swiper.history.scrollToSlide(swiper.params.speed, swiper.history.paths.value, false);\n  },\n  getPathValues() {\n    const pathArray = window.location.pathname.slice(1).split('/').filter(part => part !== '');\n    const total = pathArray.length;\n    const key = pathArray[total - 2];\n    const value = pathArray[total - 1];\n    return { key, value };\n  },\n  setHistory(key, index$$1) {\n    const swiper = this;\n    if (!swiper.history.initialized || !swiper.params.history.enabled) return;\n    const slide = swiper.slides.eq(index$$1);\n    let value = History.slugify(slide.attr('data-history'));\n    if (!window.location.pathname.includes(key)) {\n      value = `${key}/${value}`;\n    }\n    const currentState = window.history.state;\n    if (currentState && currentState.value === value) {\n      return;\n    }\n    if (swiper.params.history.replaceState) {\n      window.history.replaceState({ value }, null, value);\n    } else {\n      window.history.pushState({ value }, null, value);\n    }\n  },\n  slugify(text$$1) {\n    return text$$1.toString().toLowerCase()\n      .replace(/\\s+/g, '-')\n      .replace(/[^\\w-]+/g, '')\n      .replace(/--+/g, '-')\n      .replace(/^-+/, '')\n      .replace(/-+$/, '');\n  },\n  scrollToSlide(speed, value, runCallbacks) {\n    const swiper = this;\n    if (value) {\n      for (let i = 0, length = swiper.slides.length; i < length; i += 1) {\n        const slide = swiper.slides.eq(i);\n        const slideHistory = History.slugify(slide.attr('data-history'));\n        if (slideHistory === value && !slide.hasClass(swiper.params.slideDuplicateClass)) {\n          const index$$1 = slide.index();\n          swiper.slideTo(index$$1, speed, runCallbacks);\n        }\n      }\n    } else {\n      swiper.slideTo(0, speed, runCallbacks);\n    }\n  },\n};\n\nvar History$1 = {\n  name: 'history',\n  params: {\n    history: {\n      enabled: false,\n      replaceState: false,\n      key: 'slides',\n    },\n  },\n  create() {\n    const swiper = this;\n    Utils.extend(swiper, {\n      history: {\n        init: History.init.bind(swiper),\n        setHistory: History.setHistory.bind(swiper),\n        setHistoryPopState: History.setHistoryPopState.bind(swiper),\n        scrollToSlide: History.scrollToSlide.bind(swiper),\n        destroy: History.destroy.bind(swiper),\n      },\n    });\n  },\n  on: {\n    init() {\n      const swiper = this;\n      if (swiper.params.history.enabled) {\n        swiper.history.init();\n      }\n    },\n    destroy() {\n      const swiper = this;\n      if (swiper.params.history.enabled) {\n        swiper.history.destroy();\n      }\n    },\n    transitionEnd() {\n      const swiper = this;\n      if (swiper.history.initialized) {\n        swiper.history.setHistory(swiper.params.history.key, swiper.activeIndex);\n      }\n    },\n  },\n};\n\nconst HashNavigation = {\n  onHashCange() {\n    const swiper = this;\n    const newHash = document.location.hash.replace('#', '');\n    const activeSlideHash = swiper.slides.eq(swiper.activeIndex).attr('data-hash');\n    if (newHash !== activeSlideHash) {\n      const newIndex = swiper.$wrapperEl.children(`.${swiper.params.slideClass}[data-hash=\"${newHash}\"]`).index();\n      if (typeof newIndex === 'undefined') return;\n      swiper.slideTo(newIndex);\n    }\n  },\n  setHash() {\n    const swiper = this;\n    if (!swiper.hashNavigation.initialized || !swiper.params.hashNavigation.enabled) return;\n    if (swiper.params.hashNavigation.replaceState && window.history && window.history.replaceState) {\n      window.history.replaceState(null, null, (`#${swiper.slides.eq(swiper.activeIndex).attr('data-hash')}` || ''));\n    } else {\n      const slide = swiper.slides.eq(swiper.activeIndex);\n      const hash = slide.attr('data-hash') || slide.attr('data-history');\n      document.location.hash = hash || '';\n    }\n  },\n  init() {\n    const swiper = this;\n    if (!swiper.params.hashNavigation.enabled || (swiper.params.history && swiper.params.history.enabled)) return;\n    swiper.hashNavigation.initialized = true;\n    const hash = document.location.hash.replace('#', '');\n    if (hash) {\n      const speed = 0;\n      for (let i = 0, length = swiper.slides.length; i < length; i += 1) {\n        const slide = swiper.slides.eq(i);\n        const slideHash = slide.attr('data-hash') || slide.attr('data-history');\n        if (slideHash === hash && !slide.hasClass(swiper.params.slideDuplicateClass)) {\n          const index$$1 = slide.index();\n          swiper.slideTo(index$$1, speed, swiper.params.runCallbacksOnInit, true);\n        }\n      }\n    }\n    if (swiper.params.hashNavigation.watchState) {\n      $(window).on('hashchange', swiper.hashNavigation.onHashCange);\n    }\n  },\n  destroy() {\n    const swiper = this;\n    if (swiper.params.hashNavigation.watchState) {\n      $(window).off('hashchange', swiper.hashNavigation.onHashCange);\n    }\n  },\n};\nvar HashNavigation$1 = {\n  name: 'hash-navigation',\n  params: {\n    hashNavigation: {\n      enabled: false,\n      replaceState: false,\n      watchState: false,\n    },\n  },\n  create() {\n    const swiper = this;\n    Utils.extend(swiper, {\n      hashNavigation: {\n        initialized: false,\n        init: HashNavigation.init.bind(swiper),\n        destroy: HashNavigation.destroy.bind(swiper),\n        setHash: HashNavigation.setHash.bind(swiper),\n        onHashCange: HashNavigation.onHashCange.bind(swiper),\n      },\n    });\n  },\n  on: {\n    init() {\n      const swiper = this;\n      if (swiper.params.hashNavigation.enabled) {\n        swiper.hashNavigation.init();\n      }\n    },\n    destroy() {\n      const swiper = this;\n      if (swiper.params.hashNavigation.enabled) {\n        swiper.hashNavigation.destroy();\n      }\n    },\n    transitionEnd() {\n      const swiper = this;\n      if (swiper.hashNavigation.initialized) {\n        swiper.hashNavigation.setHash();\n      }\n    },\n  },\n};\n\n/* eslint no-underscore-dangle: \"off\" */\n\nconst Autoplay = {\n  run() {\n    const swiper = this;\n    const $activeSlideEl = swiper.slides.eq(swiper.activeIndex);\n    let delay = swiper.params.autoplay.delay;\n    if ($activeSlideEl.attr('data-swiper-autoplay')) {\n      delay = $activeSlideEl.attr('data-swiper-autoplay') || swiper.params.autoplay.delay;\n    }\n    swiper.autoplay.timeout = Utils.nextTick(() => {\n      if (swiper.params.autoplay.reverseDirection) {\n        if (swiper.params.loop) {\n          swiper.loopFix();\n          swiper.slidePrev(swiper.params.speed, true, true);\n          swiper.emit('autoplay');\n        } else if (!swiper.isBeginning) {\n          swiper.slidePrev(swiper.params.speed, true, true);\n          swiper.emit('autoplay');\n        } else if (!swiper.params.autoplay.stopOnLastSlide) {\n          swiper.slideTo(swiper.slides.length - 1, swiper.params.speed, true, true);\n          swiper.emit('autoplay');\n        } else {\n          swiper.autoplay.stop();\n        }\n      } else if (swiper.params.loop) {\n        swiper.loopFix();\n        swiper.slideNext(swiper.params.speed, true, true);\n        swiper.emit('autoplay');\n      } else if (!swiper.isEnd) {\n        swiper.slideNext(swiper.params.speed, true, true);\n        swiper.emit('autoplay');\n      } else if (!swiper.params.autoplay.stopOnLastSlide) {\n        swiper.slideTo(0, swiper.params.speed, true, true);\n        swiper.emit('autoplay');\n      } else {\n        swiper.autoplay.stop();\n      }\n    }, delay);\n  },\n  start() {\n    const swiper = this;\n    if (typeof swiper.autoplay.timeout !== 'undefined') return false;\n    if (swiper.autoplay.running) return false;\n    swiper.autoplay.running = true;\n    swiper.emit('autoplayStart');\n    swiper.autoplay.run();\n    return true;\n  },\n  stop() {\n    const swiper = this;\n    if (!swiper.autoplay.running) return false;\n    if (typeof swiper.autoplay.timeout === 'undefined') return false;\n\n    if (swiper.autoplay.timeout) {\n      clearTimeout(swiper.autoplay.timeout);\n      swiper.autoplay.timeout = undefined;\n    }\n    swiper.autoplay.running = false;\n    swiper.emit('autoplayStop');\n    return true;\n  },\n  pause(speed) {\n    const swiper = this;\n    if (!swiper.autoplay.running) return;\n    if (swiper.autoplay.paused) return;\n    if (swiper.autoplay.timeout) clearTimeout(swiper.autoplay.timeout);\n    swiper.autoplay.paused = true;\n    if (speed === 0 || !swiper.params.autoplay.waitForTransition) {\n      swiper.autoplay.paused = false;\n      swiper.autoplay.run();\n    } else {\n      swiper.$wrapperEl[0].addEventListener('transitionend', swiper.autoplay.onTransitionEnd);\n      swiper.$wrapperEl[0].addEventListener('webkitTransitionEnd', swiper.autoplay.onTransitionEnd);\n    }\n  },\n};\n\nvar Autoplay$1 = {\n  name: 'autoplay',\n  params: {\n    autoplay: {\n      enabled: false,\n      delay: 3000,\n      waitForTransition: true,\n      disableOnInteraction: true,\n      stopOnLastSlide: false,\n      reverseDirection: false,\n    },\n  },\n  create() {\n    const swiper = this;\n    Utils.extend(swiper, {\n      autoplay: {\n        running: false,\n        paused: false,\n        run: Autoplay.run.bind(swiper),\n        start: Autoplay.start.bind(swiper),\n        stop: Autoplay.stop.bind(swiper),\n        pause: Autoplay.pause.bind(swiper),\n        onTransitionEnd(e) {\n          if (!swiper || swiper.destroyed || !swiper.$wrapperEl) return;\n          if (e.target !== this) return;\n          swiper.$wrapperEl[0].removeEventListener('transitionend', swiper.autoplay.onTransitionEnd);\n          swiper.$wrapperEl[0].removeEventListener('webkitTransitionEnd', swiper.autoplay.onTransitionEnd);\n          swiper.autoplay.paused = false;\n          if (!swiper.autoplay.running) {\n            swiper.autoplay.stop();\n          } else {\n            swiper.autoplay.run();\n          }\n        },\n      },\n    });\n  },\n  on: {\n    init() {\n      const swiper = this;\n      if (swiper.params.autoplay.enabled) {\n        swiper.autoplay.start();\n      }\n    },\n    beforeTransitionStart(speed, internal) {\n      const swiper = this;\n      if (swiper.autoplay.running) {\n        if (internal || !swiper.params.autoplay.disableOnInteraction) {\n          swiper.autoplay.pause(speed);\n        } else {\n          swiper.autoplay.stop();\n        }\n      }\n    },\n    sliderFirstMove() {\n      const swiper = this;\n      if (swiper.autoplay.running) {\n        if (swiper.params.autoplay.disableOnInteraction) {\n          swiper.autoplay.stop();\n        } else {\n          swiper.autoplay.pause();\n        }\n      }\n    },\n    destroy() {\n      const swiper = this;\n      if (swiper.autoplay.running) {\n        swiper.autoplay.stop();\n      }\n    },\n  },\n};\n\nconst Fade = {\n  setTranslate() {\n    const swiper = this;\n    const { slides } = swiper;\n    for (let i = 0; i < slides.length; i += 1) {\n      const $slideEl = swiper.slides.eq(i);\n      const offset$$1 = $slideEl[0].swiperSlideOffset;\n      let tx = -offset$$1;\n      if (!swiper.params.virtualTranslate) tx -= swiper.translate;\n      let ty = 0;\n      if (!swiper.isHorizontal()) {\n        ty = tx;\n        tx = 0;\n      }\n      const slideOpacity = swiper.params.fadeEffect.crossFade\n        ? Math.max(1 - Math.abs($slideEl[0].progress), 0)\n        : 1 + Math.min(Math.max($slideEl[0].progress, -1), 0);\n      $slideEl\n        .css({\n          opacity: slideOpacity,\n        })\n        .transform(`translate3d(${tx}px, ${ty}px, 0px)`);\n    }\n  },\n  setTransition(duration) {\n    const swiper = this;\n    const { slides, $wrapperEl } = swiper;\n    slides.transition(duration);\n    if (swiper.params.virtualTranslate && duration !== 0) {\n      let eventTriggered = false;\n      slides.transitionEnd(() => {\n        if (eventTriggered) return;\n        if (!swiper || swiper.destroyed) return;\n        eventTriggered = true;\n        swiper.animating = false;\n        const triggerEvents = ['webkitTransitionEnd', 'transitionend'];\n        for (let i = 0; i < triggerEvents.length; i += 1) {\n          $wrapperEl.trigger(triggerEvents[i]);\n        }\n      });\n    }\n  },\n};\n\nvar EffectFade = {\n  name: 'effect-fade',\n  params: {\n    fadeEffect: {\n      crossFade: false,\n    },\n  },\n  create() {\n    const swiper = this;\n    Utils.extend(swiper, {\n      fadeEffect: {\n        setTranslate: Fade.setTranslate.bind(swiper),\n        setTransition: Fade.setTransition.bind(swiper),\n      },\n    });\n  },\n  on: {\n    beforeInit() {\n      const swiper = this;\n      if (swiper.params.effect !== 'fade') return;\n      swiper.classNames.push(`${swiper.params.containerModifierClass}fade`);\n      const overwriteParams = {\n        slidesPerView: 1,\n        slidesPerColumn: 1,\n        slidesPerGroup: 1,\n        watchSlidesProgress: true,\n        spaceBetween: 0,\n        virtualTranslate: true,\n      };\n      Utils.extend(swiper.params, overwriteParams);\n      Utils.extend(swiper.originalParams, overwriteParams);\n    },\n    setTranslate() {\n      const swiper = this;\n      if (swiper.params.effect !== 'fade') return;\n      swiper.fadeEffect.setTranslate();\n    },\n    setTransition(duration) {\n      const swiper = this;\n      if (swiper.params.effect !== 'fade') return;\n      swiper.fadeEffect.setTransition(duration);\n    },\n  },\n};\n\nconst Cube = {\n  setTranslate() {\n    const swiper = this;\n    const {\n      $el, $wrapperEl, slides, width: swiperWidth, height: swiperHeight, rtlTranslate: rtl, size: swiperSize,\n    } = swiper;\n    const params = swiper.params.cubeEffect;\n    const isHorizontal = swiper.isHorizontal();\n    const isVirtual = swiper.virtual && swiper.params.virtual.enabled;\n    let wrapperRotate = 0;\n    let $cubeShadowEl;\n    if (params.shadow) {\n      if (isHorizontal) {\n        $cubeShadowEl = $wrapperEl.find('.swiper-cube-shadow');\n        if ($cubeShadowEl.length === 0) {\n          $cubeShadowEl = $('<div class=\"swiper-cube-shadow\"></div>');\n          $wrapperEl.append($cubeShadowEl);\n        }\n        $cubeShadowEl.css({ height: `${swiperWidth}px` });\n      } else {\n        $cubeShadowEl = $el.find('.swiper-cube-shadow');\n        if ($cubeShadowEl.length === 0) {\n          $cubeShadowEl = $('<div class=\"swiper-cube-shadow\"></div>');\n          $el.append($cubeShadowEl);\n        }\n      }\n    }\n    for (let i = 0; i < slides.length; i += 1) {\n      const $slideEl = slides.eq(i);\n      let slideIndex = i;\n      if (isVirtual) {\n        slideIndex = parseInt($slideEl.attr('data-swiper-slide-index'), 10);\n      }\n      let slideAngle = slideIndex * 90;\n      let round = Math.floor(slideAngle / 360);\n      if (rtl) {\n        slideAngle = -slideAngle;\n        round = Math.floor(-slideAngle / 360);\n      }\n      const progress = Math.max(Math.min($slideEl[0].progress, 1), -1);\n      let tx = 0;\n      let ty = 0;\n      let tz = 0;\n      if (slideIndex % 4 === 0) {\n        tx = -round * 4 * swiperSize;\n        tz = 0;\n      } else if ((slideIndex - 1) % 4 === 0) {\n        tx = 0;\n        tz = -round * 4 * swiperSize;\n      } else if ((slideIndex - 2) % 4 === 0) {\n        tx = swiperSize + (round * 4 * swiperSize);\n        tz = swiperSize;\n      } else if ((slideIndex - 3) % 4 === 0) {\n        tx = -swiperSize;\n        tz = (3 * swiperSize) + (swiperSize * 4 * round);\n      }\n      if (rtl) {\n        tx = -tx;\n      }\n\n      if (!isHorizontal) {\n        ty = tx;\n        tx = 0;\n      }\n\n      const transform$$1 = `rotateX(${isHorizontal ? 0 : -slideAngle}deg) rotateY(${isHorizontal ? slideAngle : 0}deg) translate3d(${tx}px, ${ty}px, ${tz}px)`;\n      if (progress <= 1 && progress > -1) {\n        wrapperRotate = (slideIndex * 90) + (progress * 90);\n        if (rtl) wrapperRotate = (-slideIndex * 90) - (progress * 90);\n      }\n      $slideEl.transform(transform$$1);\n      if (params.slideShadows) {\n        // Set shadows\n        let shadowBefore = isHorizontal ? $slideEl.find('.swiper-slide-shadow-left') : $slideEl.find('.swiper-slide-shadow-top');\n        let shadowAfter = isHorizontal ? $slideEl.find('.swiper-slide-shadow-right') : $slideEl.find('.swiper-slide-shadow-bottom');\n        if (shadowBefore.length === 0) {\n          shadowBefore = $(`<div class=\"swiper-slide-shadow-${isHorizontal ? 'left' : 'top'}\"></div>`);\n          $slideEl.append(shadowBefore);\n        }\n        if (shadowAfter.length === 0) {\n          shadowAfter = $(`<div class=\"swiper-slide-shadow-${isHorizontal ? 'right' : 'bottom'}\"></div>`);\n          $slideEl.append(shadowAfter);\n        }\n        if (shadowBefore.length) shadowBefore[0].style.opacity = Math.max(-progress, 0);\n        if (shadowAfter.length) shadowAfter[0].style.opacity = Math.max(progress, 0);\n      }\n    }\n    $wrapperEl.css({\n      '-webkit-transform-origin': `50% 50% -${swiperSize / 2}px`,\n      '-moz-transform-origin': `50% 50% -${swiperSize / 2}px`,\n      '-ms-transform-origin': `50% 50% -${swiperSize / 2}px`,\n      'transform-origin': `50% 50% -${swiperSize / 2}px`,\n    });\n\n    if (params.shadow) {\n      if (isHorizontal) {\n        $cubeShadowEl.transform(`translate3d(0px, ${(swiperWidth / 2) + params.shadowOffset}px, ${-swiperWidth / 2}px) rotateX(90deg) rotateZ(0deg) scale(${params.shadowScale})`);\n      } else {\n        const shadowAngle = Math.abs(wrapperRotate) - (Math.floor(Math.abs(wrapperRotate) / 90) * 90);\n        const multiplier = 1.5 - (\n          (Math.sin((shadowAngle * 2 * Math.PI) / 360) / 2)\n          + (Math.cos((shadowAngle * 2 * Math.PI) / 360) / 2)\n        );\n        const scale1 = params.shadowScale;\n        const scale2 = params.shadowScale / multiplier;\n        const offset$$1 = params.shadowOffset;\n        $cubeShadowEl.transform(`scale3d(${scale1}, 1, ${scale2}) translate3d(0px, ${(swiperHeight / 2) + offset$$1}px, ${-swiperHeight / 2 / scale2}px) rotateX(-90deg)`);\n      }\n    }\n    const zFactor = (Browser.isSafari || Browser.isUiWebView) ? (-swiperSize / 2) : 0;\n    $wrapperEl\n      .transform(`translate3d(0px,0,${zFactor}px) rotateX(${swiper.isHorizontal() ? 0 : wrapperRotate}deg) rotateY(${swiper.isHorizontal() ? -wrapperRotate : 0}deg)`);\n  },\n  setTransition(duration) {\n    const swiper = this;\n    const { $el, slides } = swiper;\n    slides\n      .transition(duration)\n      .find('.swiper-slide-shadow-top, .swiper-slide-shadow-right, .swiper-slide-shadow-bottom, .swiper-slide-shadow-left')\n      .transition(duration);\n    if (swiper.params.cubeEffect.shadow && !swiper.isHorizontal()) {\n      $el.find('.swiper-cube-shadow').transition(duration);\n    }\n  },\n};\n\nvar EffectCube = {\n  name: 'effect-cube',\n  params: {\n    cubeEffect: {\n      slideShadows: true,\n      shadow: true,\n      shadowOffset: 20,\n      shadowScale: 0.94,\n    },\n  },\n  create() {\n    const swiper = this;\n    Utils.extend(swiper, {\n      cubeEffect: {\n        setTranslate: Cube.setTranslate.bind(swiper),\n        setTransition: Cube.setTransition.bind(swiper),\n      },\n    });\n  },\n  on: {\n    beforeInit() {\n      const swiper = this;\n      if (swiper.params.effect !== 'cube') return;\n      swiper.classNames.push(`${swiper.params.containerModifierClass}cube`);\n      swiper.classNames.push(`${swiper.params.containerModifierClass}3d`);\n      const overwriteParams = {\n        slidesPerView: 1,\n        slidesPerColumn: 1,\n        slidesPerGroup: 1,\n        watchSlidesProgress: true,\n        resistanceRatio: 0,\n        spaceBetween: 0,\n        centeredSlides: false,\n        virtualTranslate: true,\n      };\n      Utils.extend(swiper.params, overwriteParams);\n      Utils.extend(swiper.originalParams, overwriteParams);\n    },\n    setTranslate() {\n      const swiper = this;\n      if (swiper.params.effect !== 'cube') return;\n      swiper.cubeEffect.setTranslate();\n    },\n    setTransition(duration) {\n      const swiper = this;\n      if (swiper.params.effect !== 'cube') return;\n      swiper.cubeEffect.setTransition(duration);\n    },\n  },\n};\n\nconst Flip = {\n  setTranslate() {\n    const swiper = this;\n    const { slides, rtlTranslate: rtl } = swiper;\n    for (let i = 0; i < slides.length; i += 1) {\n      const $slideEl = slides.eq(i);\n      let progress = $slideEl[0].progress;\n      if (swiper.params.flipEffect.limitRotation) {\n        progress = Math.max(Math.min($slideEl[0].progress, 1), -1);\n      }\n      const offset$$1 = $slideEl[0].swiperSlideOffset;\n      const rotate = -180 * progress;\n      let rotateY = rotate;\n      let rotateX = 0;\n      let tx = -offset$$1;\n      let ty = 0;\n      if (!swiper.isHorizontal()) {\n        ty = tx;\n        tx = 0;\n        rotateX = -rotateY;\n        rotateY = 0;\n      } else if (rtl) {\n        rotateY = -rotateY;\n      }\n\n      $slideEl[0].style.zIndex = -Math.abs(Math.round(progress)) + slides.length;\n\n      if (swiper.params.flipEffect.slideShadows) {\n        // Set shadows\n        let shadowBefore = swiper.isHorizontal() ? $slideEl.find('.swiper-slide-shadow-left') : $slideEl.find('.swiper-slide-shadow-top');\n        let shadowAfter = swiper.isHorizontal() ? $slideEl.find('.swiper-slide-shadow-right') : $slideEl.find('.swiper-slide-shadow-bottom');\n        if (shadowBefore.length === 0) {\n          shadowBefore = $(`<div class=\"swiper-slide-shadow-${swiper.isHorizontal() ? 'left' : 'top'}\"></div>`);\n          $slideEl.append(shadowBefore);\n        }\n        if (shadowAfter.length === 0) {\n          shadowAfter = $(`<div class=\"swiper-slide-shadow-${swiper.isHorizontal() ? 'right' : 'bottom'}\"></div>`);\n          $slideEl.append(shadowAfter);\n        }\n        if (shadowBefore.length) shadowBefore[0].style.opacity = Math.max(-progress, 0);\n        if (shadowAfter.length) shadowAfter[0].style.opacity = Math.max(progress, 0);\n      }\n      $slideEl\n        .transform(`translate3d(${tx}px, ${ty}px, 0px) rotateX(${rotateX}deg) rotateY(${rotateY}deg)`);\n    }\n  },\n  setTransition(duration) {\n    const swiper = this;\n    const { slides, activeIndex, $wrapperEl } = swiper;\n    slides\n      .transition(duration)\n      .find('.swiper-slide-shadow-top, .swiper-slide-shadow-right, .swiper-slide-shadow-bottom, .swiper-slide-shadow-left')\n      .transition(duration);\n    if (swiper.params.virtualTranslate && duration !== 0) {\n      let eventTriggered = false;\n      // eslint-disable-next-line\n      slides.eq(activeIndex).transitionEnd(function onTransitionEnd() {\n        if (eventTriggered) return;\n        if (!swiper || swiper.destroyed) return;\n        // if (!$(this).hasClass(swiper.params.slideActiveClass)) return;\n        eventTriggered = true;\n        swiper.animating = false;\n        const triggerEvents = ['webkitTransitionEnd', 'transitionend'];\n        for (let i = 0; i < triggerEvents.length; i += 1) {\n          $wrapperEl.trigger(triggerEvents[i]);\n        }\n      });\n    }\n  },\n};\n\nvar EffectFlip = {\n  name: 'effect-flip',\n  params: {\n    flipEffect: {\n      slideShadows: true,\n      limitRotation: true,\n    },\n  },\n  create() {\n    const swiper = this;\n    Utils.extend(swiper, {\n      flipEffect: {\n        setTranslate: Flip.setTranslate.bind(swiper),\n        setTransition: Flip.setTransition.bind(swiper),\n      },\n    });\n  },\n  on: {\n    beforeInit() {\n      const swiper = this;\n      if (swiper.params.effect !== 'flip') return;\n      swiper.classNames.push(`${swiper.params.containerModifierClass}flip`);\n      swiper.classNames.push(`${swiper.params.containerModifierClass}3d`);\n      const overwriteParams = {\n        slidesPerView: 1,\n        slidesPerColumn: 1,\n        slidesPerGroup: 1,\n        watchSlidesProgress: true,\n        spaceBetween: 0,\n        virtualTranslate: true,\n      };\n      Utils.extend(swiper.params, overwriteParams);\n      Utils.extend(swiper.originalParams, overwriteParams);\n    },\n    setTranslate() {\n      const swiper = this;\n      if (swiper.params.effect !== 'flip') return;\n      swiper.flipEffect.setTranslate();\n    },\n    setTransition(duration) {\n      const swiper = this;\n      if (swiper.params.effect !== 'flip') return;\n      swiper.flipEffect.setTransition(duration);\n    },\n  },\n};\n\nconst Coverflow = {\n  setTranslate() {\n    const swiper = this;\n    const {\n      width: swiperWidth, height: swiperHeight, slides, $wrapperEl, slidesSizesGrid,\n    } = swiper;\n    const params = swiper.params.coverflowEffect;\n    const isHorizontal = swiper.isHorizontal();\n    const transform$$1 = swiper.translate;\n    const center = isHorizontal ? -transform$$1 + (swiperWidth / 2) : -transform$$1 + (swiperHeight / 2);\n    const rotate = isHorizontal ? params.rotate : -params.rotate;\n    const translate = params.depth;\n    // Each slide offset from center\n    for (let i = 0, length = slides.length; i < length; i += 1) {\n      const $slideEl = slides.eq(i);\n      const slideSize = slidesSizesGrid[i];\n      const slideOffset = $slideEl[0].swiperSlideOffset;\n      const offsetMultiplier = ((center - slideOffset - (slideSize / 2)) / slideSize) * params.modifier;\n\n      let rotateY = isHorizontal ? rotate * offsetMultiplier : 0;\n      let rotateX = isHorizontal ? 0 : rotate * offsetMultiplier;\n      // var rotateZ = 0\n      let translateZ = -translate * Math.abs(offsetMultiplier);\n\n      let translateY = isHorizontal ? 0 : params.stretch * (offsetMultiplier);\n      let translateX = isHorizontal ? params.stretch * (offsetMultiplier) : 0;\n\n      // Fix for ultra small values\n      if (Math.abs(translateX) < 0.001) translateX = 0;\n      if (Math.abs(translateY) < 0.001) translateY = 0;\n      if (Math.abs(translateZ) < 0.001) translateZ = 0;\n      if (Math.abs(rotateY) < 0.001) rotateY = 0;\n      if (Math.abs(rotateX) < 0.001) rotateX = 0;\n\n      const slideTransform = `translate3d(${translateX}px,${translateY}px,${translateZ}px)  rotateX(${rotateX}deg) rotateY(${rotateY}deg)`;\n\n      $slideEl.transform(slideTransform);\n      $slideEl[0].style.zIndex = -Math.abs(Math.round(offsetMultiplier)) + 1;\n      if (params.slideShadows) {\n        // Set shadows\n        let $shadowBeforeEl = isHorizontal ? $slideEl.find('.swiper-slide-shadow-left') : $slideEl.find('.swiper-slide-shadow-top');\n        let $shadowAfterEl = isHorizontal ? $slideEl.find('.swiper-slide-shadow-right') : $slideEl.find('.swiper-slide-shadow-bottom');\n        if ($shadowBeforeEl.length === 0) {\n          $shadowBeforeEl = $(`<div class=\"swiper-slide-shadow-${isHorizontal ? 'left' : 'top'}\"></div>`);\n          $slideEl.append($shadowBeforeEl);\n        }\n        if ($shadowAfterEl.length === 0) {\n          $shadowAfterEl = $(`<div class=\"swiper-slide-shadow-${isHorizontal ? 'right' : 'bottom'}\"></div>`);\n          $slideEl.append($shadowAfterEl);\n        }\n        if ($shadowBeforeEl.length) $shadowBeforeEl[0].style.opacity = offsetMultiplier > 0 ? offsetMultiplier : 0;\n        if ($shadowAfterEl.length) $shadowAfterEl[0].style.opacity = (-offsetMultiplier) > 0 ? -offsetMultiplier : 0;\n      }\n    }\n\n    // Set correct perspective for IE10\n    if (Support.pointerEvents || Support.prefixedPointerEvents) {\n      const ws = $wrapperEl[0].style;\n      ws.perspectiveOrigin = `${center}px 50%`;\n    }\n  },\n  setTransition(duration) {\n    const swiper = this;\n    swiper.slides\n      .transition(duration)\n      .find('.swiper-slide-shadow-top, .swiper-slide-shadow-right, .swiper-slide-shadow-bottom, .swiper-slide-shadow-left')\n      .transition(duration);\n  },\n};\n\nvar EffectCoverflow = {\n  name: 'effect-coverflow',\n  params: {\n    coverflowEffect: {\n      rotate: 50,\n      stretch: 0,\n      depth: 100,\n      modifier: 1,\n      slideShadows: true,\n    },\n  },\n  create() {\n    const swiper = this;\n    Utils.extend(swiper, {\n      coverflowEffect: {\n        setTranslate: Coverflow.setTranslate.bind(swiper),\n        setTransition: Coverflow.setTransition.bind(swiper),\n      },\n    });\n  },\n  on: {\n    beforeInit() {\n      const swiper = this;\n      if (swiper.params.effect !== 'coverflow') return;\n\n      swiper.classNames.push(`${swiper.params.containerModifierClass}coverflow`);\n      swiper.classNames.push(`${swiper.params.containerModifierClass}3d`);\n\n      swiper.params.watchSlidesProgress = true;\n      swiper.originalParams.watchSlidesProgress = true;\n    },\n    setTranslate() {\n      const swiper = this;\n      if (swiper.params.effect !== 'coverflow') return;\n      swiper.coverflowEffect.setTranslate();\n    },\n    setTransition(duration) {\n      const swiper = this;\n      if (swiper.params.effect !== 'coverflow') return;\n      swiper.coverflowEffect.setTransition(duration);\n    },\n  },\n};\n\nconst Thumbs = {\n  init() {\n    const swiper = this;\n    const { thumbs: thumbsParams } = swiper.params;\n    const SwiperClass = swiper.constructor;\n    if (thumbsParams.swiper instanceof SwiperClass) {\n      swiper.thumbs.swiper = thumbsParams.swiper;\n      Utils.extend(swiper.thumbs.swiper.originalParams, {\n        watchSlidesProgress: true,\n        slideToClickedSlide: false,\n      });\n      Utils.extend(swiper.thumbs.swiper.params, {\n        watchSlidesProgress: true,\n        slideToClickedSlide: false,\n      });\n    } else if (Utils.isObject(thumbsParams.swiper)) {\n      swiper.thumbs.swiper = new SwiperClass(Utils.extend({}, thumbsParams.swiper, {\n        watchSlidesVisibility: true,\n        watchSlidesProgress: true,\n        slideToClickedSlide: false,\n      }));\n      swiper.thumbs.swiperCreated = true;\n    }\n    swiper.thumbs.swiper.$el.addClass(swiper.params.thumbs.thumbsContainerClass);\n    swiper.thumbs.swiper.on('tap', swiper.thumbs.onThumbClick);\n  },\n  onThumbClick() {\n    const swiper = this;\n    const thumbsSwiper = swiper.thumbs.swiper;\n    if (!thumbsSwiper) return;\n    const clickedIndex = thumbsSwiper.clickedIndex;\n    if (typeof clickedIndex === 'undefined' || clickedIndex === null) return;\n    let slideToIndex;\n    if (thumbsSwiper.params.loop) {\n      slideToIndex = parseInt($(thumbsSwiper.clickedSlide).attr('data-swiper-slide-index'), 10);\n    } else {\n      slideToIndex = clickedIndex;\n    }\n    if (swiper.params.loop) {\n      let currentIndex = swiper.activeIndex;\n      if (swiper.slides.eq(currentIndex).hasClass(swiper.params.slideDuplicateClass)) {\n        swiper.loopFix();\n        // eslint-disable-next-line\n        swiper._clientLeft = swiper.$wrapperEl[0].clientLeft;\n        currentIndex = swiper.activeIndex;\n      }\n      const prevIndex = swiper.slides.eq(currentIndex).prevAll(`[data-swiper-slide-index=\"${slideToIndex}\"]`).eq(0).index();\n      const nextIndex = swiper.slides.eq(currentIndex).nextAll(`[data-swiper-slide-index=\"${slideToIndex}\"]`).eq(0).index();\n      if (typeof prevIndex === 'undefined') slideToIndex = nextIndex;\n      else if (typeof nextIndex === 'undefined') slideToIndex = prevIndex;\n      else if (nextIndex - currentIndex < currentIndex - prevIndex) slideToIndex = nextIndex;\n      else slideToIndex = prevIndex;\n    }\n    swiper.slideTo(slideToIndex);\n  },\n  update(initial) {\n    const swiper = this;\n    const thumbsSwiper = swiper.thumbs.swiper;\n    if (!thumbsSwiper) return;\n\n    const slidesPerView = thumbsSwiper.params.slidesPerView === 'auto'\n      ? thumbsSwiper.slidesPerViewDynamic()\n      : thumbsSwiper.params.slidesPerView;\n\n    if (swiper.realIndex !== thumbsSwiper.realIndex) {\n      let currentThumbsIndex = thumbsSwiper.activeIndex;\n      let newThumbsIndex;\n      if (thumbsSwiper.params.loop) {\n        if (thumbsSwiper.slides.eq(currentThumbsIndex).hasClass(thumbsSwiper.params.slideDuplicateClass)) {\n          thumbsSwiper.loopFix();\n          // eslint-disable-next-line\n          thumbsSwiper._clientLeft = thumbsSwiper.$wrapperEl[0].clientLeft;\n          currentThumbsIndex = thumbsSwiper.activeIndex;\n        }\n        // Find actual thumbs index to slide to\n        const prevThumbsIndex = thumbsSwiper.slides.eq(currentThumbsIndex).prevAll(`[data-swiper-slide-index=\"${swiper.realIndex}\"]`).eq(0).index();\n        const nextThumbsIndex = thumbsSwiper.slides.eq(currentThumbsIndex).nextAll(`[data-swiper-slide-index=\"${swiper.realIndex}\"]`).eq(0).index();\n        if (typeof prevThumbsIndex === 'undefined') newThumbsIndex = nextThumbsIndex;\n        else if (typeof nextThumbsIndex === 'undefined') newThumbsIndex = prevThumbsIndex;\n        else if (nextThumbsIndex - currentThumbsIndex < currentThumbsIndex - prevThumbsIndex) newThumbsIndex = nextThumbsIndex;\n        else newThumbsIndex = prevThumbsIndex;\n      } else {\n        newThumbsIndex = swiper.realIndex;\n      }\n\n      if (thumbsSwiper.visibleSlidesIndexes.indexOf(newThumbsIndex) < 0) {\n        if (thumbsSwiper.params.centeredSlides) {\n          if (newThumbsIndex > currentThumbsIndex) {\n            newThumbsIndex = newThumbsIndex - Math.floor(slidesPerView / 2) + 1;\n          } else {\n            newThumbsIndex = newThumbsIndex + Math.floor(slidesPerView / 2) - 1;\n          }\n        } else if (newThumbsIndex > currentThumbsIndex) {\n          newThumbsIndex = newThumbsIndex - slidesPerView + 1;\n        }\n        thumbsSwiper.slideTo(newThumbsIndex, initial ? 0 : undefined);\n      }\n    }\n\n    // Activate thumbs\n    let thumbsToActivate = 1;\n    const thumbActiveClass = swiper.params.thumbs.slideThumbActiveClass;\n\n    if (swiper.params.slidesPerView > 1 && !swiper.params.centeredSlides) {\n      thumbsToActivate = swiper.params.slidesPerView;\n    }\n\n    thumbsSwiper.slides.removeClass(thumbActiveClass);\n    if (thumbsSwiper.params.loop) {\n      for (let i = 0; i < thumbsToActivate; i += 1) {\n        thumbsSwiper.$wrapperEl.children(`[data-swiper-slide-index=\"${swiper.realIndex + i}\"]`).addClass(thumbActiveClass);\n      }\n    } else {\n      for (let i = 0; i < thumbsToActivate; i += 1) {\n        thumbsSwiper.slides.eq(swiper.realIndex + i).addClass(thumbActiveClass);\n      }\n    }\n  },\n};\nvar Thumbs$1 = {\n  name: 'thumbs',\n  params: {\n    thumbs: {\n      swiper: null,\n      slideThumbActiveClass: 'swiper-slide-thumb-active',\n      thumbsContainerClass: 'swiper-container-thumbs',\n    },\n  },\n  create() {\n    const swiper = this;\n    Utils.extend(swiper, {\n      thumbs: {\n        swiper: null,\n        init: Thumbs.init.bind(swiper),\n        update: Thumbs.update.bind(swiper),\n        onThumbClick: Thumbs.onThumbClick.bind(swiper),\n      },\n    });\n  },\n  on: {\n    beforeInit() {\n      const swiper = this;\n      const { thumbs } = swiper.params;\n      if (!thumbs || !thumbs.swiper) return;\n      swiper.thumbs.init();\n      swiper.thumbs.update(true);\n    },\n    slideChange() {\n      const swiper = this;\n      if (!swiper.thumbs.swiper) return;\n      swiper.thumbs.update();\n    },\n    update() {\n      const swiper = this;\n      if (!swiper.thumbs.swiper) return;\n      swiper.thumbs.update();\n    },\n    resize() {\n      const swiper = this;\n      if (!swiper.thumbs.swiper) return;\n      swiper.thumbs.update();\n    },\n    observerUpdate() {\n      const swiper = this;\n      if (!swiper.thumbs.swiper) return;\n      swiper.thumbs.update();\n    },\n    setTransition(duration) {\n      const swiper = this;\n      const thumbsSwiper = swiper.thumbs.swiper;\n      if (!thumbsSwiper) return;\n      thumbsSwiper.setTransition(duration);\n    },\n    beforeDestroy() {\n      const swiper = this;\n      const thumbsSwiper = swiper.thumbs.swiper;\n      if (!thumbsSwiper) return;\n      if (swiper.thumbs.swiperCreated && thumbsSwiper) {\n        thumbsSwiper.destroy();\n      }\n    },\n  },\n};\n\n// Swiper Class\n\nconst components = [\n  Device$1,\n  Support$1,\n  Browser$1,\n  Resize,\n  Observer$1,\n  Virtual$1,\n  Keyboard$1,\n  Mousewheel$1,\n  Navigation$1,\n  Pagination$1,\n  Scrollbar$1,\n  Parallax$1,\n  Zoom$1,\n  Lazy$1,\n  Controller$1,\n  A11y,\n  History$1,\n  HashNavigation$1,\n  Autoplay$1,\n  EffectFade,\n  EffectCube,\n  EffectFlip,\n  EffectCoverflow,\n  Thumbs$1\n];\n\nif (typeof Swiper.use === 'undefined') {\n  Swiper.use = Swiper.Class.use;\n  Swiper.installModule = Swiper.Class.installModule;\n}\n\nSwiper.use(components);\n\nexport default Swiper;\n","/*!\n * better-normal-scroll v1.13.0\n * (c) 2016-2018 ustbhuangyi\n * Released under the MIT License.\n */\nvar slicedToArray = function () {\n  function sliceIterator(arr, i) {\n    var _arr = [];\n    var _n = true;\n    var _d = false;\n    var _e = undefined;\n\n    try {\n      for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) {\n        _arr.push(_s.value);\n\n        if (i && _arr.length === i) break;\n      }\n    } catch (err) {\n      _d = true;\n      _e = err;\n    } finally {\n      try {\n        if (!_n && _i[\"return\"]) _i[\"return\"]();\n      } finally {\n        if (_d) throw _e;\n      }\n    }\n\n    return _arr;\n  }\n\n  return function (arr, i) {\n    if (Array.isArray(arr)) {\n      return arr;\n    } else if (Symbol.iterator in Object(arr)) {\n      return sliceIterator(arr, i);\n    } else {\n      throw new TypeError(\"Invalid attempt to destructure non-iterable instance\");\n    }\n  };\n}();\n\n\n\n\n\n\n\n\n\n\n\n\n\nvar toConsumableArray = function (arr) {\n  if (Array.isArray(arr)) {\n    for (var i = 0, arr2 = Array(arr.length); i < arr.length; i++) arr2[i] = arr[i];\n\n    return arr2;\n  } else {\n    return Array.from(arr);\n  }\n};\n\nfunction eventMixin(BScroll) {\n  BScroll.prototype.on = function (type, fn) {\n    var context = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : this;\n\n    if (!this._events[type]) {\n      this._events[type] = [];\n    }\n\n    this._events[type].push([fn, context]);\n  };\n\n  BScroll.prototype.once = function (type, fn) {\n    var context = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : this;\n\n    function magic() {\n      this.off(type, magic);\n\n      fn.apply(context, arguments);\n    }\n    // To expose the corresponding function method in order to execute the off method\n    magic.fn = fn;\n\n    this.on(type, magic);\n  };\n\n  BScroll.prototype.off = function (type, fn) {\n    var _events = this._events[type];\n    if (!_events) {\n      return;\n    }\n\n    var count = _events.length;\n    while (count--) {\n      if (_events[count][0] === fn || _events[count][0] && _events[count][0].fn === fn) {\n        _events[count][0] = undefined;\n      }\n    }\n  };\n\n  BScroll.prototype.trigger = function (type) {\n    var events = this._events[type];\n    if (!events) {\n      return;\n    }\n\n    var len = events.length;\n    var eventsCopy = [].concat(toConsumableArray(events));\n    for (var i = 0; i < len; i++) {\n      var event = eventsCopy[i];\n\n      var _event = slicedToArray(event, 2),\n          fn = _event[0],\n          context = _event[1];\n\n      if (fn) {\n        fn.apply(context, [].slice.call(arguments, 1));\n      }\n    }\n  };\n}\n\n// ssr support\nvar inBrowser = typeof window !== 'undefined';\nvar ua = inBrowser && navigator.userAgent.toLowerCase();\nvar isWeChatDevTools = ua && /wechatdevtools/.test(ua);\nvar isAndroid = ua && ua.indexOf('android') > 0;\n\nfunction getNow() {\n  return window.performance && window.performance.now ? window.performance.now() + window.performance.timing.navigationStart : +new Date();\n}\n\nfunction extend(target) {\n  for (var _len = arguments.length, rest = Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n    rest[_key - 1] = arguments[_key];\n  }\n\n  for (var i = 0; i < rest.length; i++) {\n    var source = rest[i];\n    for (var key in source) {\n      target[key] = source[key];\n    }\n  }\n  return target;\n}\n\nfunction isUndef(v) {\n  return v === undefined || v === null;\n}\n\nfunction getDistance(x, y) {\n  return Math.sqrt(x * x + y * y);\n}\n\nvar elementStyle = inBrowser && document.createElement('div').style;\n\nvar vendor = function () {\n  if (!inBrowser) {\n    return false;\n  }\n  var transformNames = {\n    webkit: 'webkitTransform',\n    Moz: 'MozTransform',\n    O: 'OTransform',\n    ms: 'msTransform',\n    standard: 'transform'\n  };\n\n  for (var key in transformNames) {\n    if (elementStyle[transformNames[key]] !== undefined) {\n      return key;\n    }\n  }\n\n  return false;\n}();\n\nfunction prefixStyle(style) {\n  if (vendor === false) {\n    return false;\n  }\n\n  if (vendor === 'standard') {\n    if (style === 'transitionEnd') {\n      return 'transitionend';\n    }\n    return style;\n  }\n\n  return vendor + style.charAt(0).toUpperCase() + style.substr(1);\n}\n\nfunction addEvent(el, type, fn, capture) {\n  el.addEventListener(type, fn, { passive: false, capture: !!capture });\n}\n\nfunction removeEvent(el, type, fn, capture) {\n  el.removeEventListener(type, fn, { passive: false, capture: !!capture });\n}\n\nfunction offset(el) {\n  var left = 0;\n  var top = 0;\n\n  while (el) {\n    left -= el.offsetLeft;\n    top -= el.offsetTop;\n    el = el.offsetParent;\n  }\n\n  return {\n    left: left,\n    top: top\n  };\n}\n\nfunction offsetToBody(el) {\n  var rect = el.getBoundingClientRect();\n\n  return {\n    left: -(rect.left + window.pageXOffset),\n    top: -(rect.top + window.pageYOffset)\n  };\n}\n\nvar cssVendor = vendor && vendor !== 'standard' ? '-' + vendor.toLowerCase() + '-' : '';\n\nvar transform = prefixStyle('transform');\nvar transition = prefixStyle('transition');\n\nvar hasPerspective = inBrowser && prefixStyle('perspective') in elementStyle;\n// fix issue #361\nvar hasTouch = inBrowser && ('ontouchstart' in window || isWeChatDevTools);\nvar hasTransform = transform !== false;\nvar hasTransition = inBrowser && transition in elementStyle;\n\nvar style = {\n  transform: transform,\n  transition: transition,\n  transitionTimingFunction: prefixStyle('transitionTimingFunction'),\n  transitionDuration: prefixStyle('transitionDuration'),\n  transitionDelay: prefixStyle('transitionDelay'),\n  transformOrigin: prefixStyle('transformOrigin'),\n  transitionEnd: prefixStyle('transitionEnd')\n};\n\nvar TOUCH_EVENT = 1;\nvar MOUSE_EVENT = 2;\n\nvar eventType = {\n  touchstart: TOUCH_EVENT,\n  touchmove: TOUCH_EVENT,\n  touchend: TOUCH_EVENT,\n\n  mousedown: MOUSE_EVENT,\n  mousemove: MOUSE_EVENT,\n  mouseup: MOUSE_EVENT\n};\n\nfunction getRect(el) {\n  if (el instanceof window.SVGElement) {\n    var rect = el.getBoundingClientRect();\n    return {\n      top: rect.top,\n      left: rect.left,\n      width: rect.width,\n      height: rect.height\n    };\n  } else {\n    return {\n      top: el.offsetTop,\n      left: el.offsetLeft,\n      width: el.offsetWidth,\n      height: el.offsetHeight\n    };\n  }\n}\n\nfunction preventDefaultException(el, exceptions) {\n  for (var i in exceptions) {\n    if (exceptions[i].test(el[i])) {\n      return true;\n    }\n  }\n  return false;\n}\n\nfunction tap(e, eventName) {\n  var ev = document.createEvent('Event');\n  ev.initEvent(eventName, true, true);\n  ev.pageX = e.pageX;\n  ev.pageY = e.pageY;\n  e.target.dispatchEvent(ev);\n}\n\nfunction click(e) {\n  var event = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 'click';\n\n  var eventSource = void 0;\n  if (e.type === 'mouseup' || e.type === 'mousecancel') {\n    eventSource = e;\n  } else if (e.type === 'touchend' || e.type === 'touchcancel') {\n    eventSource = e.changedTouches[0];\n  }\n  var posSrc = {};\n  if (eventSource) {\n    posSrc.screenX = eventSource.screenX || 0;\n    posSrc.screenY = eventSource.screenY || 0;\n    posSrc.clientX = eventSource.clientX || 0;\n    posSrc.clientY = eventSource.clientY || 0;\n  }\n  var ev = void 0;\n  var bubbles = true;\n  var cancelable = true;\n  if (typeof MouseEvent !== 'undefined') {\n    try {\n      ev = new MouseEvent(event, extend({\n        bubbles: bubbles,\n        cancelable: cancelable\n      }, posSrc));\n    } catch (e) {\n      createEvent();\n    }\n  } else {\n    createEvent();\n  }\n\n  function createEvent() {\n    ev = document.createEvent('Event');\n    ev.initEvent(event, bubbles, cancelable);\n    extend(ev, posSrc);\n  }\n\n  // forwardedTouchEvent set to true in case of the conflict with fastclick\n  ev.forwardedTouchEvent = true;\n  ev._constructed = true;\n  e.target.dispatchEvent(ev);\n}\n\nfunction dblclick(e) {\n  click(e, 'dblclick');\n}\n\nfunction prepend(el, target) {\n  if (target.firstChild) {\n    before(el, target.firstChild);\n  } else {\n    target.appendChild(el);\n  }\n}\n\nfunction before(el, target) {\n  target.parentNode.insertBefore(el, target);\n}\n\nfunction removeChild(el, child) {\n  el.removeChild(child);\n}\n\nvar DEFAULT_OPTIONS = {\n  startX: 0,\n  startY: 0,\n  scrollX: false,\n  scrollY: true,\n  freeScroll: false,\n  directionLockThreshold: 5,\n  eventPassthrough: '',\n  click: false,\n  tap: false,\n  /**\n   * support any side\n   * bounce: {\n   *   top: true,\n   *   bottom: true,\n   *   left: true,\n   *   right: true\n   * }\n   */\n  bounce: true,\n  bounceTime: 800,\n  momentum: true,\n  momentumLimitTime: 300,\n  momentumLimitDistance: 15,\n  swipeTime: 2500,\n  swipeBounceTime: 500,\n  deceleration: 0.0015,\n  flickLimitTime: 200,\n  flickLimitDistance: 100,\n  resizePolling: 60,\n  probeType: 0,\n  preventDefault: true,\n  preventDefaultException: {\n    tagName: /^(INPUT|TEXTAREA|BUTTON|SELECT)$/\n  },\n  HWCompositing: true,\n  useTransition: true,\n  useTransform: true,\n  bindToWrapper: false,\n  disableMouse: hasTouch,\n  disableTouch: !hasTouch,\n  observeDOM: true,\n  autoBlur: true,\n  /**\n   * for picker\n   * wheel: {\n   *   selectedIndex: 0,\n   *   rotate: 25,\n   *   adjustTime: 400\n   *   wheelWrapperClass: 'wheel-scroll',\n   *   wheelItemClass: 'wheel-item'\n   * }\n   */\n  wheel: false,\n  /**\n   * for slide\n   * snap: {\n   *   loop: false,\n   *   el: domEl,\n   *   threshold: 0.1,\n   *   stepX: 100,\n   *   stepY: 100,\n   *   speed: 400,\n   *   easing: {\n   *     style: 'cubic-bezier(0.25, 0.46, 0.45, 0.94)',\n   *     fn: function (t) {\n   *       return t * (2 - t)\n   *     }\n   *   }\n   *   listenFlick: true\n   * }\n   */\n  snap: false,\n  /**\n   * for scrollbar\n   * scrollbar: {\n   *   fade: true,\n   *   interactive: false\n   * }\n   */\n  scrollbar: false,\n  /**\n   * for pull down and refresh\n   * pullDownRefresh: {\n   *   threshold: 50,\n   *   stop: 20\n   * }\n   */\n  pullDownRefresh: false,\n  /**\n   * for pull up and load\n   * pullUpLoad: {\n   *   threshold: 50\n   * }\n   */\n  pullUpLoad: false,\n  /**\n   * for mouse wheel\n   * mouseWheel: {\n   *   speed: 20,\n   *   invert: false,\n   *   easeTime: 300\n   * }\n   */\n  mouseWheel: false,\n  stopPropagation: false,\n  /**\n   * for zoom\n   * zoom: {\n   *   start: 1,\n   *   min: 1,\n   *   max: 4\n   * }\n   */\n  zoom: false,\n  /**\n   * for infinity\n   * infinity: {\n   *   render(item, div) {\n   *   },\n   *   createTombstone() {\n   *   },\n   *   fetch(count) {\n   *   }\n   * }\n   */\n  infinity: false,\n  /**\n   * for double click\n   * dblclick: {\n   *   delay: 300\n   * }\n   */\n  dblclick: false\n};\n\nfunction initMixin(BScroll) {\n  BScroll.prototype._init = function (el, options) {\n    this._handleOptions(options);\n\n    // init private custom events\n    this._events = {};\n\n    this.x = 0;\n    this.y = 0;\n    this.directionX = 0;\n    this.directionY = 0;\n\n    this.setScale(1);\n\n    this._addDOMEvents();\n\n    this._initExtFeatures();\n\n    this._watchTransition();\n\n    if (this.options.observeDOM) {\n      this._initDOMObserver();\n    }\n\n    if (this.options.autoBlur) {\n      this._handleAutoBlur();\n    }\n\n    this.refresh();\n\n    if (!this.options.snap) {\n      this.scrollTo(this.options.startX, this.options.startY);\n    }\n\n    this.enable();\n  };\n\n  BScroll.prototype.setScale = function (scale) {\n    this.lastScale = isUndef(this.scale) ? scale : this.scale;\n    this.scale = scale;\n  };\n\n  BScroll.prototype._handleOptions = function (options) {\n    this.options = extend({}, DEFAULT_OPTIONS, options);\n\n    this.translateZ = this.options.HWCompositing && hasPerspective ? ' translateZ(0)' : '';\n\n    this.options.useTransition = this.options.useTransition && hasTransition;\n    this.options.useTransform = this.options.useTransform && hasTransform;\n\n    this.options.preventDefault = !this.options.eventPassthrough && this.options.preventDefault;\n\n    // If you want eventPassthrough I have to lock one of the axes\n    this.options.scrollX = this.options.eventPassthrough === 'horizontal' ? false : this.options.scrollX;\n    this.options.scrollY = this.options.eventPassthrough === 'vertical' ? false : this.options.scrollY;\n\n    // With eventPassthrough we also need lockDirection mechanism\n    this.options.freeScroll = this.options.freeScroll && !this.options.eventPassthrough;\n    this.options.directionLockThreshold = this.options.eventPassthrough ? 0 : this.options.directionLockThreshold;\n\n    if (this.options.tap === true) {\n      this.options.tap = 'tap';\n    }\n  };\n\n  BScroll.prototype._addDOMEvents = function () {\n    var eventOperation = addEvent;\n    this._handleDOMEvents(eventOperation);\n  };\n\n  BScroll.prototype._removeDOMEvents = function () {\n    var eventOperation = removeEvent;\n    this._handleDOMEvents(eventOperation);\n  };\n\n  BScroll.prototype._handleDOMEvents = function (eventOperation) {\n    var target = this.options.bindToWrapper ? this.wrapper : window;\n    eventOperation(window, 'orientationchange', this);\n    eventOperation(window, 'resize', this);\n\n    if (this.options.click) {\n      eventOperation(this.wrapper, 'click', this, true);\n    }\n\n    if (!this.options.disableMouse) {\n      eventOperation(this.wrapper, 'mousedown', this);\n      eventOperation(target, 'mousemove', this);\n      eventOperation(target, 'mousecancel', this);\n      eventOperation(target, 'mouseup', this);\n    }\n\n    if (hasTouch && !this.options.disableTouch) {\n      eventOperation(this.wrapper, 'touchstart', this);\n      eventOperation(target, 'touchmove', this);\n      eventOperation(target, 'touchcancel', this);\n      eventOperation(target, 'touchend', this);\n    }\n\n    eventOperation(this.scroller, style.transitionEnd, this);\n  };\n\n  BScroll.prototype._initExtFeatures = function () {\n    if (this.options.snap) {\n      this._initSnap();\n    }\n    if (this.options.scrollbar) {\n      this._initScrollbar();\n    }\n    if (this.options.pullUpLoad) {\n      this._initPullUp();\n    }\n    if (this.options.pullDownRefresh) {\n      this._initPullDown();\n    }\n    if (this.options.wheel) {\n      this._initWheel();\n    }\n    if (this.options.mouseWheel) {\n      this._initMouseWheel();\n    }\n    if (this.options.zoom) {\n      this._initZoom();\n    }\n    if (this.options.infinity) {\n      this._initInfinite();\n    }\n  };\n\n  BScroll.prototype._watchTransition = function () {\n    if (typeof Object.defineProperty !== 'function') {\n      return;\n    }\n    var me = this;\n    var isInTransition = false;\n    var key = this.useTransition ? 'isInTransition' : 'isAnimating';\n    Object.defineProperty(this, key, {\n      get: function get() {\n        return isInTransition;\n      },\n      set: function set(newVal) {\n        isInTransition = newVal;\n        // fix issue #359\n        var el = me.scroller.children.length ? me.scroller.children : [me.scroller];\n        var pointerEvents = isInTransition && !me.pulling ? 'none' : 'auto';\n        for (var i = 0; i < el.length; i++) {\n          el[i].style.pointerEvents = pointerEvents;\n        }\n      }\n    });\n  };\n\n  BScroll.prototype._handleAutoBlur = function () {\n    this.on('scrollStart', function () {\n      var activeElement = document.activeElement;\n      if (activeElement && (activeElement.tagName === 'INPUT' || activeElement.tagName === 'TEXTAREA')) {\n        activeElement.blur();\n      }\n    });\n  };\n\n  BScroll.prototype._initDOMObserver = function () {\n    var _this = this;\n\n    if (typeof MutationObserver !== 'undefined') {\n      var timer = void 0;\n      var observer = new MutationObserver(function (mutations) {\n        // don't do any refresh during the transition, or outside of the boundaries\n        if (_this._shouldNotRefresh()) {\n          return;\n        }\n        var immediateRefresh = false;\n        var deferredRefresh = false;\n        for (var i = 0; i < mutations.length; i++) {\n          var mutation = mutations[i];\n          if (mutation.type !== 'attributes') {\n            immediateRefresh = true;\n            break;\n          } else {\n            if (mutation.target !== _this.scroller) {\n              deferredRefresh = true;\n              break;\n            }\n          }\n        }\n        if (immediateRefresh) {\n          _this.refresh();\n        } else if (deferredRefresh) {\n          // attributes changes too often\n          clearTimeout(timer);\n          timer = setTimeout(function () {\n            if (!_this._shouldNotRefresh()) {\n              _this.refresh();\n            }\n          }, 60);\n        }\n      });\n      var config = {\n        attributes: true,\n        childList: true,\n        subtree: true\n      };\n      observer.observe(this.scroller, config);\n\n      this.on('destroy', function () {\n        observer.disconnect();\n      });\n    } else {\n      this._checkDOMUpdate();\n    }\n  };\n\n  BScroll.prototype._shouldNotRefresh = function () {\n    var outsideBoundaries = this.x > this.minScrollX || this.x < this.maxScrollX || this.y > this.minScrollY || this.y < this.maxScrollY;\n\n    return this.isInTransition || this.stopFromTransition || outsideBoundaries;\n  };\n\n  BScroll.prototype._checkDOMUpdate = function () {\n    var scrollerRect = getRect(this.scroller);\n    var oldWidth = scrollerRect.width;\n    var oldHeight = scrollerRect.height;\n\n    function check() {\n      if (this.destroyed) {\n        return;\n      }\n      scrollerRect = getRect(this.scroller);\n      var newWidth = scrollerRect.width;\n      var newHeight = scrollerRect.height;\n\n      if (oldWidth !== newWidth || oldHeight !== newHeight) {\n        this.refresh();\n      }\n      oldWidth = newWidth;\n      oldHeight = newHeight;\n\n      next.call(this);\n    }\n\n    function next() {\n      var _this2 = this;\n\n      setTimeout(function () {\n        check.call(_this2);\n      }, 1000);\n    }\n\n    next.call(this);\n  };\n\n  BScroll.prototype.handleEvent = function (e) {\n    switch (e.type) {\n      case 'touchstart':\n      case 'mousedown':\n        this._start(e);\n        if (this.options.zoom && e.touches && e.touches.length > 1) {\n          this._zoomStart(e);\n        }\n        break;\n      case 'touchmove':\n      case 'mousemove':\n        if (this.options.zoom && e.touches && e.touches.length > 1) {\n          this._zoom(e);\n        } else {\n          this._move(e);\n        }\n        break;\n      case 'touchend':\n      case 'mouseup':\n      case 'touchcancel':\n      case 'mousecancel':\n        if (this.scaled) {\n          this._zoomEnd(e);\n        } else {\n          this._end(e);\n        }\n        break;\n      case 'orientationchange':\n      case 'resize':\n        this._resize();\n        break;\n      case 'transitionend':\n      case 'webkitTransitionEnd':\n      case 'oTransitionEnd':\n      case 'MSTransitionEnd':\n        this._transitionEnd(e);\n        break;\n      case 'click':\n        if (this.enabled && !e._constructed) {\n          if (!preventDefaultException(e.target, this.options.preventDefaultException)) {\n            e.preventDefault();\n            e.stopPropagation();\n          }\n        }\n        break;\n      case 'wheel':\n      case 'DOMMouseScroll':\n      case 'mousewheel':\n        this._onMouseWheel(e);\n        break;\n    }\n  };\n\n  BScroll.prototype.refresh = function () {\n    var isWrapperStatic = window.getComputedStyle(this.wrapper, null).position === 'static';\n    var wrapperRect = getRect(this.wrapper);\n    this.wrapperWidth = wrapperRect.width;\n    this.wrapperHeight = wrapperRect.height;\n\n    var scrollerRect = getRect(this.scroller);\n    this.scrollerWidth = Math.round(scrollerRect.width * this.scale);\n    this.scrollerHeight = Math.round(scrollerRect.height * this.scale);\n\n    this.relativeX = scrollerRect.left;\n    this.relativeY = scrollerRect.top;\n\n    if (isWrapperStatic) {\n      this.relativeX -= wrapperRect.left;\n      this.relativeY -= wrapperRect.top;\n    }\n\n    this.minScrollX = 0;\n    this.minScrollY = 0;\n\n    var wheel = this.options.wheel;\n    if (wheel) {\n      this.items = this.scroller.children;\n      this.options.itemHeight = this.itemHeight = this.items.length ? this.scrollerHeight / this.items.length : 0;\n      if (this.selectedIndex === undefined) {\n        this.selectedIndex = wheel.selectedIndex || 0;\n      }\n      this.options.startY = -this.selectedIndex * this.itemHeight;\n      this.maxScrollX = 0;\n      this.maxScrollY = -this.itemHeight * (this.items.length - 1);\n    } else {\n      this.maxScrollX = this.wrapperWidth - this.scrollerWidth;\n      if (!this.options.infinity) {\n        this.maxScrollY = this.wrapperHeight - this.scrollerHeight;\n      }\n      if (this.maxScrollX < 0) {\n        this.maxScrollX -= this.relativeX;\n        this.minScrollX = -this.relativeX;\n      } else if (this.scale > 1) {\n        this.maxScrollX = this.maxScrollX / 2 - this.relativeX;\n        this.minScrollX = this.maxScrollX;\n      }\n      if (this.maxScrollY < 0) {\n        this.maxScrollY -= this.relativeY;\n        this.minScrollY = -this.relativeY;\n      } else if (this.scale > 1) {\n        this.maxScrollY = this.maxScrollY / 2 - this.relativeY;\n        this.minScrollY = this.maxScrollY;\n      }\n    }\n\n    this.hasHorizontalScroll = this.options.scrollX && this.maxScrollX < this.minScrollX;\n    this.hasVerticalScroll = this.options.scrollY && this.maxScrollY < this.minScrollY;\n\n    if (!this.hasHorizontalScroll) {\n      this.maxScrollX = this.minScrollX;\n      this.scrollerWidth = this.wrapperWidth;\n    }\n\n    if (!this.hasVerticalScroll) {\n      this.maxScrollY = this.minScrollY;\n      this.scrollerHeight = this.wrapperHeight;\n    }\n\n    this.endTime = 0;\n    this.directionX = 0;\n    this.directionY = 0;\n    this.wrapperOffset = offset(this.wrapper);\n\n    this.trigger('refresh');\n\n    !this.scaled && this.resetPosition();\n  };\n\n  BScroll.prototype.enable = function () {\n    this.enabled = true;\n  };\n\n  BScroll.prototype.disable = function () {\n    this.enabled = false;\n  };\n}\n\nvar ease = {\n  // easeOutQuint\n  swipe: {\n    style: 'cubic-bezier(0.23, 1, 0.32, 1)',\n    fn: function fn(t) {\n      return 1 + --t * t * t * t * t;\n    }\n  },\n  // easeOutQuard\n  swipeBounce: {\n    style: 'cubic-bezier(0.25, 0.46, 0.45, 0.94)',\n    fn: function fn(t) {\n      return t * (2 - t);\n    }\n  },\n  // easeOutQuart\n  bounce: {\n    style: 'cubic-bezier(0.165, 0.84, 0.44, 1)',\n    fn: function fn(t) {\n      return 1 - --t * t * t * t;\n    }\n  }\n};\n\nfunction momentum(current, start, time, lowerMargin, upperMargin, wrapperSize, options) {\n  var distance = current - start;\n  var speed = Math.abs(distance) / time;\n\n  var deceleration = options.deceleration,\n      itemHeight = options.itemHeight,\n      swipeBounceTime = options.swipeBounceTime,\n      wheel = options.wheel,\n      swipeTime = options.swipeTime;\n\n  var duration = swipeTime;\n  var rate = wheel ? 4 : 15;\n\n  var destination = current + speed / deceleration * (distance < 0 ? -1 : 1);\n\n  if (wheel && itemHeight) {\n    destination = Math.round(destination / itemHeight) * itemHeight;\n  }\n\n  if (destination < lowerMargin) {\n    destination = wrapperSize ? Math.max(lowerMargin - wrapperSize / 4, lowerMargin - wrapperSize / rate * speed) : lowerMargin;\n    duration = swipeBounceTime;\n  } else if (destination > upperMargin) {\n    destination = wrapperSize ? Math.min(upperMargin + wrapperSize / 4, upperMargin + wrapperSize / rate * speed) : upperMargin;\n    duration = swipeBounceTime;\n  }\n\n  return {\n    destination: Math.round(destination),\n    duration: duration\n  };\n}\n\nvar DEFAULT_INTERVAL = 100 / 60;\n\nfunction noop() {}\n\nvar requestAnimationFrame = function () {\n  if (!inBrowser) {\n    /* istanbul ignore if */\n    return noop;\n  }\n  return window.requestAnimationFrame || window.webkitRequestAnimationFrame || window.mozRequestAnimationFrame || window.oRequestAnimationFrame ||\n  // if all else fails, use setTimeout\n  function (callback) {\n    return window.setTimeout(callback, (callback.interval || DEFAULT_INTERVAL) / 2); // make interval as precise as possible.\n  };\n}();\n\nvar cancelAnimationFrame = function () {\n  if (!inBrowser) {\n    /* istanbul ignore if */\n    return noop;\n  }\n  return window.cancelAnimationFrame || window.webkitCancelAnimationFrame || window.mozCancelAnimationFrame || window.oCancelAnimationFrame || function (id) {\n    window.clearTimeout(id);\n  };\n}();\n\nvar DIRECTION_UP = 1;\nvar DIRECTION_DOWN = -1;\nvar DIRECTION_LEFT = 1;\nvar DIRECTION_RIGHT = -1;\n\nvar PROBE_DEBOUNCE = 1;\n\nvar PROBE_REALTIME = 3;\n\nfunction warn(msg) {\n  console.error('[BScroll warn]: ' + msg);\n}\n\nfunction assert(condition, msg) {\n  if (!condition) {\n    throw new Error('[BScroll] ' + msg);\n  }\n}\n\nfunction coreMixin(BScroll) {\n  BScroll.prototype._start = function (e) {\n    var _eventType = eventType[e.type];\n    if (_eventType !== TOUCH_EVENT) {\n      if (e.button !== 0) {\n        return;\n      }\n    }\n    if (!this.enabled || this.destroyed || this.initiated && this.initiated !== _eventType) {\n      return;\n    }\n    this.initiated = _eventType;\n\n    if (this.options.preventDefault && !preventDefaultException(e.target, this.options.preventDefaultException)) {\n      e.preventDefault();\n    }\n    if (this.options.stopPropagation) {\n      e.stopPropagation();\n    }\n\n    this.moved = false;\n    this.distX = 0;\n    this.distY = 0;\n    this.directionX = 0;\n    this.directionY = 0;\n    this.movingDirectionX = 0;\n    this.movingDirectionY = 0;\n    this.directionLocked = 0;\n\n    this._transitionTime();\n    this.startTime = getNow();\n\n    if (this.options.wheel) {\n      this.target = e.target;\n    }\n\n    this.stop();\n\n    var point = e.touches ? e.touches[0] : e;\n\n    this.startX = this.x;\n    this.startY = this.y;\n    this.absStartX = this.x;\n    this.absStartY = this.y;\n    this.pointX = point.pageX;\n    this.pointY = point.pageY;\n\n    this.trigger('beforeScrollStart');\n  };\n\n  BScroll.prototype._move = function (e) {\n    if (!this.enabled || this.destroyed || eventType[e.type] !== this.initiated) {\n      return;\n    }\n\n    if (this.options.preventDefault) {\n      e.preventDefault();\n    }\n    if (this.options.stopPropagation) {\n      e.stopPropagation();\n    }\n\n    var point = e.touches ? e.touches[0] : e;\n    var deltaX = point.pageX - this.pointX;\n    var deltaY = point.pageY - this.pointY;\n\n    this.pointX = point.pageX;\n    this.pointY = point.pageY;\n\n    this.distX += deltaX;\n    this.distY += deltaY;\n\n    var absDistX = Math.abs(this.distX);\n    var absDistY = Math.abs(this.distY);\n\n    var timestamp = getNow();\n\n    // We need to move at least momentumLimitDistance pixels for the scrolling to initiate\n    if (timestamp - this.endTime > this.options.momentumLimitTime && absDistY < this.options.momentumLimitDistance && absDistX < this.options.momentumLimitDistance) {\n      return;\n    }\n\n    // If you are scrolling in one direction lock the other\n    if (!this.directionLocked && !this.options.freeScroll) {\n      if (absDistX > absDistY + this.options.directionLockThreshold) {\n        this.directionLocked = 'h'; // lock horizontally\n      } else if (absDistY >= absDistX + this.options.directionLockThreshold) {\n        this.directionLocked = 'v'; // lock vertically\n      } else {\n        this.directionLocked = 'n'; // no lock\n      }\n    }\n\n    if (this.directionLocked === 'h') {\n      if (this.options.eventPassthrough === 'vertical') {\n        e.preventDefault();\n      } else if (this.options.eventPassthrough === 'horizontal') {\n        this.initiated = false;\n        return;\n      }\n      deltaY = 0;\n    } else if (this.directionLocked === 'v') {\n      if (this.options.eventPassthrough === 'horizontal') {\n        e.preventDefault();\n      } else if (this.options.eventPassthrough === 'vertical') {\n        this.initiated = false;\n        return;\n      }\n      deltaX = 0;\n    }\n\n    deltaX = this.hasHorizontalScroll ? deltaX : 0;\n    deltaY = this.hasVerticalScroll ? deltaY : 0;\n    this.movingDirectionX = deltaX > 0 ? DIRECTION_RIGHT : deltaX < 0 ? DIRECTION_LEFT : 0;\n    this.movingDirectionY = deltaY > 0 ? DIRECTION_DOWN : deltaY < 0 ? DIRECTION_UP : 0;\n\n    var newX = this.x + deltaX;\n    var newY = this.y + deltaY;\n\n    var top = false;\n    var bottom = false;\n    var left = false;\n    var right = false;\n    // Slow down or stop if outside of the boundaries\n    var bounce = this.options.bounce;\n    if (bounce !== false) {\n      top = bounce.top === undefined ? true : bounce.top;\n      bottom = bounce.bottom === undefined ? true : bounce.bottom;\n      left = bounce.left === undefined ? true : bounce.left;\n      right = bounce.right === undefined ? true : bounce.right;\n    }\n    if (newX > this.minScrollX || newX < this.maxScrollX) {\n      if (newX > this.minScrollX && left || newX < this.maxScrollX && right) {\n        newX = this.x + deltaX / 3;\n      } else {\n        newX = newX > this.minScrollX ? this.minScrollX : this.maxScrollX;\n      }\n    }\n    if (newY > this.minScrollY || newY < this.maxScrollY) {\n      if (newY > this.minScrollY && top || newY < this.maxScrollY && bottom) {\n        newY = this.y + deltaY / 3;\n      } else {\n        newY = newY > this.minScrollY ? this.minScrollY : this.maxScrollY;\n      }\n    }\n\n    if (!this.moved) {\n      this.moved = true;\n      this.trigger('scrollStart');\n    }\n\n    this._translate(newX, newY);\n\n    if (timestamp - this.startTime > this.options.momentumLimitTime) {\n      this.startTime = timestamp;\n      this.startX = this.x;\n      this.startY = this.y;\n\n      if (this.options.probeType === PROBE_DEBOUNCE) {\n        this.trigger('scroll', {\n          x: this.x,\n          y: this.y\n        });\n      }\n    }\n\n    if (this.options.probeType > PROBE_DEBOUNCE) {\n      this.trigger('scroll', {\n        x: this.x,\n        y: this.y\n      });\n    }\n\n    var scrollLeft = document.documentElement.scrollLeft || window.pageXOffset || document.body.scrollLeft;\n    var scrollTop = document.documentElement.scrollTop || window.pageYOffset || document.body.scrollTop;\n\n    var pX = this.pointX - scrollLeft;\n    var pY = this.pointY - scrollTop;\n\n    if (pX > document.documentElement.clientWidth - this.options.momentumLimitDistance || pX < this.options.momentumLimitDistance || pY < this.options.momentumLimitDistance || pY > document.documentElement.clientHeight - this.options.momentumLimitDistance) {\n      this._end(e);\n    }\n  };\n\n  BScroll.prototype._end = function (e) {\n    if (!this.enabled || this.destroyed || eventType[e.type] !== this.initiated) {\n      return;\n    }\n    this.initiated = false;\n\n    if (this.options.preventDefault && !preventDefaultException(e.target, this.options.preventDefaultException)) {\n      e.preventDefault();\n    }\n    if (this.options.stopPropagation) {\n      e.stopPropagation();\n    }\n\n    this.trigger('touchEnd', {\n      x: this.x,\n      y: this.y\n    });\n\n    this.isInTransition = false;\n\n    // ensures that the last position is rounded\n    var newX = Math.round(this.x);\n    var newY = Math.round(this.y);\n\n    var deltaX = newX - this.absStartX;\n    var deltaY = newY - this.absStartY;\n    this.directionX = deltaX > 0 ? DIRECTION_RIGHT : deltaX < 0 ? DIRECTION_LEFT : 0;\n    this.directionY = deltaY > 0 ? DIRECTION_DOWN : deltaY < 0 ? DIRECTION_UP : 0;\n\n    // if configure pull down refresh, check it first\n    if (this.options.pullDownRefresh && this._checkPullDown()) {\n      return;\n    }\n\n    // check if it is a click operation\n    if (this._checkClick(e)) {\n      this.trigger('scrollCancel');\n      return;\n    }\n\n    // reset if we are outside of the boundaries\n    if (this.resetPosition(this.options.bounceTime, ease.bounce)) {\n      return;\n    }\n\n    this._translate(newX, newY);\n\n    this.endTime = getNow();\n    var duration = this.endTime - this.startTime;\n    var absDistX = Math.abs(newX - this.startX);\n    var absDistY = Math.abs(newY - this.startY);\n\n    // flick\n    if (this._events.flick && duration < this.options.flickLimitTime && absDistX < this.options.flickLimitDistance && absDistY < this.options.flickLimitDistance) {\n      this.trigger('flick');\n      return;\n    }\n\n    var time = 0;\n    // start momentum animation if needed\n    if (this.options.momentum && duration < this.options.momentumLimitTime && (absDistY > this.options.momentumLimitDistance || absDistX > this.options.momentumLimitDistance)) {\n      var top = false;\n      var bottom = false;\n      var left = false;\n      var right = false;\n      var bounce = this.options.bounce;\n      if (bounce !== false) {\n        top = bounce.top === undefined ? true : bounce.top;\n        bottom = bounce.bottom === undefined ? true : bounce.bottom;\n        left = bounce.left === undefined ? true : bounce.left;\n        right = bounce.right === undefined ? true : bounce.right;\n      }\n      var wrapperWidth = this.directionX === DIRECTION_RIGHT && left || this.directionX === DIRECTION_LEFT && right ? this.wrapperWidth : 0;\n      var wrapperHeight = this.directionY === DIRECTION_DOWN && top || this.directionY === DIRECTION_UP && bottom ? this.wrapperHeight : 0;\n      var momentumX = this.hasHorizontalScroll ? momentum(this.x, this.startX, duration, this.maxScrollX, this.minScrollX, wrapperWidth, this.options) : { destination: newX, duration: 0 };\n      var momentumY = this.hasVerticalScroll ? momentum(this.y, this.startY, duration, this.maxScrollY, this.minScrollY, wrapperHeight, this.options) : { destination: newY, duration: 0 };\n      newX = momentumX.destination;\n      newY = momentumY.destination;\n      time = Math.max(momentumX.duration, momentumY.duration);\n      this.isInTransition = true;\n    } else {\n      if (this.options.wheel) {\n        newY = Math.round(newY / this.itemHeight) * this.itemHeight;\n        time = this.options.wheel.adjustTime || 400;\n      }\n    }\n\n    var easing = ease.swipe;\n    if (this.options.snap) {\n      var snap = this._nearestSnap(newX, newY);\n      this.currentPage = snap;\n      time = this.options.snapSpeed || Math.max(Math.max(Math.min(Math.abs(newX - snap.x), 1000), Math.min(Math.abs(newY - snap.y), 1000)), 300);\n      newX = snap.x;\n      newY = snap.y;\n\n      this.directionX = 0;\n      this.directionY = 0;\n      easing = this.options.snap.easing || ease.bounce;\n    }\n\n    if (newX !== this.x || newY !== this.y) {\n      // change easing function when scroller goes out of the boundaries\n      if (newX > this.minScrollX || newX < this.maxScrollX || newY > this.minScrollY || newY < this.maxScrollY) {\n        easing = ease.swipeBounce;\n      }\n      this.scrollTo(newX, newY, time, easing);\n      return;\n    }\n\n    if (this.options.wheel) {\n      this.selectedIndex = Math.round(Math.abs(this.y / this.itemHeight));\n    }\n    this.trigger('scrollEnd', {\n      x: this.x,\n      y: this.y\n    });\n  };\n\n  BScroll.prototype._checkClick = function (e) {\n    // when in the process of pulling down, it should not prevent click\n    var preventClick = this.stopFromTransition && !this.pulling;\n    this.stopFromTransition = false;\n\n    // we scrolled less than 15 pixels\n    if (!this.moved) {\n      if (this.options.wheel) {\n        if (this.target && this.target.classList.contains(this.options.wheel.wheelWrapperClass)) {\n          var index = Math.abs(Math.round(this.y / this.itemHeight));\n          var _offset = Math.round((this.pointY + offsetToBody(this.wrapper).top - this.wrapperHeight / 2) / this.itemHeight);\n          this.target = this.items[index + _offset];\n        }\n        this.scrollToElement(this.target, this.options.wheel.adjustTime || 400, true, true, ease.swipe);\n        return true;\n      } else {\n        if (!preventClick) {\n          var _dblclick = this.options.dblclick;\n          var dblclickTrigged = false;\n          if (_dblclick && this.lastClickTime) {\n            var _dblclick$delay = _dblclick.delay,\n                delay = _dblclick$delay === undefined ? 300 : _dblclick$delay;\n\n            if (getNow() - this.lastClickTime < delay) {\n              dblclickTrigged = true;\n              dblclick(e);\n            }\n          }\n          if (this.options.tap) {\n            tap(e, this.options.tap);\n          }\n\n          if (this.options.click && !preventDefaultException(e.target, this.options.preventDefaultException)) {\n            click(e);\n          }\n          this.lastClickTime = dblclickTrigged ? null : getNow();\n          return true;\n        }\n        return false;\n      }\n    }\n    return false;\n  };\n\n  BScroll.prototype._resize = function () {\n    var _this = this;\n\n    if (!this.enabled) {\n      return;\n    }\n    // fix a scroll problem under Android condition\n    if (isAndroid) {\n      this.wrapper.scrollTop = 0;\n    }\n    clearTimeout(this.resizeTimeout);\n    this.resizeTimeout = setTimeout(function () {\n      _this.refresh();\n    }, this.options.resizePolling);\n  };\n\n  BScroll.prototype._startProbe = function () {\n    cancelAnimationFrame(this.probeTimer);\n    this.probeTimer = requestAnimationFrame(probe);\n\n    var me = this;\n\n    function probe() {\n      var pos = me.getComputedPosition();\n      me.trigger('scroll', pos);\n      if (!me.isInTransition) {\n        me.trigger('scrollEnd', pos);\n        return;\n      }\n      me.probeTimer = requestAnimationFrame(probe);\n    }\n  };\n\n  BScroll.prototype._transitionTime = function () {\n    var time = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 0;\n\n    this.scrollerStyle[style.transitionDuration] = time + 'ms';\n\n    if (this.options.wheel) {\n      for (var i = 0; i < this.items.length; i++) {\n        this.items[i].style[style.transitionDuration] = time + 'ms';\n      }\n    }\n\n    if (this.indicators) {\n      for (var _i = 0; _i < this.indicators.length; _i++) {\n        this.indicators[_i].transitionTime(time);\n      }\n    }\n  };\n\n  BScroll.prototype._transitionTimingFunction = function (easing) {\n    this.scrollerStyle[style.transitionTimingFunction] = easing;\n\n    if (this.options.wheel) {\n      for (var i = 0; i < this.items.length; i++) {\n        this.items[i].style[style.transitionTimingFunction] = easing;\n      }\n    }\n\n    if (this.indicators) {\n      for (var _i2 = 0; _i2 < this.indicators.length; _i2++) {\n        this.indicators[_i2].transitionTimingFunction(easing);\n      }\n    }\n  };\n\n  BScroll.prototype._transitionEnd = function (e) {\n    if (e.target !== this.scroller || !this.isInTransition) {\n      return;\n    }\n\n    this._transitionTime();\n    var needReset = !this.pulling || this.movingDirectionY === DIRECTION_UP;\n    if (needReset && !this.resetPosition(this.options.bounceTime, ease.bounce)) {\n      this.isInTransition = false;\n      if (this.options.probeType !== PROBE_REALTIME) {\n        this.trigger('scrollEnd', {\n          x: this.x,\n          y: this.y\n        });\n      }\n    }\n  };\n\n  BScroll.prototype._translate = function (x, y, scale) {\n    assert(!isUndef(x) && !isUndef(y), 'Translate x or y is null or undefined.');\n    if (isUndef(scale)) {\n      scale = this.scale;\n    }\n    if (this.options.useTransform) {\n      this.scrollerStyle[style.transform] = 'translate(' + x + 'px,' + y + 'px) scale(' + scale + ')' + this.translateZ;\n    } else {\n      x = Math.round(x);\n      y = Math.round(y);\n      this.scrollerStyle.left = x + 'px';\n      this.scrollerStyle.top = y + 'px';\n    }\n\n    if (this.options.wheel) {\n      var _options$wheel$rotate = this.options.wheel.rotate,\n          rotate = _options$wheel$rotate === undefined ? 25 : _options$wheel$rotate;\n\n      for (var i = 0; i < this.items.length; i++) {\n        var deg = rotate * (y / this.itemHeight + i);\n        this.items[i].style[style.transform] = 'rotateX(' + deg + 'deg)';\n      }\n    }\n\n    this.x = x;\n    this.y = y;\n    this.setScale(scale);\n\n    if (this.indicators) {\n      for (var _i3 = 0; _i3 < this.indicators.length; _i3++) {\n        this.indicators[_i3].updatePosition();\n      }\n    }\n  };\n\n  BScroll.prototype._animate = function (destX, destY, duration, easingFn) {\n    var me = this;\n    var startX = this.x;\n    var startY = this.y;\n    var startScale = this.lastScale;\n    var destScale = this.scale;\n    var startTime = getNow();\n    var destTime = startTime + duration;\n\n    function step() {\n      var now = getNow();\n\n      if (now >= destTime) {\n        me.isAnimating = false;\n        me._translate(destX, destY, destScale);\n\n        me.trigger('scroll', {\n          x: me.x,\n          y: me.y\n        });\n\n        if (!me.pulling && !me.resetPosition(me.options.bounceTime)) {\n          me.trigger('scrollEnd', {\n            x: me.x,\n            y: me.y\n          });\n        }\n        return;\n      }\n      now = (now - startTime) / duration;\n      var easing = easingFn(now);\n      var newX = (destX - startX) * easing + startX;\n      var newY = (destY - startY) * easing + startY;\n      var newScale = (destScale - startScale) * easing + startScale;\n\n      me._translate(newX, newY, newScale);\n\n      if (me.isAnimating) {\n        me.animateTimer = requestAnimationFrame(step);\n      }\n\n      if (me.options.probeType === PROBE_REALTIME) {\n        me.trigger('scroll', {\n          x: me.x,\n          y: me.y\n        });\n      }\n    }\n\n    this.isAnimating = true;\n    cancelAnimationFrame(this.animateTimer);\n    step();\n  };\n\n  BScroll.prototype.scrollBy = function (x, y) {\n    var time = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 0;\n    var easing = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : ease.bounce;\n\n    x = this.x + x;\n    y = this.y + y;\n\n    this.scrollTo(x, y, time, easing);\n  };\n\n  BScroll.prototype.scrollTo = function (x, y) {\n    var time = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 0;\n    var easing = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : ease.bounce;\n\n    this.isInTransition = this.options.useTransition && time > 0 && (x !== this.x || y !== this.y);\n\n    if (!time || this.options.useTransition) {\n      this._transitionTimingFunction(easing.style);\n      this._transitionTime(time);\n      this._translate(x, y);\n\n      if (time && this.options.probeType === PROBE_REALTIME) {\n        this._startProbe();\n      }\n\n      if (!time && (x !== this.x || y !== this.y)) {\n        this.trigger('scroll', {\n          x: x,\n          y: y\n        });\n        // force reflow to put everything in position\n        this._reflow = document.body.offsetHeight;\n        if (!this.resetPosition(this.options.bounceTime, ease.bounce)) {\n          this.trigger('scrollEnd', {\n            x: x,\n            y: y\n          });\n        }\n      }\n\n      if (this.options.wheel) {\n        if (y > this.minScrollY) {\n          this.selectedIndex = 0;\n        } else if (y < this.maxScrollY) {\n          this.selectedIndex = this.items.length - 1;\n        } else {\n          this.selectedIndex = Math.round(Math.abs(y / this.itemHeight));\n        }\n      }\n    } else {\n      this._animate(x, y, time, easing.fn);\n    }\n  };\n\n  BScroll.prototype.scrollToElement = function (el, time, offsetX, offsetY, easing) {\n    if (!el) {\n      return;\n    }\n    el = el.nodeType ? el : this.scroller.querySelector(el);\n\n    if (this.options.wheel && !el.classList.contains(this.options.wheel.wheelItemClass)) {\n      return;\n    }\n\n    var pos = offset(el);\n    pos.left -= this.wrapperOffset.left;\n    pos.top -= this.wrapperOffset.top;\n\n    // if offsetX/Y are true we center the element to the screen\n    if (offsetX === true) {\n      offsetX = Math.round(el.offsetWidth / 2 - this.wrapper.offsetWidth / 2);\n    }\n    if (offsetY === true) {\n      offsetY = Math.round(el.offsetHeight / 2 - this.wrapper.offsetHeight / 2);\n    }\n\n    pos.left -= offsetX || 0;\n    pos.top -= offsetY || 0;\n    pos.left = pos.left > this.minScrollX ? this.minScrollX : pos.left < this.maxScrollX ? this.maxScrollX : pos.left;\n    pos.top = pos.top > this.minScrollY ? this.minScrollY : pos.top < this.maxScrollY ? this.maxScrollY : pos.top;\n\n    if (this.options.wheel) {\n      pos.top = Math.round(pos.top / this.itemHeight) * this.itemHeight;\n    }\n\n    this.scrollTo(pos.left, pos.top, time, easing);\n  };\n\n  BScroll.prototype.resetPosition = function () {\n    var time = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 0;\n    var easeing = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : ease.bounce;\n\n    var x = this.x;\n    var roundX = Math.round(x);\n    if (!this.hasHorizontalScroll || roundX > this.minScrollX) {\n      x = this.minScrollX;\n    } else if (roundX < this.maxScrollX) {\n      x = this.maxScrollX;\n    }\n\n    var y = this.y;\n    var roundY = Math.round(y);\n    if (!this.hasVerticalScroll || roundY > this.minScrollY) {\n      y = this.minScrollY;\n    } else if (roundY < this.maxScrollY) {\n      y = this.maxScrollY;\n    }\n\n    if (x === this.x && y === this.y) {\n      return false;\n    }\n\n    this.scrollTo(x, y, time, easeing);\n\n    return true;\n  };\n\n  BScroll.prototype.getComputedPosition = function () {\n    var matrix = window.getComputedStyle(this.scroller, null);\n    var x = void 0;\n    var y = void 0;\n\n    if (this.options.useTransform) {\n      matrix = matrix[style.transform].split(')')[0].split(', ');\n      x = +(matrix[12] || matrix[4]);\n      y = +(matrix[13] || matrix[5]);\n    } else {\n      x = +matrix.left.replace(/[^-\\d.]/g, '');\n      y = +matrix.top.replace(/[^-\\d.]/g, '');\n    }\n\n    return {\n      x: x,\n      y: y\n    };\n  };\n\n  BScroll.prototype.stop = function () {\n    if (this.options.useTransition && this.isInTransition) {\n      this.isInTransition = false;\n      cancelAnimationFrame(this.probeTimer);\n      var pos = this.getComputedPosition();\n      this._translate(pos.x, pos.y);\n      if (this.options.wheel) {\n        this.target = this.items[Math.round(-pos.y / this.itemHeight)];\n      } else {\n        this.trigger('scrollEnd', {\n          x: this.x,\n          y: this.y\n        });\n      }\n      this.stopFromTransition = true;\n    } else if (!this.options.useTransition && this.isAnimating) {\n      this.isAnimating = false;\n      cancelAnimationFrame(this.animateTimer);\n      this.trigger('scrollEnd', {\n        x: this.x,\n        y: this.y\n      });\n      this.stopFromTransition = true;\n    }\n  };\n\n  BScroll.prototype.destroy = function () {\n    this.destroyed = true;\n    this.trigger('destroy');\n    if (this.options.useTransition) {\n      cancelAnimationFrame(this.probeTimer);\n    } else {\n      cancelAnimationFrame(this.animateTimer);\n    }\n    this._removeDOMEvents();\n    // remove custom events\n    this._events = {};\n  };\n}\n\nfunction snapMixin(BScroll) {\n  BScroll.prototype._initSnap = function () {\n    var _this = this;\n\n    this.currentPage = {};\n    var snap = this.options.snap;\n\n    if (snap.loop) {\n      var children = this.scroller.children;\n      if (children.length > 1) {\n        prepend(children[children.length - 1].cloneNode(true), this.scroller);\n        this.scroller.appendChild(children[1].cloneNode(true));\n      } else {\n        // Loop does not make any sense if there is only one child.\n        snap.loop = false;\n      }\n    }\n\n    var el = snap.el;\n    if (typeof el === 'string') {\n      el = this.scroller.querySelectorAll(el);\n    }\n\n    this.on('refresh', function () {\n      _this.pages = [];\n\n      if (!_this.wrapperWidth || !_this.wrapperHeight || !_this.scrollerWidth || !_this.scrollerHeight) {\n        return;\n      }\n\n      var stepX = snap.stepX || _this.wrapperWidth;\n      var stepY = snap.stepY || _this.wrapperHeight;\n\n      var x = 0;\n      var y = void 0;\n      var cx = void 0;\n      var cy = void 0;\n      var i = 0;\n      var l = void 0;\n      var m = 0;\n      var n = void 0;\n      var rect = void 0;\n      if (!el) {\n        cx = Math.round(stepX / 2);\n        cy = Math.round(stepY / 2);\n\n        while (x > -_this.scrollerWidth) {\n          _this.pages[i] = [];\n          l = 0;\n          y = 0;\n\n          while (y > -_this.scrollerHeight) {\n            _this.pages[i][l] = {\n              x: Math.max(x, _this.maxScrollX),\n              y: Math.max(y, _this.maxScrollY),\n              width: stepX,\n              height: stepY,\n              cx: x - cx,\n              cy: y - cy\n            };\n\n            y -= stepY;\n            l++;\n          }\n\n          x -= stepX;\n          i++;\n        }\n      } else {\n        l = el.length;\n        n = -1;\n\n        for (; i < l; i++) {\n          rect = getRect(el[i]);\n          if (i === 0 || rect.left <= getRect(el[i - 1]).left) {\n            m = 0;\n            n++;\n          }\n\n          if (!_this.pages[m]) {\n            _this.pages[m] = [];\n          }\n\n          x = Math.max(-rect.left, _this.maxScrollX);\n          y = Math.max(-rect.top, _this.maxScrollY);\n          cx = x - Math.round(rect.width / 2);\n          cy = y - Math.round(rect.height / 2);\n\n          _this.pages[m][n] = {\n            x: x,\n            y: y,\n            width: rect.width,\n            height: rect.height,\n            cx: cx,\n            cy: cy\n          };\n\n          if (x > _this.maxScrollX) {\n            m++;\n          }\n        }\n      }\n\n      _this._checkSnapLoop();\n\n      var initPageX = snap._loopX ? 1 : 0;\n      var initPageY = snap._loopY ? 1 : 0;\n      _this._goToPage(_this.currentPage.pageX || initPageX, _this.currentPage.pageY || initPageY, 0);\n\n      // Update snap threshold if needed.\n      var snapThreshold = snap.threshold;\n      if (snapThreshold % 1 === 0) {\n        _this.snapThresholdX = snapThreshold;\n        _this.snapThresholdY = snapThreshold;\n      } else {\n        _this.snapThresholdX = Math.round(_this.pages[_this.currentPage.pageX][_this.currentPage.pageY].width * snapThreshold);\n        _this.snapThresholdY = Math.round(_this.pages[_this.currentPage.pageX][_this.currentPage.pageY].height * snapThreshold);\n      }\n    });\n\n    this.on('scrollEnd', function () {\n      if (snap.loop) {\n        if (snap._loopX) {\n          if (_this.currentPage.pageX === 0) {\n            _this._goToPage(_this.pages.length - 2, _this.currentPage.pageY, 0);\n          }\n          if (_this.currentPage.pageX === _this.pages.length - 1) {\n            _this._goToPage(1, _this.currentPage.pageY, 0);\n          }\n        } else {\n          if (_this.currentPage.pageY === 0) {\n            _this._goToPage(_this.currentPage.pageX, _this.pages[0].length - 2, 0);\n          }\n          if (_this.currentPage.pageY === _this.pages[0].length - 1) {\n            _this._goToPage(_this.currentPage.pageX, 1, 0);\n          }\n        }\n      }\n    });\n\n    if (snap.listenFlick !== false) {\n      this.on('flick', function () {\n        var time = snap.speed || Math.max(Math.max(Math.min(Math.abs(_this.x - _this.startX), 1000), Math.min(Math.abs(_this.y - _this.startY), 1000)), 300);\n\n        _this._goToPage(_this.currentPage.pageX + _this.directionX, _this.currentPage.pageY + _this.directionY, time);\n      });\n    }\n\n    this.on('destroy', function () {\n      if (snap.loop) {\n        var _children = _this.scroller.children;\n        if (_children.length > 2) {\n          removeChild(_this.scroller, _children[_children.length - 1]);\n          removeChild(_this.scroller, _children[0]);\n        }\n      }\n    });\n  };\n\n  BScroll.prototype._checkSnapLoop = function () {\n    var snap = this.options.snap;\n\n    if (!snap.loop || !this.pages || !this.pages.length) {\n      return;\n    }\n\n    if (this.pages.length > 1) {\n      snap._loopX = true;\n    }\n    if (this.pages[0] && this.pages[0].length > 1) {\n      snap._loopY = true;\n    }\n    if (snap._loopX && snap._loopY) {\n      warn('Loop does not support two direction at the same time.');\n    }\n  };\n\n  BScroll.prototype._nearestSnap = function (x, y) {\n    if (!this.pages.length) {\n      return { x: 0, y: 0, pageX: 0, pageY: 0 };\n    }\n\n    var i = 0;\n    // Check if we exceeded the snap threshold\n    if (Math.abs(x - this.absStartX) <= this.snapThresholdX && Math.abs(y - this.absStartY) <= this.snapThresholdY) {\n      return this.currentPage;\n    }\n\n    if (x > this.minScrollX) {\n      x = this.minScrollX;\n    } else if (x < this.maxScrollX) {\n      x = this.maxScrollX;\n    }\n\n    if (y > this.minScrollY) {\n      y = this.minScrollY;\n    } else if (y < this.maxScrollY) {\n      y = this.maxScrollY;\n    }\n\n    var l = this.pages.length;\n    for (; i < l; i++) {\n      if (x >= this.pages[i][0].cx) {\n        x = this.pages[i][0].x;\n        break;\n      }\n    }\n\n    l = this.pages[i].length;\n\n    var m = 0;\n    for (; m < l; m++) {\n      if (y >= this.pages[0][m].cy) {\n        y = this.pages[0][m].y;\n        break;\n      }\n    }\n\n    if (i === this.currentPage.pageX) {\n      i += this.directionX;\n\n      if (i < 0) {\n        i = 0;\n      } else if (i >= this.pages.length) {\n        i = this.pages.length - 1;\n      }\n\n      x = this.pages[i][0].x;\n    }\n\n    if (m === this.currentPage.pageY) {\n      m += this.directionY;\n\n      if (m < 0) {\n        m = 0;\n      } else if (m >= this.pages[0].length) {\n        m = this.pages[0].length - 1;\n      }\n\n      y = this.pages[0][m].y;\n    }\n\n    return {\n      x: x,\n      y: y,\n      pageX: i,\n      pageY: m\n    };\n  };\n\n  BScroll.prototype._goToPage = function (x) {\n    var y = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n    var time = arguments[2];\n    var easing = arguments[3];\n\n    var snap = this.options.snap;\n\n    if (!snap || !this.pages || !this.pages.length) {\n      return;\n    }\n\n    easing = easing || snap.easing || ease.bounce;\n\n    if (x >= this.pages.length) {\n      x = this.pages.length - 1;\n    } else if (x < 0) {\n      x = 0;\n    }\n\n    if (!this.pages[x]) {\n      return;\n    }\n\n    if (y >= this.pages[x].length) {\n      y = this.pages[x].length - 1;\n    } else if (y < 0) {\n      y = 0;\n    }\n\n    var posX = this.pages[x][y].x;\n    var posY = this.pages[x][y].y;\n\n    time = time === undefined ? snap.speed || Math.max(Math.max(Math.min(Math.abs(posX - this.x), 1000), Math.min(Math.abs(posY - this.y), 1000)), 300) : time;\n\n    this.currentPage = {\n      x: posX,\n      y: posY,\n      pageX: x,\n      pageY: y\n    };\n    this.scrollTo(posX, posY, time, easing);\n  };\n\n  BScroll.prototype.goToPage = function (x, y, time, easing) {\n    var snap = this.options.snap;\n    if (!snap || !this.pages || !this.pages.length) {\n      return;\n    }\n\n    if (snap.loop) {\n      var len = void 0;\n      if (snap._loopX) {\n        len = this.pages.length - 2;\n        if (x >= len) {\n          x = len - 1;\n        } else if (x < 0) {\n          x = 0;\n        }\n        x += 1;\n      } else {\n        len = this.pages[0].length - 2;\n        if (y >= len) {\n          y = len - 1;\n        } else if (y < 0) {\n          y = 0;\n        }\n        y += 1;\n      }\n    }\n    this._goToPage(x, y, time, easing);\n  };\n\n  BScroll.prototype.next = function (time, easing) {\n    var snap = this.options.snap;\n    if (!snap) {\n      return;\n    }\n\n    var x = this.currentPage.pageX;\n    var y = this.currentPage.pageY;\n\n    x++;\n    if (x >= this.pages.length && this.hasVerticalScroll) {\n      x = 0;\n      y++;\n    }\n\n    this._goToPage(x, y, time, easing);\n  };\n\n  BScroll.prototype.prev = function (time, easing) {\n    var snap = this.options.snap;\n    if (!snap) {\n      return;\n    }\n\n    var x = this.currentPage.pageX;\n    var y = this.currentPage.pageY;\n\n    x--;\n    if (x < 0 && this.hasVerticalScroll) {\n      x = 0;\n      y--;\n    }\n\n    this._goToPage(x, y, time, easing);\n  };\n\n  BScroll.prototype.getCurrentPage = function () {\n    var snap = this.options.snap;\n    if (!snap) {\n      return null;\n    }\n\n    if (snap.loop) {\n      var currentPage = void 0;\n      if (snap._loopX) {\n        currentPage = extend({}, this.currentPage, {\n          pageX: this.currentPage.pageX - 1\n        });\n      } else {\n        currentPage = extend({}, this.currentPage, {\n          pageY: this.currentPage.pageY - 1\n        });\n      }\n      return currentPage;\n    }\n    return this.currentPage;\n  };\n}\n\nfunction wheelMixin(BScroll) {\n  BScroll.prototype.wheelTo = function () {\n    var index = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 0;\n\n    if (this.options.wheel) {\n      this.y = -index * this.itemHeight;\n      this.scrollTo(0, this.y);\n    }\n  };\n\n  BScroll.prototype.getSelectedIndex = function () {\n    return this.options.wheel && this.selectedIndex;\n  };\n\n  BScroll.prototype._initWheel = function () {\n    var wheel = this.options.wheel;\n    if (!wheel.wheelWrapperClass) {\n      wheel.wheelWrapperClass = 'wheel-scroll';\n    }\n    if (!wheel.wheelItemClass) {\n      wheel.wheelItemClass = 'wheel-item';\n    }\n    if (wheel.selectedIndex === undefined) {\n      wheel.selectedIndex = 0;\n      warn('wheel option selectedIndex is required!');\n    }\n  };\n}\n\nvar INDICATOR_MIN_LEN = 8;\n\nfunction scrollbarMixin(BScroll) {\n  BScroll.prototype._initScrollbar = function () {\n    var _this = this;\n\n    var _options$scrollbar = this.options.scrollbar,\n        _options$scrollbar$fa = _options$scrollbar.fade,\n        fade = _options$scrollbar$fa === undefined ? true : _options$scrollbar$fa,\n        _options$scrollbar$in = _options$scrollbar.interactive,\n        interactive = _options$scrollbar$in === undefined ? false : _options$scrollbar$in;\n\n    this.indicators = [];\n    var indicator = void 0;\n\n    if (this.options.scrollX) {\n      indicator = {\n        el: createScrollbar('horizontal'),\n        direction: 'horizontal',\n        fade: fade,\n        interactive: interactive\n      };\n      this._insertScrollBar(indicator.el);\n\n      this.indicators.push(new Indicator(this, indicator));\n    }\n\n    if (this.options.scrollY) {\n      indicator = {\n        el: createScrollbar('vertical'),\n        direction: 'vertical',\n        fade: fade,\n        interactive: interactive\n      };\n      this._insertScrollBar(indicator.el);\n      this.indicators.push(new Indicator(this, indicator));\n    }\n\n    this.on('refresh', function () {\n      for (var i = 0; i < _this.indicators.length; i++) {\n        _this.indicators[i].refresh();\n      }\n    });\n\n    if (fade) {\n      this.on('scrollEnd', function () {\n        for (var i = 0; i < _this.indicators.length; i++) {\n          _this.indicators[i].fade();\n        }\n      });\n\n      this.on('scrollCancel', function () {\n        for (var i = 0; i < _this.indicators.length; i++) {\n          _this.indicators[i].fade();\n        }\n      });\n\n      this.on('scrollStart', function () {\n        for (var i = 0; i < _this.indicators.length; i++) {\n          _this.indicators[i].fade(true);\n        }\n      });\n\n      this.on('beforeScrollStart', function () {\n        for (var i = 0; i < _this.indicators.length; i++) {\n          _this.indicators[i].fade(true, true);\n        }\n      });\n    }\n\n    this.on('destroy', function () {\n      _this._removeScrollBars();\n    });\n  };\n\n  BScroll.prototype._insertScrollBar = function (scrollbar) {\n    this.wrapper.appendChild(scrollbar);\n  };\n\n  BScroll.prototype._removeScrollBars = function () {\n    for (var i = 0; i < this.indicators.length; i++) {\n      this.indicators[i].destroy();\n    }\n  };\n}\n\nfunction createScrollbar(direction) {\n  var scrollbar = document.createElement('div');\n  var indicator = document.createElement('div');\n\n  scrollbar.style.cssText = 'position:absolute;z-index:9999;pointerEvents:none';\n  indicator.style.cssText = 'box-sizing:border-box;position:absolute;background:rgba(0,0,0,0.5);border:1px solid rgba(255,255,255,0.9);border-radius:3px;';\n\n  indicator.className = 'bscroll-indicator';\n\n  if (direction === 'horizontal') {\n    scrollbar.style.cssText += ';height:7px;left:2px;right:2px;bottom:0';\n    indicator.style.height = '100%';\n    scrollbar.className = 'bscroll-horizontal-scrollbar';\n  } else {\n    scrollbar.style.cssText += ';width:7px;bottom:2px;top:2px;right:1px';\n    indicator.style.width = '100%';\n    scrollbar.className = 'bscroll-vertical-scrollbar';\n  }\n\n  scrollbar.style.cssText += ';overflow:hidden';\n  scrollbar.appendChild(indicator);\n\n  return scrollbar;\n}\n\nfunction Indicator(scroller, options) {\n  this.wrapper = options.el;\n  this.wrapperStyle = this.wrapper.style;\n  this.indicator = this.wrapper.children[0];\n  this.indicatorStyle = this.indicator.style;\n  this.scroller = scroller;\n  this.direction = options.direction;\n  if (options.fade) {\n    this.visible = 0;\n    this.wrapperStyle.opacity = '0';\n  } else {\n    this.visible = 1;\n  }\n\n  this.sizeRatioX = 1;\n  this.sizeRatioY = 1;\n  this.maxPosX = 0;\n  this.maxPosY = 0;\n  this.x = 0;\n  this.y = 0;\n\n  if (options.interactive) {\n    this._addDOMEvents();\n  }\n}\n\nIndicator.prototype.handleEvent = function (e) {\n  switch (e.type) {\n    case 'touchstart':\n    case 'mousedown':\n      this._start(e);\n      break;\n    case 'touchmove':\n    case 'mousemove':\n      this._move(e);\n      break;\n    case 'touchend':\n    case 'mouseup':\n    case 'touchcancel':\n    case 'mousecancel':\n      this._end(e);\n      break;\n  }\n};\n\nIndicator.prototype.refresh = function () {\n  if (this._shouldShow()) {\n    this.transitionTime();\n    this._calculate();\n    this.updatePosition();\n  }\n};\n\nIndicator.prototype.fade = function (visible, hold) {\n  var _this2 = this;\n\n  if (hold && !this.visible) {\n    return;\n  }\n\n  var time = visible ? 250 : 500;\n\n  visible = visible ? '1' : '0';\n\n  this.wrapperStyle[style.transitionDuration] = time + 'ms';\n\n  clearTimeout(this.fadeTimeout);\n  this.fadeTimeout = setTimeout(function () {\n    _this2.wrapperStyle.opacity = visible;\n    _this2.visible = +visible;\n  }, 0);\n};\n\nIndicator.prototype.updatePosition = function () {\n  if (this.direction === 'vertical') {\n    var y = Math.round(this.sizeRatioY * this.scroller.y);\n\n    if (y < 0) {\n      this.transitionTime(500);\n      var height = Math.max(this.indicatorHeight + y * 3, INDICATOR_MIN_LEN);\n      this.indicatorStyle.height = height + 'px';\n      y = 0;\n    } else if (y > this.maxPosY) {\n      this.transitionTime(500);\n      var _height = Math.max(this.indicatorHeight - (y - this.maxPosY) * 3, INDICATOR_MIN_LEN);\n      this.indicatorStyle.height = _height + 'px';\n      y = this.maxPosY + this.indicatorHeight - _height;\n    } else {\n      this.indicatorStyle.height = this.indicatorHeight + 'px';\n    }\n    this.y = y;\n\n    if (this.scroller.options.useTransform) {\n      this.indicatorStyle[style.transform] = 'translateY(' + y + 'px)' + this.scroller.translateZ;\n    } else {\n      this.indicatorStyle.top = y + 'px';\n    }\n  } else {\n    var x = Math.round(this.sizeRatioX * this.scroller.x);\n\n    if (x < 0) {\n      this.transitionTime(500);\n      var width = Math.max(this.indicatorWidth + x * 3, INDICATOR_MIN_LEN);\n      this.indicatorStyle.width = width + 'px';\n      x = 0;\n    } else if (x > this.maxPosX) {\n      this.transitionTime(500);\n      var _width = Math.max(this.indicatorWidth - (x - this.maxPosX) * 3, INDICATOR_MIN_LEN);\n      this.indicatorStyle.width = _width + 'px';\n      x = this.maxPosX + this.indicatorWidth - _width;\n    } else {\n      this.indicatorStyle.width = this.indicatorWidth + 'px';\n    }\n\n    this.x = x;\n\n    if (this.scroller.options.useTransform) {\n      this.indicatorStyle[style.transform] = 'translateX(' + x + 'px)' + this.scroller.translateZ;\n    } else {\n      this.indicatorStyle.left = x + 'px';\n    }\n  }\n};\n\nIndicator.prototype.transitionTime = function () {\n  var time = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 0;\n\n  this.indicatorStyle[style.transitionDuration] = time + 'ms';\n};\n\nIndicator.prototype.transitionTimingFunction = function (easing) {\n  this.indicatorStyle[style.transitionTimingFunction] = easing;\n};\n\nIndicator.prototype.destroy = function () {\n  this._removeDOMEvents();\n  this.wrapper.parentNode.removeChild(this.wrapper);\n};\n\nIndicator.prototype._start = function (e) {\n  var point = e.touches ? e.touches[0] : e;\n\n  e.preventDefault();\n  e.stopPropagation();\n\n  this.transitionTime();\n\n  this.initiated = true;\n  this.moved = false;\n  this.lastPointX = point.pageX;\n  this.lastPointY = point.pageY;\n\n  this.startTime = getNow();\n\n  this._handleMoveEvents(addEvent);\n  this.scroller.trigger('beforeScrollStart');\n};\n\nIndicator.prototype._move = function (e) {\n  var point = e.touches ? e.touches[0] : e;\n\n  e.preventDefault();\n  e.stopPropagation();\n\n  if (!this.moved) {\n    this.scroller.trigger('scrollStart');\n  }\n\n  this.moved = true;\n\n  var deltaX = point.pageX - this.lastPointX;\n  this.lastPointX = point.pageX;\n\n  var deltaY = point.pageY - this.lastPointY;\n  this.lastPointY = point.pageY;\n\n  var newX = this.x + deltaX;\n  var newY = this.y + deltaY;\n\n  this._pos(newX, newY);\n};\n\nIndicator.prototype._end = function (e) {\n  if (!this.initiated) {\n    return;\n  }\n  this.initiated = false;\n\n  e.preventDefault();\n  e.stopPropagation();\n\n  this._handleMoveEvents(removeEvent);\n\n  var snapOption = this.scroller.options.snap;\n  if (snapOption) {\n    var speed = snapOption.speed,\n        _snapOption$easing = snapOption.easing,\n        easing = _snapOption$easing === undefined ? ease.bounce : _snapOption$easing;\n\n    var snap = this.scroller._nearestSnap(this.scroller.x, this.scroller.y);\n\n    var time = speed || Math.max(Math.max(Math.min(Math.abs(this.scroller.x - snap.x), 1000), Math.min(Math.abs(this.scroller.y - snap.y), 1000)), 300);\n\n    if (this.scroller.x !== snap.x || this.scroller.y !== snap.y) {\n      this.scroller.directionX = 0;\n      this.scroller.directionY = 0;\n      this.scroller.currentPage = snap;\n      this.scroller.scrollTo(snap.x, snap.y, time, easing);\n    }\n  }\n\n  if (this.moved) {\n    this.scroller.trigger('scrollEnd', {\n      x: this.scroller.x,\n      y: this.scroller.y\n    });\n  }\n};\n\nIndicator.prototype._pos = function (x, y) {\n  if (x < 0) {\n    x = 0;\n  } else if (x > this.maxPosX) {\n    x = this.maxPosX;\n  }\n\n  if (y < 0) {\n    y = 0;\n  } else if (y > this.maxPosY) {\n    y = this.maxPosY;\n  }\n\n  x = Math.round(x / this.sizeRatioX);\n  y = Math.round(y / this.sizeRatioY);\n\n  this.scroller.scrollTo(x, y);\n  this.scroller.trigger('scroll', {\n    x: this.scroller.x,\n    y: this.scroller.y\n  });\n};\n\nIndicator.prototype._shouldShow = function () {\n  if (this.direction === 'vertical' && this.scroller.hasVerticalScroll || this.direction === 'horizontal' && this.scroller.hasHorizontalScroll) {\n    this.wrapper.style.display = '';\n    return true;\n  }\n  this.wrapper.style.display = 'none';\n  return false;\n};\n\nIndicator.prototype._calculate = function () {\n  if (this.direction === 'vertical') {\n    var wrapperHeight = this.wrapper.clientHeight;\n    this.indicatorHeight = Math.max(Math.round(wrapperHeight * wrapperHeight / (this.scroller.scrollerHeight || wrapperHeight || 1)), INDICATOR_MIN_LEN);\n    this.indicatorStyle.height = this.indicatorHeight + 'px';\n\n    this.maxPosY = wrapperHeight - this.indicatorHeight;\n\n    this.sizeRatioY = this.maxPosY / this.scroller.maxScrollY;\n  } else {\n    var wrapperWidth = this.wrapper.clientWidth;\n    this.indicatorWidth = Math.max(Math.round(wrapperWidth * wrapperWidth / (this.scroller.scrollerWidth || wrapperWidth || 1)), INDICATOR_MIN_LEN);\n    this.indicatorStyle.width = this.indicatorWidth + 'px';\n\n    this.maxPosX = wrapperWidth - this.indicatorWidth;\n\n    this.sizeRatioX = this.maxPosX / this.scroller.maxScrollX;\n  }\n};\n\nIndicator.prototype._addDOMEvents = function () {\n  var eventOperation = addEvent;\n  this._handleDOMEvents(eventOperation);\n};\n\nIndicator.prototype._removeDOMEvents = function () {\n  var eventOperation = removeEvent;\n  this._handleDOMEvents(eventOperation);\n  this._handleMoveEvents(eventOperation);\n};\n\nIndicator.prototype._handleMoveEvents = function (eventOperation) {\n  if (!this.scroller.options.disableTouch) {\n    eventOperation(window, 'touchmove', this);\n  }\n  if (!this.scroller.options.disableMouse) {\n    eventOperation(window, 'mousemove', this);\n  }\n};\n\nIndicator.prototype._handleDOMEvents = function (eventOperation) {\n  if (!this.scroller.options.disableTouch) {\n    eventOperation(this.indicator, 'touchstart', this);\n    eventOperation(window, 'touchend', this);\n  }\n  if (!this.scroller.options.disableMouse) {\n    eventOperation(this.indicator, 'mousedown', this);\n    eventOperation(window, 'mouseup', this);\n  }\n};\n\nfunction pullDownMixin(BScroll) {\n  BScroll.prototype._initPullDown = function () {\n    // must watch scroll in real time\n    this.options.probeType = PROBE_REALTIME;\n  };\n\n  BScroll.prototype._checkPullDown = function () {\n    var _options$pullDownRefr = this.options.pullDownRefresh,\n        _options$pullDownRefr2 = _options$pullDownRefr.threshold,\n        threshold = _options$pullDownRefr2 === undefined ? 90 : _options$pullDownRefr2,\n        _options$pullDownRefr3 = _options$pullDownRefr.stop,\n        stop = _options$pullDownRefr3 === undefined ? 40 : _options$pullDownRefr3;\n\n    // check if a real pull down action\n\n    if (this.directionY !== DIRECTION_DOWN || this.y < threshold) {\n      return false;\n    }\n\n    if (!this.pulling) {\n      this.pulling = true;\n      this.trigger('pullingDown');\n    }\n    this.scrollTo(this.x, stop, this.options.bounceTime, ease.bounce);\n\n    return this.pulling;\n  };\n\n  BScroll.prototype.finishPullDown = function () {\n    this.pulling = false;\n    this.resetPosition(this.options.bounceTime, ease.bounce);\n  };\n\n  BScroll.prototype.openPullDown = function () {\n    var config = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : true;\n\n    this.options.pullDownRefresh = config;\n    this._initPullDown();\n  };\n\n  BScroll.prototype.closePullDown = function () {\n    this.options.pullDownRefresh = false;\n  };\n}\n\nfunction pullUpMixin(BScroll) {\n  BScroll.prototype._initPullUp = function () {\n    // must watch scroll in real time\n    this.options.probeType = PROBE_REALTIME;\n\n    this.pullupWatching = false;\n    this._watchPullUp();\n  };\n\n  BScroll.prototype._watchPullUp = function () {\n    if (this.pullupWatching) {\n      return;\n    }\n    this.pullupWatching = true;\n    this.on('scroll', this._checkToEnd);\n  };\n\n  BScroll.prototype._checkToEnd = function (pos) {\n    var _this = this;\n\n    var _options$pullUpLoad$t = this.options.pullUpLoad.threshold,\n        threshold = _options$pullUpLoad$t === undefined ? 0 : _options$pullUpLoad$t;\n\n    if (this.movingDirectionY === DIRECTION_UP && pos.y <= this.maxScrollY + threshold) {\n      // reset pullupWatching status after scroll end.\n      this.once('scrollEnd', function () {\n        _this.pullupWatching = false;\n      });\n      this.trigger('pullingUp');\n      this.off('scroll', this._checkToEnd);\n    }\n  };\n\n  BScroll.prototype.finishPullUp = function () {\n    var _this2 = this;\n\n    if (this.pullupWatching) {\n      this.once('scrollEnd', function () {\n        _this2._watchPullUp();\n      });\n    } else {\n      this._watchPullUp();\n    }\n  };\n\n  BScroll.prototype.openPullUp = function () {\n    var config = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : true;\n\n    this.options.pullUpLoad = config;\n    this._initPullUp();\n  };\n\n  BScroll.prototype.closePullUp = function () {\n    this.options.pullUpLoad = false;\n    if (!this.pullupWatching) {\n      return;\n    }\n    this.pullupWatching = false;\n    this.off('scroll', this._checkToEnd);\n  };\n}\n\nfunction mouseWheelMixin(BScroll) {\n  BScroll.prototype._initMouseWheel = function () {\n    var _this = this;\n\n    this._handleMouseWheelEvent(addEvent);\n\n    this.on('destroy', function () {\n      clearTimeout(_this.mouseWheelTimer);\n      clearTimeout(_this.mouseWheelEndTimer);\n      _this._handleMouseWheelEvent(removeEvent);\n    });\n\n    this.firstWheelOpreation = true;\n  };\n\n  BScroll.prototype._handleMouseWheelEvent = function (eventOperation) {\n    eventOperation(this.wrapper, 'wheel', this);\n    eventOperation(this.wrapper, 'mousewheel', this);\n    eventOperation(this.wrapper, 'DOMMouseScroll', this);\n  };\n\n  BScroll.prototype._onMouseWheel = function (e) {\n    var _this2 = this;\n\n    if (!this.enabled) {\n      return;\n    }\n    e.preventDefault();\n\n    if (this.options.stopPropagation) {\n      e.stopPropagation();\n    }\n\n    if (this.firstWheelOpreation) {\n      this.trigger('scrollStart');\n    }\n    this.firstWheelOpreation = false;\n\n    var _options$mouseWheel = this.options.mouseWheel,\n        _options$mouseWheel$s = _options$mouseWheel.speed,\n        speed = _options$mouseWheel$s === undefined ? 20 : _options$mouseWheel$s,\n        _options$mouseWheel$i = _options$mouseWheel.invert,\n        invert = _options$mouseWheel$i === undefined ? false : _options$mouseWheel$i,\n        _options$mouseWheel$e = _options$mouseWheel.easeTime,\n        easeTime = _options$mouseWheel$e === undefined ? 300 : _options$mouseWheel$e;\n\n\n    clearTimeout(this.mouseWheelTimer);\n    this.mouseWheelTimer = setTimeout(function () {\n      if (!_this2.options.snap && !easeTime) {\n        _this2.trigger('scrollEnd', {\n          x: _this2.x,\n          y: _this2.y\n        });\n      }\n      _this2.firstWheelOpreation = true;\n    }, 400);\n\n    var wheelDeltaX = void 0;\n    var wheelDeltaY = void 0;\n\n    switch (true) {\n      case 'deltaX' in e:\n        if (e.deltaMode === 1) {\n          wheelDeltaX = -e.deltaX * speed;\n          wheelDeltaY = -e.deltaY * speed;\n        } else {\n          wheelDeltaX = -e.deltaX;\n          wheelDeltaY = -e.deltaY;\n        }\n        break;\n      case 'wheelDeltaX' in e:\n        wheelDeltaX = e.wheelDeltaX / 120 * speed;\n        wheelDeltaY = e.wheelDeltaY / 120 * speed;\n        break;\n      case 'wheelDelta' in e:\n        wheelDeltaX = wheelDeltaY = e.wheelDelta / 120 * speed;\n        break;\n      case 'detail' in e:\n        wheelDeltaX = wheelDeltaY = -e.detail / 3 * speed;\n        break;\n      default:\n        return;\n    }\n\n    var direction = invert ? -1 : 1;\n    wheelDeltaX *= direction;\n    wheelDeltaY *= direction;\n\n    if (!this.hasVerticalScroll) {\n      wheelDeltaX = wheelDeltaY;\n      wheelDeltaY = 0;\n    }\n\n    var newX = void 0;\n    var newY = void 0;\n    if (this.options.snap) {\n      newX = this.currentPage.pageX;\n      newY = this.currentPage.pageY;\n\n      if (wheelDeltaX > 0) {\n        newX--;\n      } else if (wheelDeltaX < 0) {\n        newX++;\n      }\n\n      if (wheelDeltaY > 0) {\n        newY--;\n      } else if (wheelDeltaY < 0) {\n        newY++;\n      }\n\n      this._goToPage(newX, newY);\n      return;\n    }\n\n    newX = this.x + Math.round(this.hasHorizontalScroll ? wheelDeltaX : 0);\n    newY = this.y + Math.round(this.hasVerticalScroll ? wheelDeltaY : 0);\n\n    this.movingDirectionX = this.directionX = wheelDeltaX > 0 ? -1 : wheelDeltaX < 0 ? 1 : 0;\n    this.movingDirectionY = this.directionY = wheelDeltaY > 0 ? -1 : wheelDeltaY < 0 ? 1 : 0;\n\n    if (newX > this.minScrollX) {\n      newX = this.minScrollX;\n    } else if (newX < this.maxScrollX) {\n      newX = this.maxScrollX;\n    }\n\n    if (newY > this.minScrollY) {\n      newY = this.minScrollY;\n    } else if (newY < this.maxScrollY) {\n      newY = this.maxScrollY;\n    }\n\n    var needTriggerEnd = this.y === newY;\n    this.scrollTo(newX, newY, easeTime, ease.swipe);\n    this.trigger('scroll', {\n      x: this.x,\n      y: this.y\n    });\n    clearTimeout(this.mouseWheelEndTimer);\n    if (needTriggerEnd) {\n      this.mouseWheelEndTimer = setTimeout(function () {\n        _this2.trigger('scrollEnd', {\n          x: _this2.x,\n          y: _this2.y\n        });\n      }, easeTime);\n    }\n  };\n}\n\nfunction zoomMixin(BScroll) {\n  BScroll.prototype._initZoom = function () {\n    var _options$zoom = this.options.zoom,\n        _options$zoom$start = _options$zoom.start,\n        start = _options$zoom$start === undefined ? 1 : _options$zoom$start,\n        _options$zoom$min = _options$zoom.min,\n        min = _options$zoom$min === undefined ? 1 : _options$zoom$min,\n        _options$zoom$max = _options$zoom.max,\n        max = _options$zoom$max === undefined ? 4 : _options$zoom$max;\n\n    this.scale = Math.min(Math.max(start, min), max);\n    this.setScale(this.scale);\n    this.scrollerStyle[style.transformOrigin] = '0 0';\n  };\n\n  BScroll.prototype._zoomTo = function (scale, originX, originY, startScale) {\n    this.scaled = true;\n\n    var lastScale = scale / (startScale || this.scale);\n    this.setScale(scale);\n\n    this.refresh();\n\n    var newX = Math.round(this.startX - (originX - this.relativeX) * (lastScale - 1));\n    var newY = Math.round(this.startY - (originY - this.relativeY) * (lastScale - 1));\n\n    if (newX > this.minScrollX) {\n      newX = this.minScrollX;\n    } else if (newX < this.maxScrollX) {\n      newX = this.maxScrollX;\n    }\n\n    if (newY > this.minScrollY) {\n      newY = this.minScrollY;\n    } else if (newY < this.maxScrollY) {\n      newY = this.maxScrollY;\n    }\n\n    if (this.x !== newX || this.y !== newY) {\n      this.scrollTo(newX, newY, this.options.bounceTime);\n    }\n\n    this.scaled = false;\n  };\n\n  BScroll.prototype.zoomTo = function (scale, x, y) {\n    var _offsetToBody = offsetToBody(this.wrapper),\n        left = _offsetToBody.left,\n        top = _offsetToBody.top;\n\n    var originX = x + left - this.x;\n    var originY = y + top - this.y;\n    this._zoomTo(scale, originX, originY);\n  };\n\n  BScroll.prototype._zoomStart = function (e) {\n    var firstFinger = e.touches[0];\n    var secondFinger = e.touches[1];\n    var deltaX = Math.abs(firstFinger.pageX - secondFinger.pageX);\n    var deltaY = Math.abs(firstFinger.pageY - secondFinger.pageY);\n\n    this.startDistance = getDistance(deltaX, deltaY);\n    this.startScale = this.scale;\n\n    var _offsetToBody2 = offsetToBody(this.wrapper),\n        left = _offsetToBody2.left,\n        top = _offsetToBody2.top;\n\n    this.originX = Math.abs(firstFinger.pageX + secondFinger.pageX) / 2 + left - this.x;\n    this.originY = Math.abs(firstFinger.pageY + secondFinger.pageY) / 2 + top - this.y;\n\n    this.trigger('zoomStart');\n  };\n\n  BScroll.prototype._zoom = function (e) {\n    if (!this.enabled || this.destroyed || eventType[e.type] !== this.initiated) {\n      return;\n    }\n\n    if (this.options.preventDefault) {\n      e.preventDefault();\n    }\n\n    if (this.options.stopPropagation) {\n      e.stopPropagation();\n    }\n\n    var firstFinger = e.touches[0];\n    var secondFinger = e.touches[1];\n    var deltaX = Math.abs(firstFinger.pageX - secondFinger.pageX);\n    var deltaY = Math.abs(firstFinger.pageY - secondFinger.pageY);\n    var distance = getDistance(deltaX, deltaY);\n    var scale = distance / this.startDistance * this.startScale;\n\n    this.scaled = true;\n\n    var _options$zoom2 = this.options.zoom,\n        _options$zoom2$min = _options$zoom2.min,\n        min = _options$zoom2$min === undefined ? 1 : _options$zoom2$min,\n        _options$zoom2$max = _options$zoom2.max,\n        max = _options$zoom2$max === undefined ? 4 : _options$zoom2$max;\n\n\n    if (scale < min) {\n      scale = 0.5 * min * Math.pow(2.0, scale / min);\n    } else if (scale > max) {\n      scale = 2.0 * max * Math.pow(0.5, max / scale);\n    }\n\n    var lastScale = scale / this.startScale;\n\n    var x = this.startX - (this.originX - this.relativeX) * (lastScale - 1);\n    var y = this.startY - (this.originY - this.relativeY) * (lastScale - 1);\n\n    this.setScale(scale);\n\n    this.scrollTo(x, y, 0);\n  };\n\n  BScroll.prototype._zoomEnd = function (e) {\n    if (!this.enabled || this.destroyed || eventType[e.type] !== this.initiated) {\n      return;\n    }\n\n    if (this.options.preventDefault) {\n      e.preventDefault();\n    }\n\n    if (this.options.stopPropagation) {\n      e.stopPropagation();\n    }\n\n    this.isInTransition = false;\n    this.isAnimating = false;\n    this.initiated = 0;\n\n    var _options$zoom3 = this.options.zoom,\n        _options$zoom3$min = _options$zoom3.min,\n        min = _options$zoom3$min === undefined ? 1 : _options$zoom3$min,\n        _options$zoom3$max = _options$zoom3.max,\n        max = _options$zoom3$max === undefined ? 4 : _options$zoom3$max;\n\n\n    var scale = this.scale > max ? max : this.scale < min ? min : this.scale;\n\n    this._zoomTo(scale, this.originX, this.originY, this.startScale);\n\n    this.trigger('zoomEnd');\n  };\n}\n\n// import { ease } from '../util/ease'\n\n// Number of items to instantiate beyond current view in the scroll direction.\nvar RUNWAY_ITEMS = 30;\n\n// Number of items to instantiate beyond current view in the opposite direction.\nvar RUNWAY_ITEMS_OPPOSITE = 10;\n\n// The animation interval (in ms) for fading in content from tombstones.\nvar ANIMATION_DURATION_MS = 200;\n\n// The number of pixels of default additional length to allow scrolling to.\nvar DEFAULT_SCROLL_RUNWAY = 2000;\n\nfunction infiniteMixin(BScroll) {\n  BScroll.prototype._initInfinite = function () {\n    this.options.probeType = 3;\n    this.maxScrollY = -DEFAULT_SCROLL_RUNWAY;\n    this.infiniteScroller = new InfiniteScroller(this, this.options.infinity);\n  };\n}\n\nfunction isTombstoneNode(node) {\n  if (node && node.classList) {\n    return node.classList.contains('tombstone');\n  }\n}\n\nfunction InfiniteScroller(scroller, options) {\n  var _this = this;\n\n  this.options = options;\n  assert(typeof this.options.createTombstone === 'function', 'Infinite scroll need createTombstone Function to create tombstone');\n\n  assert(typeof this.options.fetch === 'function', 'Infinite scroll need fetch Function to fetch new data.');\n\n  assert(typeof this.options.render === 'function', 'Infinite scroll need render Function to render each item.');\n\n  this.firstAttachedItem = 0;\n  this.lastAttachedItem = 0;\n\n  this.anchorScrollTop = 0;\n  this.anchorItem = {\n    index: 0,\n    offset: 0\n  };\n  this.tombstoneHeight = 0;\n  this.tombstoneWidth = 0;\n  this.tombstones = [];\n\n  this.items = [];\n  this.loadedItems = 0;\n  this.requestInProgress = false;\n  this.hasMore = true;\n\n  this.scroller = scroller;\n  this.wrapperEl = this.scroller.wrapper;\n  this.scrollerEl = this.scroller.scroller;\n  this.scroller.on('scroll', function () {\n    _this.onScroll();\n  });\n  this.scroller.on('resize', function () {\n    _this.onResize();\n  });\n  this.scroller.on('destroy', function () {\n    _this.destroy();\n  });\n\n  // wait scroll core init\n  setTimeout(function () {\n    _this.onResize();\n  });\n}\n\nInfiniteScroller.prototype.destroy = function () {\n  var _this2 = this;\n\n  this.items.forEach(function (item) {\n    if (item.node) {\n      _this2.scrollerEl.removeChild(item.node);\n      item.node = null;\n    }\n  });\n  this.scroller.infiniteScroller = null;\n  this.scroller = null;\n  this.wrapperEl = null;\n  this.scrollerEl = null;\n  this.items = null;\n  this.tombstones = null;\n};\n\nInfiniteScroller.prototype.onScroll = function () {\n  var scrollTop = -this.scroller.y;\n  var delta = scrollTop - this.anchorScrollTop;\n  if (scrollTop === 0) {\n    this.anchorItem = {\n      index: 0,\n      offset: 0\n    };\n  } else {\n    this.anchorItem = this._calculateAnchoredItem(this.anchorItem, delta);\n  }\n\n  this.anchorScrollTop = scrollTop;\n  var lastScreenItem = this._calculateAnchoredItem(this.anchorItem, this.scroller.wrapperHeight);\n\n  var start = this.anchorItem.index;\n  var end = lastScreenItem.index;\n  if (delta < 0) {\n    start -= RUNWAY_ITEMS;\n    end += RUNWAY_ITEMS_OPPOSITE;\n  } else {\n    start -= RUNWAY_ITEMS_OPPOSITE;\n    end += RUNWAY_ITEMS;\n  }\n  this.fill(start, end);\n  this.maybeRequestContent();\n};\n\nInfiniteScroller.prototype.onResize = function () {\n  var tombstone = this.options.createTombstone();\n  tombstone.style.position = 'absolute';\n  this.scrollerEl.appendChild(tombstone);\n  tombstone.style.display = '';\n  this.tombstoneHeight = tombstone.offsetHeight;\n  this.tombstoneWidth = tombstone.offsetWidth;\n  this.scrollerEl.removeChild(tombstone);\n\n  for (var i = 0; i < this.items.length; i++) {\n    this.items[i].height = this.items[i].width = 0;\n  }\n\n  this.onScroll();\n};\n\nInfiniteScroller.prototype.fill = function (start, end) {\n  this.firstAttachedItem = Math.max(0, start);\n  if (!this.hasMore) {\n    end = Math.min(end, this.items.length);\n  }\n  this.lastAttachedItem = end;\n  this.attachContent();\n};\n\nInfiniteScroller.prototype.maybeRequestContent = function () {\n  var _this3 = this;\n\n  if (this.requestInProgress || !this.hasMore) {\n    return;\n  }\n  var itemsNeeded = this.lastAttachedItem - this.loadedItems;\n  if (itemsNeeded <= 0) {\n    return;\n  }\n  this.requestInProgress = true;\n  this.options.fetch(itemsNeeded).then(function (items) {\n    _this3.requestInProgress = false;\n    if (items) {\n      _this3.addContent(items);\n    } else {\n      _this3.hasMore = false;\n      var tombstoneLen = _this3._removeTombstones();\n      var curPos = 0;\n      if (_this3.anchorItem.index <= _this3.items.length) {\n        curPos = _this3._fixScrollPosition();\n        _this3._setupAnimations({}, curPos);\n        _this3.scroller.resetPosition(_this3.scroller.options.bounceTime);\n      } else {\n        _this3.anchorItem.index -= tombstoneLen;\n        curPos = _this3._fixScrollPosition();\n        _this3._setupAnimations({}, curPos);\n        _this3.scroller.stop();\n        _this3.scroller.resetPosition();\n        _this3.onScroll();\n      }\n    }\n  });\n};\n\nInfiniteScroller.prototype.addContent = function (items) {\n  for (var i = 0; i < items.length; i++) {\n    if (this.items.length <= this.loadedItems) {\n      this._addItem();\n    }\n    this.items[this.loadedItems++].data = items[i];\n  }\n  this.attachContent();\n  this.maybeRequestContent();\n};\n\nInfiniteScroller.prototype.attachContent = function () {\n  var unusedNodes = this._collectUnusedNodes();\n  var tombstoneAnimations = this._createDOMNodes(unusedNodes);\n  this._cleanupUnusedNodes(unusedNodes);\n  this._cacheNodeSize();\n  var curPos = this._fixScrollPosition();\n  this._setupAnimations(tombstoneAnimations, curPos);\n};\n\nInfiniteScroller.prototype.resetMore = function () {\n  this.hasMore = true;\n};\n\nInfiniteScroller.prototype._removeTombstones = function () {\n  var markIndex = void 0;\n  var tombstoneLen = 0;\n  var itemLen = this.items.length;\n  for (var i = 0; i < itemLen; i++) {\n    var currentNode = this.items[i].node;\n    var currentData = this.items[i].data;\n    if ((!currentNode || isTombstoneNode(currentNode)) && !currentData) {\n      if (!markIndex) {\n        markIndex = i;\n      }\n      if (currentNode) {\n        this.scrollerEl.removeChild(currentNode);\n      }\n    }\n  }\n  tombstoneLen = itemLen - markIndex;\n  this.items.splice(markIndex);\n  this.lastAttachedItem = Math.min(this.lastAttachedItem, this.items.length);\n  return tombstoneLen;\n};\n\nInfiniteScroller.prototype._collectUnusedNodes = function () {\n  var unusedNodes = [];\n  for (var i = 0; i < this.items.length; i++) {\n    // Skip the items which should be visible.\n    if (i === this.firstAttachedItem) {\n      i = this.lastAttachedItem - 1;\n      continue;\n    }\n    var currentNode = this.items[i].node;\n    if (currentNode) {\n      if (isTombstoneNode(currentNode)) {\n        // Cache tombstones for reuse\n        this.tombstones.push(currentNode);\n        this.tombstones[this.tombstones.length - 1].style.display = 'none';\n      } else {\n        unusedNodes.push(currentNode);\n      }\n    }\n    this.items[i].node = null;\n  }\n  return unusedNodes;\n};\n\nInfiniteScroller.prototype._createDOMNodes = function (unusedNodes) {\n  var tombstoneAnimations = {};\n  for (var i = this.firstAttachedItem; i < this.lastAttachedItem; i++) {\n    while (this.items.length <= i) {\n      this._addItem();\n    }\n    var currentNode = this.items[i].node;\n    var currentData = this.items[i].data;\n    if (currentNode) {\n      if (isTombstoneNode(currentNode) && currentData) {\n        currentNode.style.zIndex = 1;\n        tombstoneAnimations[i] = [currentNode, this.items[i].top - this.anchorScrollTop];\n        this.items[i].node = null;\n      } else {\n        continue;\n      }\n    }\n    var node = currentData ? this.options.render(currentData, unusedNodes.pop()) : this._getTombStone();\n    node.style.position = 'absolute';\n    this.items[i].top = -1;\n    this.scrollerEl.appendChild(node);\n    this.items[i].node = node;\n  }\n  return tombstoneAnimations;\n};\n\nInfiniteScroller.prototype._cleanupUnusedNodes = function (unusedNodes) {\n  while (unusedNodes.length) {\n    this.scrollerEl.removeChild(unusedNodes.pop());\n  }\n};\n\nInfiniteScroller.prototype._cacheNodeSize = function () {\n  for (var i = this.firstAttachedItem; i < this.lastAttachedItem; i++) {\n    var item = this.items[i];\n    // Only cache the height if we have the real contents, not a placeholder.\n    if (item.data && !item.height) {\n      var isTombstone = isTombstoneNode(item.node);\n      item.height = isTombstone ? this.tombstoneHeight : item.node.offsetHeight;\n      item.width = isTombstone ? this.tombstoneWidth : item.node.offsetWidth;\n    }\n  }\n};\n\nInfiniteScroller.prototype._fixScrollPosition = function () {\n  this.anchorScrollTop = 0;\n  for (var _i = 0; _i < this.anchorItem.index; _i++) {\n    this.anchorScrollTop += this.items[_i].height || this.tombstoneHeight;\n  }\n  this.anchorScrollTop += this.anchorItem.offset;\n\n  // Position all nodes.\n  var curPos = this.anchorScrollTop - this.anchorItem.offset;\n  var i = this.anchorItem.index;\n  while (i > this.firstAttachedItem) {\n    curPos -= this.items[i - 1].height || this.tombstoneHeight;\n    i--;\n  }\n\n  return curPos;\n};\n\nInfiniteScroller.prototype._setupAnimations = function (tombstoneAnimations, curPos) {\n  var _this4 = this;\n\n  for (var i in tombstoneAnimations) {\n    var animation = tombstoneAnimations[i];\n    this.items[i].node.style[style.transform] = 'translateY(' + (this.anchorScrollTop + animation[1]) + 'px) scale(' + this.tombstoneWidth / this.items[i].width + ', ' + this.tombstoneHeight / this.items[i].height + ')';\n    // Call offsetTop on the nodes to be animated to force them to apply current transforms.\n    /* eslint-disable no-unused-expressions */\n    this.items[i].node.offsetTop;\n    animation[0].offsetTop;\n    this.items[i].node.style[style.transition] = cssVendor + 'transform ' + ANIMATION_DURATION_MS + 'ms';\n  }\n\n  for (var _i2 = this.firstAttachedItem; _i2 < this.lastAttachedItem; _i2++) {\n    var _animation = tombstoneAnimations[_i2];\n    if (_animation) {\n      var tombstoneNode = _animation[0];\n      tombstoneNode.style[style.transition] = cssVendor + 'transform ' + ANIMATION_DURATION_MS + 'ms, opacity ' + ANIMATION_DURATION_MS + 'ms';\n      tombstoneNode.style[style.transform] = 'translateY(' + curPos + 'px) scale(' + this.items[_i2].width / this.tombstoneWidth + ', ' + this.items[_i2].height / this.tombstoneHeight + ')';\n      tombstoneNode.style.opacity = 0;\n    }\n    if (curPos !== this.items[_i2].top) {\n      if (!_animation) {\n        this.items[_i2].node.style[style.transition] = '';\n      }\n      this.items[_i2].node.style[style.transform] = 'translateY(' + curPos + 'px)';\n    }\n    this.items[_i2].top = curPos;\n    curPos += this.items[_i2].height || this.tombstoneHeight;\n  }\n\n  this.scroller.maxScrollY = -(curPos - this.scroller.wrapperHeight + (this.hasMore ? DEFAULT_SCROLL_RUNWAY : 0));\n\n  setTimeout(function () {\n    for (var _i3 in tombstoneAnimations) {\n      var _animation2 = tombstoneAnimations[_i3];\n      _animation2[0].style.display = 'none';\n      // Tombstone can be recycled now.\n      _this4.tombstones.push(_animation2[0]);\n    }\n  }, ANIMATION_DURATION_MS);\n};\n\nInfiniteScroller.prototype._getTombStone = function () {\n  var tombstone = this.tombstones.pop();\n  if (tombstone) {\n    tombstone.style.display = '';\n    tombstone.style.opacity = 1;\n    tombstone.style[style.transform] = '';\n    tombstone.style[style.transition] = '';\n    return tombstone;\n  }\n  return this.options.createTombstone();\n};\n\nInfiniteScroller.prototype._addItem = function () {\n  this.items.push({\n    data: null,\n    node: null,\n    height: 0,\n    width: 0,\n    top: 0\n  });\n};\n\nInfiniteScroller.prototype._calculateAnchoredItem = function (initialAnchor, delta) {\n  if (delta === 0) {\n    return initialAnchor;\n  }\n  var i = initialAnchor.index;\n  var tombstones = 0;\n\n  delta += initialAnchor.offset;\n  if (delta < 0) {\n    while (delta < 0 && i > 0 && this.items[i - 1].height) {\n      delta += this.items[i - 1].height;\n      i--;\n    }\n    tombstones = Math.max(-i, Math.ceil(Math.min(delta, 0) / this.tombstoneHeight));\n  } else {\n    while (delta > 0 && i < this.items.length && this.items[i].height && this.items[i].height < delta) {\n      delta -= this.items[i].height;\n      i++;\n    }\n    if (i >= this.items.length || !this.items[i].height) {\n      tombstones = Math.floor(Math.max(delta, 0) / this.tombstoneHeight);\n    }\n  }\n  i += tombstones;\n  delta -= tombstones * this.tombstoneHeight;\n\n  return {\n    index: i,\n    offset: delta\n  };\n};\n\nfunction BScroll(el, options) {\n  this.wrapper = typeof el === 'string' ? document.querySelector(el) : el;\n  if (!this.wrapper) {\n    warn('Can not resolve the wrapper DOM.');\n  }\n  this.scroller = this.wrapper.children[0];\n  if (!this.scroller) {\n    warn('The wrapper need at least one child element to be scroller.');\n  }\n  // cache style for better performance\n  this.scrollerStyle = this.scroller.style;\n\n  this._init(el, options);\n}\n\ninitMixin(BScroll);\ncoreMixin(BScroll);\neventMixin(BScroll);\nsnapMixin(BScroll);\nwheelMixin(BScroll);\nscrollbarMixin(BScroll);\npullDownMixin(BScroll);\npullUpMixin(BScroll);\nmouseWheelMixin(BScroll);\nzoomMixin(BScroll);\ninfiniteMixin(BScroll);\n\nBScroll.Version = '1.13.0';\n\nexport default BScroll;\n","<template>\n<div>\n  <div class=\"loading-block\">\n\t\t\t<span class=\"span1\"><i class=\"slider loading1\"></i></span>\n\t\t\t<span class=\"span2\"><i class=\"slider loading2\"></i></span>\n\t\t\t<span class=\"span3\"><i class=\"slider loading2\"></i></span>\n\t\t\t<span class=\"span4\"><i class=\"slider loading2\"></i></span>\n\t\t\t<span class=\"span5\"><i class=\"slider\"></i></span>\n\t\t</div>\n  <div class=\"contaniner\">\n    <div class=\"swiper-container\">\n        <div class=\"swiper-wrapper\">\n          <div class=\"swiper-slide\">\n            <a :style=\"styleObj\" class='slidecontent banner1'>\n              <img :src=\"require('../../assets/img/banner1.png')\" />\n            </a>\n          </div>\n          <div class=\"swiper-slide\">\n            <a :style=\"styleObj1\" class='slidecontent banner2'>\n              <img :src=\"require('../../assets/img/banner2.png')\" />\n            </a>\n          </div>\n        </div>\n        <div class=\"swiper-pagination\"></div>\n    </div>\n  </div>\n  </div>\n</template>\n\n<script>\n// @ is an alias to /src\nimport Swiper from \"swiper\";\nimport \"swiper/dist/css/swiper.min.css\";\nimport BScroll from \"better-scroll\";\nimport $ from \"jquery\";\nexport default {\n  name: \"home\",\n  components: {},\n  data() {\n    return {\n      mainslider: false,\n      isLoaded: false,\n      myswiper: null,\n      styleObj: {\n        \"background-image\": require(\"../../assets/img/banner1.png\")\n      },\n      styleObj1: {\n        \"background-image\": require(\"../../assets/img/banner2.png\")\n      }\n    };\n  },\n  created() {},\n  mounted() {\n    const that = this;\n    this.myswiper = new Swiper(\".swiper-container\", {\n      pagination: {\n        el: \".swiper-pagination\",\n        clickable: true,\n        autoplay: true,\n        loop: true,\n        renderBullet: function(index, className) {\n          return '<span class=\"' + className + '\"></span>';\n        }\n      }\n    });\n    $(\".loading-block .span5 i\").on(\"webkitAnimationEnd\", function() {\n      $(\".contaniner\").addClass(\"scaleBanner\");\n      $(\".loading-block\").hide();\n    });\n\n    $(\".loading-block .span5 i\").on(\"animationEnd\", function() {\n      $(\".contaniner\").addClass(\"scaleBanner\");\n      $(\".loading-block\").hide();\n    });\n\n    $(\".loading-block .span4 .slider\").on(\"webkitAnimationEnd\", function() {\n      $(\".span1 .slider\").removeClass(\"loading1\");\n      $(\".span2 .slider\").removeClass(\"loading2\");\n      $(\".span3 .slider\").removeClass(\"loading2\");\n      $(\".span4 .slider\").removeClass(\"loading2\");\n      if (that.isLoaded) {\n        $(\".loading-block .span5 .slider\").addClass(\"loading2\");\n      } else {\n        setTimeout(function() {\n          $(\".span1 .slider\").addClass(\"loading1\");\n          $(\".span2 .slider\").addClass(\"loading2\");\n          $(\".span3 .slider\").addClass(\"loading2\");\n          $(\".span4 .slider\").addClass(\"loading2\");\n        }, 100);\n      }\n    });\n\n    $(\".loading-block .span4 .slider\").on(\"animationEnd\", function() {\n      $(\".span1 .slider\").removeClass(\"loading1\");\n      $(\".span2 .slider\").removeClass(\"loading2\");\n      $(\".span3 .slider\").removeClass(\"loading2\");\n      $(\".span4 .slider\").removeClass(\"loading2\");\n      if (that.isLoaded) {\n        $(\".loading-block .span5 .slider\").addClass(\"loading2\");\n      } else {\n        setTimeout(function() {\n          $(\".span1 .slider\").addClass(\"loading1\");\n          $(\".span2 .slider\").addClass(\"loading2\");\n          $(\".span3 .slider\").addClass(\"loading2\");\n          $(\".span4 .slider\").addClass(\"loading2\");\n        }, 100);\n      }\n    });\n\n    $(\"img\").imgLoad({\n      time: 10000,\n      callback: function() {\n        that.isLoaded = true;\n      }\n    });\n  }\n};\n</script>\n<style>\n.swiper-wrapper {\n  height: 100%;\n}\n.slider,\n.slider * {\n  width: 100%;\n  height: 100%;\n}\n.slide-item {\n  float: left;\n}\n</style>\n","import mod from \"-!../../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js!../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./index.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js!../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./index.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./index.vue?vue&type=template&id=579782ef&\"\nimport script from \"./index.vue?vue&type=script&lang=js&\"\nexport * from \"./index.vue?vue&type=script&lang=js&\"\nimport style0 from \"./index.vue?vue&type=style&index=0&lang=css&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\ncomponent.options.__file = \"index.vue\"\nexport default component.exports","module.exports = __webpack_public_path__ + \"img/banner1.8a506fd9.png\";","import mod from \"-!../../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--6-oneOf-1-0!../../../node_modules/css-loader/index.js??ref--6-oneOf-1-1!../../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../../node_modules/postcss-loader/lib/index.js??ref--6-oneOf-1-2!../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./index.vue?vue&type=style&index=0&lang=css&\"; export default mod; export * from \"-!../../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--6-oneOf-1-0!../../../node_modules/css-loader/index.js??ref--6-oneOf-1-1!../../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../../node_modules/postcss-loader/lib/index.js??ref--6-oneOf-1-2!../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./index.vue?vue&type=style&index=0&lang=css&\"","module.exports = __webpack_public_path__ + \"img/banner2.047edeb9.png\";"],"sourceRoot":""}